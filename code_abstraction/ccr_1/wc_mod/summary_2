Considering text section (0/8): "main"
--------
.dot code for CFG of text section main for Vanilla
diGraph main_Vanilla{
	main_0  [label="[main_276,main_277]"]
	main_1  [label="[main_278,main_278]"]
	main_2  [label="[main_285,main_287]"]
	main_3  [label="[main_288,main_288]"]
	main_4  [label="[main_289,main_292]"]
	main_5  [label="[main_296,main_299]"]
	main_6  [label="[main_300,main_300]"]
	main_7  [label="[.label_28,main_305]"]
	main_8  [label="[.label_30,main_295]"]
	main_9  [label="[.label_27,.label_27]"]
	main_10  [label="[.label_29,main_284]"]
	main_11  [label="[main,main_275]"]

	main_0 -> main_1;

	main_2 -> main_3;
	main_3 -> main_4;
	main_4 -> main_10;
	main_5 -> main_6;
	main_6 -> main_7;

	main_8 -> main_7 [label="ZF || SF != OF"];
	main_8 -> main_5 [label="!ZF && SF == OF"];
	main_9 -> main_10;
	main_10 -> main_8 [label="SF == OF"];
	main_10 -> main_2 [label="SF != OF"];
	main_11 -> main_9 [label="SF == OF"];
	main_11 -> main_0 [label="SF != OF"];
}
--------
--------
.dot code for CFG of text section main for Randomized
diGraph main_Randomized{
	main_0  [label="[main_238,main_239]"]
	main_1  [label="[main_240,main_240]"]
	main_2  [label="[main_247,main_249]"]
	main_3  [label="[main_250,main_250]"]
	main_4  [label="[main_251,main_254]"]
	main_5  [label="[main_258,main_261]"]
	main_6  [label="[main_262,main_262]"]
	main_7  [label="[.label_17,main_267]"]
	main_8  [label="[.label_19,main_257]"]
	main_9  [label="[.label_16,.label_16]"]
	main_10  [label="[.label_18,main_246]"]
	main_11  [label="[main,main_237]"]

	main_0 -> main_1;

	main_2 -> main_3;
	main_3 -> main_4;
	main_4 -> main_10;
	main_5 -> main_6;
	main_6 -> main_7;

	main_8 -> main_7 [label="ZF || SF != OF"];
	main_8 -> main_5 [label="!ZF && SF == OF"];
	main_9 -> main_10;
	main_10 -> main_8 [label="SF == OF"];
	main_10 -> main_2 [label="SF != OF"];
	main_11 -> main_9 [label="SF == OF"];
	main_11 -> main_0 [label="SF != OF"];
}
--------
Starting Node: 11

Edges: 0 ----> 1, , 2 ----> 3, 3 ----> 4, 4 ----> 10, 5 ----> 6, 6 ----> 7, , 8 --ZF || SF != OF--> 7, 8 --!ZF && SF == OF--> 5, 9 ----> 10, 10 --SF == OF--> 8, 10 --SF != OF--> 2, 11 --SF == OF--> 9, 11 --SF != OF--> 0

Symbolic Execution for Binary "Vanilla":
Current text section: "main"
node 0:
RAX := (TakeBits: <63,8>(Reg: RAX) . Value: 0), RDI := Dereference: [Var: label_32,8]
node 1:
RAX := errf@()
node 2:
RAX := sextend(Dereference: [(Var: RSP0 - Value: 28),4],32,64), RCX := Dereference: [(Var: RSP0 - Value: 24),8], RDI := Dereference: [(Dereference: [(Var: RSP0 - Value: 24),8] + TakeBits: <63,0>((sextend(Dereference: [(Var: RSP0 - Value: 28),4],32,64) * Value: 8))),8]
node 3:
RAX := counter@()
node 4:
RAX := (Dereference: [(Var: RSP0 - Value: 28),4] + Value: 1)
[(Var: RSP0 - Value: 28),4] := (Dereference: [(Var: RSP0 - Value: 28),4] + Value: 1)
ZF := (Dereference: [(Var: RSP0 - Value: 28),4] + Value: 1), CF := (Dereference: [(Var: RSP0 - Value: 28),4] + Value: 1), SF := (Dereference: [(Var: RSP0 - Value: 28),4] + Value: 1), OF := (Dereference: [(Var: RSP0 - Value: 28),4] + Value: 1), PF := (Dereference: [(Var: RSP0 - Value: 28),4] + Value: 1)
node 5:
RCX := Dereference: [Var: total_lcount,8], RDX := Dereference: [Var: total_wcount,8], RDI := Dereference: [Var: label_31,8], RSI := Dereference: [Var: total_ccount,8]
node 6:
RAX := report@()
node 7:
RAX := Value: 0
ZF := (Var: RSP0 - Value: 8), CF := (Var: RSP0 - Value: 8), SF := (Var: RSP0 - Value: 8), OF := (Var: RSP0 - Value: 8), PF := (Var: RSP0 - Value: 8)
node 8:
ZF := CMP(Dereference: [(Var: RSP0 - Value: 16),4],Value: 2), CF := CMP(Dereference: [(Var: RSP0 - Value: 16),4],Value: 2), SF := CMP(Dereference: [(Var: RSP0 - Value: 16),4],Value: 2), OF := CMP(Dereference: [(Var: RSP0 - Value: 16),4],Value: 2), PF := CMP(Dereference: [(Var: RSP0 - Value: 16),4],Value: 2)
node 9:
[(Var: RSP0 - Value: 28),4] := Value: 1
node 10:
RAX := Dereference: [(Var: RSP0 - Value: 28),4]
ZF := CMP(Dereference: [(Var: RSP0 - Value: 28),4],Dereference: [(Var: RSP0 - Value: 16),4]), CF := CMP(Dereference: [(Var: RSP0 - Value: 28),4],Dereference: [(Var: RSP0 - Value: 16),4]), SF := CMP(Dereference: [(Var: RSP0 - Value: 28),4],Dereference: [(Var: RSP0 - Value: 16),4]), OF := CMP(Dereference: [(Var: RSP0 - Value: 28),4],Dereference: [(Var: RSP0 - Value: 16),4]), PF := CMP(Dereference: [(Var: RSP0 - Value: 28),4],Dereference: [(Var: RSP0 - Value: 16),4])
node 11:
[(Var: RSP0 - Value: 8),8] := Var: RBP0, [(Var: RSP0 - Value: 12),4] := Value: 0, [(Var: RSP0 - Value: 16),4] := TakeBits: <31,0>(Reg: RDI), [(Var: RSP0 - Value: 24),8] := Reg: RSI
ZF := CMP(TakeBits: <31,0>(Reg: RDI),Value: 2), CF := CMP(TakeBits: <31,0>(Reg: RDI),Value: 2), SF := CMP(TakeBits: <31,0>(Reg: RDI),Value: 2), OF := CMP(TakeBits: <31,0>(Reg: RDI),Value: 2), PF := CMP(TakeBits: <31,0>(Reg: RDI),Value: 2)
--------

Starting Node: 11

Edges: 0 ----> 1, , 2 ----> 3, 3 ----> 4, 4 ----> 10, 5 ----> 6, 6 ----> 7, , 8 --ZF || SF != OF--> 7, 8 --!ZF && SF == OF--> 5, 9 ----> 10, 10 --SF == OF--> 8, 10 --SF != OF--> 2, 11 --SF == OF--> 9, 11 --SF != OF--> 0

Symbolic Execution for Binary "Randomized":
Current text section: "main"
node 0:
RAX := (TakeBits: <63,8>(Reg: RAX) . Value: 0), RDI := Dereference: [Var: label_20,8]
node 1:
RAX := errf@()
node 2:
RAX := sextend(Dereference: [(Var: RSP0 - Value: 28),4],32,64), RCX := Dereference: [(Var: RSP0 - Value: 24),8], RDI := Dereference: [(Dereference: [(Var: RSP0 - Value: 24),8] + TakeBits: <63,0>((sextend(Dereference: [(Var: RSP0 - Value: 28),4],32,64) * Value: 8))),8]
node 3:
RAX := counter@()
node 4:
RAX := (Dereference: [(Var: RSP0 - Value: 28),4] + Value: 1)
[(Var: RSP0 - Value: 28),4] := (Dereference: [(Var: RSP0 - Value: 28),4] + Value: 1)
ZF := (Dereference: [(Var: RSP0 - Value: 28),4] + Value: 1), CF := (Dereference: [(Var: RSP0 - Value: 28),4] + Value: 1), SF := (Dereference: [(Var: RSP0 - Value: 28),4] + Value: 1), OF := (Dereference: [(Var: RSP0 - Value: 28),4] + Value: 1), PF := (Dereference: [(Var: RSP0 - Value: 28),4] + Value: 1)
node 5:
RCX := Dereference: [Var: total_lcount,8], RDX := Dereference: [Var: total_wcount,8], RDI := Dereference: [Var: label_21,8], RSI := Dereference: [Var: total_ccount,8]
node 6:
RAX := report@()
node 7:
RAX := Value: 0
ZF := (Var: RSP0 - Value: 8), CF := (Var: RSP0 - Value: 8), SF := (Var: RSP0 - Value: 8), OF := (Var: RSP0 - Value: 8), PF := (Var: RSP0 - Value: 8)
node 8:
ZF := CMP(Dereference: [(Var: RSP0 - Value: 16),4],Value: 2), CF := CMP(Dereference: [(Var: RSP0 - Value: 16),4],Value: 2), SF := CMP(Dereference: [(Var: RSP0 - Value: 16),4],Value: 2), OF := CMP(Dereference: [(Var: RSP0 - Value: 16),4],Value: 2), PF := CMP(Dereference: [(Var: RSP0 - Value: 16),4],Value: 2)
node 9:
[(Var: RSP0 - Value: 28),4] := Value: 1
node 10:
RAX := Dereference: [(Var: RSP0 - Value: 28),4]
ZF := CMP(Dereference: [(Var: RSP0 - Value: 28),4],Dereference: [(Var: RSP0 - Value: 16),4]), CF := CMP(Dereference: [(Var: RSP0 - Value: 28),4],Dereference: [(Var: RSP0 - Value: 16),4]), SF := CMP(Dereference: [(Var: RSP0 - Value: 28),4],Dereference: [(Var: RSP0 - Value: 16),4]), OF := CMP(Dereference: [(Var: RSP0 - Value: 28),4],Dereference: [(Var: RSP0 - Value: 16),4]), PF := CMP(Dereference: [(Var: RSP0 - Value: 28),4],Dereference: [(Var: RSP0 - Value: 16),4])
node 11:
[(Var: RSP0 - Value: 8),8] := Var: RBP0, [(Var: RSP0 - Value: 12),4] := Value: 0, [(Var: RSP0 - Value: 16),4] := TakeBits: <31,0>(Reg: RDI), [(Var: RSP0 - Value: 24),8] := Reg: RSI
ZF := CMP(TakeBits: <31,0>(Reg: RDI),Value: 2), CF := CMP(TakeBits: <31,0>(Reg: RDI),Value: 2), SF := CMP(TakeBits: <31,0>(Reg: RDI),Value: 2), OF := CMP(TakeBits: <31,0>(Reg: RDI),Value: 2), PF := CMP(TakeBits: <31,0>(Reg: RDI),Value: 2)
--------

same_behavior for the nodes: main -> main_275 and main -> main_237

same_behavior checking these two SStates:

SA || [(Var: RSP0 - Value: 8),8] := Var: RBP0, [(Var: RSP0 - Value: 12),4] := Value: 0, [(Var: RSP0 - Value: 16),4] := TakeBits: <31,0>(Reg: RDI), [(Var: RSP0 - Value: 24),8] := Reg: RSI
SA || ZF := CMP(TakeBits: <31,0>(Reg: RDI),Value: 2), CF := CMP(TakeBits: <31,0>(Reg: RDI),Value: 2), SF := CMP(TakeBits: <31,0>(Reg: RDI),Value: 2), OF := CMP(TakeBits: <31,0>(Reg: RDI),Value: 2), PF := CMP(TakeBits: <31,0>(Reg: RDI),Value: 2)

SB || [(Var: RSP0 - Value: 8),8] := Var: RBP0, [(Var: RSP0 - Value: 12),4] := Value: 0, [(Var: RSP0 - Value: 16),4] := TakeBits: <31,0>(Reg: RDI), [(Var: RSP0 - Value: 24),8] := Reg: RSI
SB || ZF := CMP(TakeBits: <31,0>(Reg: RDI),Value: 2), CF := CMP(TakeBits: <31,0>(Reg: RDI),Value: 2), SF := CMP(TakeBits: <31,0>(Reg: RDI),Value: 2), OF := CMP(TakeBits: <31,0>(Reg: RDI),Value: 2), PF := CMP(TakeBits: <31,0>(Reg: RDI),Value: 2)

Reg Chk: True
local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 8 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 8 64]
(v1 := v2):
E_var "RBP0" 64
E_var "RBP0" 64
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 12 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 12 64]
(v1 := v2):
E_val 0 32
E_val 0 32
b0: True b1: True
local_var_cmp called

local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 16 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 16 64]
(v1 := v2):
E_app (TakeBits 31 0) [E_reg RDI]
E_app (TakeBits 31 0) [E_reg RDI]
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 24 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 24 64]
(v1 := v2):
E_reg RSI
E_reg RSI
b0: True b1: True
Mem Chk: True
Result: Success
Nodes main -> main_275 and main -> main_237 have been verified to do the same.

same_behavior for the nodes: .label_27 -> .label_27 and .label_16 -> .label_16

same_behavior checking these two SStates:

SA || [(Var: RSP0 - Value: 28),4] := Value: 1

SB || [(Var: RSP0 - Value: 28),4] := Value: 1

Reg Chk: True
local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 28 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 28 64]
(v1 := v2):
E_val 1 32
E_val 1 32
b0: True b1: True
Mem Chk: True
Result: Success
Nodes .label_27 -> .label_27 and .label_16 -> .label_16 have been verified to do the same.

same_behavior for the nodes: .label_29 -> main_284 and .label_18 -> main_246

same_behavior checking these two SStates:

SA || RAX := Dereference: [(Var: RSP0 - Value: 28),4]
SA || ZF := CMP(Dereference: [(Var: RSP0 - Value: 28),4],Dereference: [(Var: RSP0 - Value: 16),4]), CF := CMP(Dereference: [(Var: RSP0 - Value: 28),4],Dereference: [(Var: RSP0 - Value: 16),4]), SF := CMP(Dereference: [(Var: RSP0 - Value: 28),4],Dereference: [(Var: RSP0 - Value: 16),4]), OF := CMP(Dereference: [(Var: RSP0 - Value: 28),4],Dereference: [(Var: RSP0 - Value: 16),4]), PF := CMP(Dereference: [(Var: RSP0 - Value: 28),4],Dereference: [(Var: RSP0 - Value: 16),4])

SB || RAX := Dereference: [(Var: RSP0 - Value: 28),4]
SB || ZF := CMP(Dereference: [(Var: RSP0 - Value: 28),4],Dereference: [(Var: RSP0 - Value: 16),4]), CF := CMP(Dereference: [(Var: RSP0 - Value: 28),4],Dereference: [(Var: RSP0 - Value: 16),4]), SF := CMP(Dereference: [(Var: RSP0 - Value: 28),4],Dereference: [(Var: RSP0 - Value: 16),4]), OF := CMP(Dereference: [(Var: RSP0 - Value: 28),4],Dereference: [(Var: RSP0 - Value: 16),4]), PF := CMP(Dereference: [(Var: RSP0 - Value: 28),4],Dereference: [(Var: RSP0 - Value: 16),4])

Resulting values:
Value A:
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 28 64]) 4
Value B:
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 28 64]) 4
local_var_cmp called

Reg Chk: True
Mem Chk: True
Result: Success
Nodes .label_29 -> main_284 and .label_18 -> main_246 have been verified to do the same.

same_behavior for the nodes: .label_30 -> main_295 and .label_19 -> main_257

same_behavior checking these two SStates:

SA || ZF := CMP(Dereference: [(Var: RSP0 - Value: 16),4],Value: 2), CF := CMP(Dereference: [(Var: RSP0 - Value: 16),4],Value: 2), SF := CMP(Dereference: [(Var: RSP0 - Value: 16),4],Value: 2), OF := CMP(Dereference: [(Var: RSP0 - Value: 16),4],Value: 2), PF := CMP(Dereference: [(Var: RSP0 - Value: 16),4],Value: 2)

SB || ZF := CMP(Dereference: [(Var: RSP0 - Value: 16),4],Value: 2), CF := CMP(Dereference: [(Var: RSP0 - Value: 16),4],Value: 2), SF := CMP(Dereference: [(Var: RSP0 - Value: 16),4],Value: 2), OF := CMP(Dereference: [(Var: RSP0 - Value: 16),4],Value: 2), PF := CMP(Dereference: [(Var: RSP0 - Value: 16),4],Value: 2)

Reg Chk: True
Mem Chk: True
Result: Success
Nodes .label_30 -> main_295 and .label_19 -> main_257 have been verified to do the same.

same_behavior for the nodes: .label_28 -> main_305 and .label_17 -> main_267

same_behavior checking these two SStates:

SA || RAX := Value: 0
SA || ZF := (Var: RSP0 - Value: 8), CF := (Var: RSP0 - Value: 8), SF := (Var: RSP0 - Value: 8), OF := (Var: RSP0 - Value: 8), PF := (Var: RSP0 - Value: 8)

SB || RAX := Value: 0
SB || ZF := (Var: RSP0 - Value: 8), CF := (Var: RSP0 - Value: 8), SF := (Var: RSP0 - Value: 8), OF := (Var: RSP0 - Value: 8), PF := (Var: RSP0 - Value: 8)

Resulting values:
Value A:
E_val 0 32
Value B:
E_val 0 32
Reg Chk: True
Mem Chk: True
Result: Success
Nodes .label_28 -> main_305 and .label_17 -> main_267 have been verified to do the same.

same_behavior for the nodes: main_296 -> main_299 and main_258 -> main_261

same_behavior checking these two SStates:

SA || RCX := Dereference: [Var: total_lcount,8], RDX := Dereference: [Var: total_wcount,8], RDI := Dereference: [Var: label_31,8], RSI := Dereference: [Var: total_ccount,8]

SB || RCX := Dereference: [Var: total_lcount,8], RDX := Dereference: [Var: total_wcount,8], RDI := Dereference: [Var: label_21,8], RSI := Dereference: [Var: total_ccount,8]

Resulting values:
Value A:
E_deref (E_var "total_lcount" 64) 8
Value B:
E_deref (E_var "total_lcount" 64) 8
Resulting values:
Value A:
E_deref (E_var "total_wcount" 64) 8
Value B:
E_deref (E_var "total_wcount" 64) 8
Resulting values:
Value A:
E_deref (E_var "label_31" 64) 8
Value B:
E_deref (E_var "label_21" 64) 8
Resulting values:
Value A:
E_deref (E_var "total_ccount" 64) 8
Value B:
E_deref (E_var "total_ccount" 64) 8
Reg Chk: True
Mem Chk: True
Result: Success
Nodes main_296 -> main_299 and main_258 -> main_261 have been verified to do the same.

same_behavior for the nodes: main_300 -> main_300 and main_262 -> main_262

same_behavior checking these two SStates:

SA || RAX := report@()

SB || RAX := report@()

Resulting values:
Value A:
E_app (F2 "report" "") []
Value B:
E_app (F2 "report" "") []
Reg Chk: True
Mem Chk: True
Result: Success
Nodes main_300 -> main_300 and main_262 -> main_262 have been verified to do the same.

same_behavior for the nodes: main_285 -> main_287 and main_247 -> main_249

same_behavior checking these two SStates:

SA || RAX := sextend(Dereference: [(Var: RSP0 - Value: 28),4],32,64), RCX := Dereference: [(Var: RSP0 - Value: 24),8], RDI := Dereference: [(Dereference: [(Var: RSP0 - Value: 24),8] + TakeBits: <63,0>((sextend(Dereference: [(Var: RSP0 - Value: 28),4],32,64) * Value: 8))),8]

SB || RAX := sextend(Dereference: [(Var: RSP0 - Value: 28),4],32,64), RCX := Dereference: [(Var: RSP0 - Value: 24),8], RDI := Dereference: [(Dereference: [(Var: RSP0 - Value: 24),8] + TakeBits: <63,0>((sextend(Dereference: [(Var: RSP0 - Value: 28),4],32,64) * Value: 8))),8]

Resulting values:
Value A:
E_app (SExtend 32 64) [E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 28 64]) 4]
Value B:
E_app (SExtend 32 64) [E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 28 64]) 4]
local_var_cmp called

Resulting values:
Value A:
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 24 64]) 8
Value B:
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 24 64]) 8
local_var_cmp called

Resulting values:
Value A:
E_deref (E_app (Op ADD) [E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 24 64]) 8,E_app (TakeBits 63 0) [E_app (Op MUL) [E_app (SExtend 32 64) [E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 28 64]) 4],E_val 8 64]]]) 8
Value B:
E_deref (E_app (Op ADD) [E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 24 64]) 8,E_app (TakeBits 63 0) [E_app (Op MUL) [E_app (SExtend 32 64) [E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 28 64]) 4],E_val 8 64]]]) 8
local_var_cmp called

local_var_cmp called

Reg Chk: True
Mem Chk: True
Result: Success
Nodes main_285 -> main_287 and main_247 -> main_249 have been verified to do the same.

same_behavior for the nodes: main_288 -> main_288 and main_250 -> main_250

same_behavior checking these two SStates:

SA || RAX := counter@()

SB || RAX := counter@()

Resulting values:
Value A:
E_app (F2 "counter" "") []
Value B:
E_app (F2 "counter" "") []
Reg Chk: True
Mem Chk: True
Result: Success
Nodes main_288 -> main_288 and main_250 -> main_250 have been verified to do the same.

same_behavior for the nodes: main_289 -> main_292 and main_251 -> main_254

same_behavior checking these two SStates:

SA || RAX := (Dereference: [(Var: RSP0 - Value: 28),4] + Value: 1)
SA || [(Var: RSP0 - Value: 28),4] := (Dereference: [(Var: RSP0 - Value: 28),4] + Value: 1)
SA || ZF := (Dereference: [(Var: RSP0 - Value: 28),4] + Value: 1), CF := (Dereference: [(Var: RSP0 - Value: 28),4] + Value: 1), SF := (Dereference: [(Var: RSP0 - Value: 28),4] + Value: 1), OF := (Dereference: [(Var: RSP0 - Value: 28),4] + Value: 1), PF := (Dereference: [(Var: RSP0 - Value: 28),4] + Value: 1)

SB || RAX := (Dereference: [(Var: RSP0 - Value: 28),4] + Value: 1)
SB || [(Var: RSP0 - Value: 28),4] := (Dereference: [(Var: RSP0 - Value: 28),4] + Value: 1)
SB || ZF := (Dereference: [(Var: RSP0 - Value: 28),4] + Value: 1), CF := (Dereference: [(Var: RSP0 - Value: 28),4] + Value: 1), SF := (Dereference: [(Var: RSP0 - Value: 28),4] + Value: 1), OF := (Dereference: [(Var: RSP0 - Value: 28),4] + Value: 1), PF := (Dereference: [(Var: RSP0 - Value: 28),4] + Value: 1)

Resulting values:
Value A:
E_app (Op ADD) [E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 28 64]) 4,E_val 1 32]
Value B:
E_app (Op ADD) [E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 28 64]) 4,E_val 1 32]
local_var_cmp called

Reg Chk: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 28 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 28 64]
(v1 := v2):
E_app (Op ADD) [E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 28 64]) 4,E_val 1 32]
E_app (Op ADD) [E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 28 64]) 4,E_val 1 32]
b0: True b1: True
Mem Chk: True
Result: Success
Nodes main_289 -> main_292 and main_251 -> main_254 have been verified to do the same.

same_behavior for the nodes: main_276 -> main_277 and main_238 -> main_239

same_behavior checking these two SStates:

SA || RAX := (TakeBits: <63,8>(Reg: RAX) . Value: 0), RDI := Dereference: [Var: label_32,8]

SB || RAX := (TakeBits: <63,8>(Reg: RAX) . Value: 0), RDI := Dereference: [Var: label_20,8]

Resulting values:
Value A:
E_app Concat [E_app (TakeBits 63 8) [E_reg RAX],E_val 0 8]
Value B:
E_app Concat [E_app (TakeBits 63 8) [E_reg RAX],E_val 0 8]
Resulting values:
Value A:
E_deref (E_var "label_32" 64) 8
Value B:
E_deref (E_var "label_20" 64) 8
Reg Chk: True
Mem Chk: True
Result: Success
Nodes main_276 -> main_277 and main_238 -> main_239 have been verified to do the same.

same_behavior for the nodes: main_278 -> main_278 and main_240 -> main_240

same_behavior checking these two SStates:

SA || RAX := errf@()

SB || RAX := errf@()

Resulting values:
Value A:
E_app (F2 "errf" "") []
Value B:
E_app (F2 "errf" "") []
Reg Chk: True
Mem Chk: True
Result: Success
Nodes main_278 -> main_278 and main_240 -> main_240 have been verified to do the same.

Label relationship:
label_32 <--> label_20
 <--> 
total_ccount <--> total_ccount
label_31 <--> label_21
total_wcount <--> total_wcount
total_lcount <--> total_lcount

Local variable relationship:
(Var: RSP0 - Value: 28) <--> (Var: RSP0 - Value: 28)
(Var: RSP0 - Value: 24) <--> (Var: RSP0 - Value: 24)
(Var: RSP0 - Value: 16) <--> (Var: RSP0 - Value: 16)
(Var: RSP0 - Value: 12) <--> (Var: RSP0 - Value: 12)
(Var: RSP0 - Value: 8) <--> (Var: RSP0 - Value: 8)

Succesful check!
Considering text section (1/8): "counter"
--------
.dot code for CFG of text section counter for Vanilla
diGraph counter_Vanilla{
	counter_0  [label="[counter_157,counter_159]"]
	counter_1  [label="[counter_160,counter_160]"]
	counter_2  [label="[counter_170,counter_170]"]
	counter_3  [label="[.label_22,.label_22]"]
	counter_4  [label="[counter_173,counter_173]"]
	counter_5  [label="[counter_174,counter_178]"]
	counter_6  [label="[counter_179,counter_179]"]
	counter_7  [label="[counter_180,counter_191]"]
	counter_8  [label="[.label_25,counter_164]"]
	counter_9  [label="[.label_23,.label_23]"]
	counter_10  [label="[counter_167,counter_167]"]
	counter_11  [label="[counter_168,counter_169]"]
	counter_12  [label="[counter,counter_152]"]
	counter_13  [label="[counter_153,counter_153]"]
	counter_14  [label="[counter_154,counter_156]"]

	counter_0 -> counter_1;

	counter_2 -> counter_9;
	counter_3 -> counter_4;
	counter_4 -> counter_5;
	counter_5 -> counter_6;
	counter_6 -> counter_7;

	counter_8 -> counter_9;
	counter_9 -> counter_10;
	counter_10 -> counter_11;
	counter_11 -> counter_3 [label="ZF"];
	counter_11 -> counter_2 [label="!ZF"];
	counter_12 -> counter_13;
	counter_13 -> counter_14;
	counter_14 -> counter_8 [label="!ZF"];
	counter_14 -> counter_0 [label="ZF"];
}
--------
--------
.dot code for CFG of text section counter for Randomized
diGraph counter_Randomized{
	counter_0  [label="[counter_308,counter_310]"]
	counter_1  [label="[counter_311,counter_311]"]
	counter_2  [label="[counter_321,counter_321]"]
	counter_3  [label="[.label_26,.label_26]"]
	counter_4  [label="[main_271,main_271]"]
	counter_5  [label="[main_272,main_276]"]
	counter_6  [label="[main_277,main_277]"]
	counter_7  [label="[main_278,main_289]"]
	counter_8  [label="[.label_23,counter_315]"]
	counter_9  [label="[.label_25,.label_25]"]
	counter_10  [label="[counter_318,counter_318]"]
	counter_11  [label="[counter_319,counter_320]"]
	counter_12  [label="[counter,counter_303]"]
	counter_13  [label="[counter_304,counter_304]"]
	counter_14  [label="[counter_305,counter_307]"]

	counter_0 -> counter_1;

	counter_2 -> counter_9;
	counter_3 -> counter_4;
	counter_4 -> counter_5;
	counter_5 -> counter_6;
	counter_6 -> counter_7;

	counter_8 -> counter_9;
	counter_9 -> counter_10;
	counter_10 -> counter_11;
	counter_11 -> counter_3 [label="ZF"];
	counter_11 -> counter_2 [label="!ZF"];
	counter_12 -> counter_13;
	counter_13 -> counter_14;
	counter_14 -> counter_8 [label="!ZF"];
	counter_14 -> counter_0 [label="ZF"];
}
--------
Starting Node: 12

Edges: 0 ----> 1, , 2 ----> 9, 3 ----> 4, 4 ----> 5, 5 ----> 6, 6 ----> 7, , 8 ----> 9, 9 ----> 10, 10 ----> 11, 11 --ZF--> 3, 11 --!ZF--> 2, 12 ----> 13, 13 ----> 14, 14 --!ZF--> 8, 14 --ZF--> 0

Symbolic Execution for Binary "Vanilla":
Current text section: "counter"
node 0:
RAX := (TakeBits: <63,8>(Reg: RAX) . Value: 0), RDI := Dereference: [Var: label_24,8], RSI := Dereference: [(Var: RSP0 - Value: 16),8]
node 1:
RAX := perrf@()
node 2:
skip'
node 3:
RDI := Dereference: [(Var: RSP0 - Value: 24),8]
node 4:
RAX := fclose@()
node 5:
RCX := Dereference: [Var: lcount,8], RDX := Dereference: [Var: wcount,8], RDI := Dereference: [(Var: RSP0 - Value: 16),8], RSI := Dereference: [Var: ccount,8]
[(Var: RSP0 - Value: 28),4] := TakeBits: <31,0>(Reg: RAX)
node 6:
RAX := report@()
node 7:
RCX := (Dereference: [Var: lcount,8] + Dereference: [Var: total_lcount,8])
[Var: total_ccount,8] := (Dereference: [Var: ccount,8] + Dereference: [Var: total_ccount,8]), [Var: total_lcount,8] := (Dereference: [Var: lcount,8] + Dereference: [Var: total_lcount,8]), [Var: total_wcount,8] := (Dereference: [Var: wcount,8] + Dereference: [Var: total_wcount,8])
ZF := (Var: RSP0 - Value: 8), CF := (Var: RSP0 - Value: 8), SF := (Var: RSP0 - Value: 8), OF := (Var: RSP0 - Value: 8), PF := (Var: RSP0 - Value: 8)
node 8:
[Var: ccount,8] := Value: 0, [Var: lcount,8] := Value: 0, [Var: wcount,8] := Value: 0
node 9:
RDI := Dereference: [(Var: RSP0 - Value: 24),8]
node 10:
RAX := getword@()
node 11:
ZF := CMP(TakeBits: <31,0>(Reg: RAX),Value: 0), CF := CMP(TakeBits: <31,0>(Reg: RAX),Value: 0), SF := CMP(TakeBits: <31,0>(Reg: RAX),Value: 0), OF := CMP(TakeBits: <31,0>(Reg: RAX),Value: 0), PF := CMP(TakeBits: <31,0>(Reg: RAX),Value: 0)
node 12:
RSI := Dereference: [Var: label_21,8]
[(Var: RSP0 - Value: 8),8] := Var: RBP0, [(Var: RSP0 - Value: 16),8] := Reg: RDI
ZF := (Var: RSP0 - Value: 40), CF := (Var: RSP0 - Value: 40), SF := (Var: RSP0 - Value: 40), OF := (Var: RSP0 - Value: 40), PF := (Var: RSP0 - Value: 40)
node 13:
RAX := fopen@()
node 14:
[(Var: RSP0 - Value: 24),8] := Reg: RAX
ZF := CMP(Reg: RAX,Value: 0), CF := CMP(Reg: RAX,Value: 0), SF := CMP(Reg: RAX,Value: 0), OF := CMP(Reg: RAX,Value: 0), PF := CMP(Reg: RAX,Value: 0)
--------

Starting Node: 12

Edges: 0 ----> 1, , 2 ----> 9, 3 ----> 4, 4 ----> 5, 5 ----> 6, 6 ----> 7, , 8 ----> 9, 9 ----> 10, 10 ----> 11, 11 --ZF--> 3, 11 --!ZF--> 2, 12 ----> 13, 13 ----> 14, 14 --!ZF--> 8, 14 --ZF--> 0

Symbolic Execution for Binary "Randomized":
Current text section: "counter"
node 0:
RAX := (TakeBits: <63,8>(Reg: RAX) . Value: 0), RDI := Dereference: [Var: label_22,8], RSI := Dereference: [(Var: RSP0 - Value: 16),8]
node 1:
RAX := perrf@()
node 2:
skip'
node 3:
RDI := Dereference: [(Var: RSP0 - Value: 24),8]
node 4:
RAX := fclose@()
node 5:
RCX := Dereference: [Var: lcount,8], RDX := Dereference: [Var: wcount,8], RDI := Dereference: [(Var: RSP0 - Value: 16),8], RSI := Dereference: [Var: ccount,8]
[(Var: RSP0 - Value: 28),4] := TakeBits: <31,0>(Reg: RAX)
node 6:
RAX := report@()
node 7:
RCX := (Dereference: [Var: lcount,8] + Dereference: [Var: total_lcount,8])
[Var: total_ccount,8] := (Dereference: [Var: ccount,8] + Dereference: [Var: total_ccount,8]), [Var: total_lcount,8] := (Dereference: [Var: lcount,8] + Dereference: [Var: total_lcount,8]), [Var: total_wcount,8] := (Dereference: [Var: wcount,8] + Dereference: [Var: total_wcount,8])
ZF := (Var: RSP0 - Value: 8), CF := (Var: RSP0 - Value: 8), SF := (Var: RSP0 - Value: 8), OF := (Var: RSP0 - Value: 8), PF := (Var: RSP0 - Value: 8)
node 8:
[Var: ccount,8] := Value: 0, [Var: lcount,8] := Value: 0, [Var: wcount,8] := Value: 0
node 9:
RDI := Dereference: [(Var: RSP0 - Value: 24),8]
node 10:
RAX := getword@()
node 11:
ZF := CMP(TakeBits: <31,0>(Reg: RAX),Value: 0), CF := CMP(TakeBits: <31,0>(Reg: RAX),Value: 0), SF := CMP(TakeBits: <31,0>(Reg: RAX),Value: 0), OF := CMP(TakeBits: <31,0>(Reg: RAX),Value: 0), PF := CMP(TakeBits: <31,0>(Reg: RAX),Value: 0)
node 12:
RSI := Dereference: [Var: label_24,8]
[(Var: RSP0 - Value: 8),8] := Var: RBP0, [(Var: RSP0 - Value: 16),8] := Reg: RDI
ZF := (Var: RSP0 - Value: 40), CF := (Var: RSP0 - Value: 40), SF := (Var: RSP0 - Value: 40), OF := (Var: RSP0 - Value: 40), PF := (Var: RSP0 - Value: 40)
node 13:
RAX := fopen@()
node 14:
[(Var: RSP0 - Value: 24),8] := Reg: RAX
ZF := CMP(Reg: RAX,Value: 0), CF := CMP(Reg: RAX,Value: 0), SF := CMP(Reg: RAX,Value: 0), OF := CMP(Reg: RAX,Value: 0), PF := CMP(Reg: RAX,Value: 0)
--------

same_behavior for the nodes: counter -> counter_152 and counter -> counter_303

same_behavior checking these two SStates:

SA || RSI := Dereference: [Var: label_21,8]
SA || [(Var: RSP0 - Value: 8),8] := Var: RBP0, [(Var: RSP0 - Value: 16),8] := Reg: RDI
SA || ZF := (Var: RSP0 - Value: 40), CF := (Var: RSP0 - Value: 40), SF := (Var: RSP0 - Value: 40), OF := (Var: RSP0 - Value: 40), PF := (Var: RSP0 - Value: 40)

SB || RSI := Dereference: [Var: label_24,8]
SB || [(Var: RSP0 - Value: 8),8] := Var: RBP0, [(Var: RSP0 - Value: 16),8] := Reg: RDI
SB || ZF := (Var: RSP0 - Value: 40), CF := (Var: RSP0 - Value: 40), SF := (Var: RSP0 - Value: 40), OF := (Var: RSP0 - Value: 40), PF := (Var: RSP0 - Value: 40)

Resulting values:
Value A:
E_reg RDI
Value B:
E_reg RDI
Resulting values:
Value A:
E_deref (E_var "label_21" 64) 8
Value B:
E_deref (E_var "label_24" 64) 8
Reg Chk: True
local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 8 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 8 64]
(v1 := v2):
E_var "RBP0" 64
E_var "RBP0" 64
b0: True b1: True
local_var_cmp called

local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 16 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 16 64]
(v1 := v2):
E_reg RDI
E_reg RDI
b0: True b1: True
Mem Chk: True
Result: Success
Nodes counter -> counter_152 and counter -> counter_303 have been verified to do the same.

same_behavior for the nodes: counter_153 -> counter_153 and counter_304 -> counter_304

same_behavior checking these two SStates:

SA || RAX := fopen@()

SB || RAX := fopen@()

Resulting values:
Value A:
E_app (F2 "fopen" "") []
Value B:
E_app (F2 "fopen" "") []
Reg Chk: True
Mem Chk: True
Result: Success
Nodes counter_153 -> counter_153 and counter_304 -> counter_304 have been verified to do the same.

same_behavior for the nodes: counter_154 -> counter_156 and counter_305 -> counter_307

same_behavior checking these two SStates:

SA || [(Var: RSP0 - Value: 24),8] := Reg: RAX
SA || ZF := CMP(Reg: RAX,Value: 0), CF := CMP(Reg: RAX,Value: 0), SF := CMP(Reg: RAX,Value: 0), OF := CMP(Reg: RAX,Value: 0), PF := CMP(Reg: RAX,Value: 0)

SB || [(Var: RSP0 - Value: 24),8] := Reg: RAX
SB || ZF := CMP(Reg: RAX,Value: 0), CF := CMP(Reg: RAX,Value: 0), SF := CMP(Reg: RAX,Value: 0), OF := CMP(Reg: RAX,Value: 0), PF := CMP(Reg: RAX,Value: 0)

Reg Chk: True
local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 24 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 24 64]
(v1 := v2):
E_reg RAX
E_reg RAX
b0: True b1: True
Mem Chk: True
Result: Success
Nodes counter_154 -> counter_156 and counter_305 -> counter_307 have been verified to do the same.

same_behavior for the nodes: .label_25 -> counter_164 and .label_23 -> counter_315

same_behavior checking these two SStates:

SA || [Var: ccount,8] := Value: 0, [Var: lcount,8] := Value: 0, [Var: wcount,8] := Value: 0

SB || [Var: ccount,8] := Value: 0, [Var: lcount,8] := Value: 0, [Var: wcount,8] := Value: 0

Reg Chk: True
Else resulting values:
(a1 := a2):
E_var "ccount" 64
E_var "ccount" 64
(v1 := v2):
E_val 0 64
E_val 0 64
b0: True b1: True


Else resulting values:
(a1 := a2):
E_var "ccount" 64
E_var "lcount" 64
(v1 := v2):
E_val 0 64
E_val 0 64
b0: True b1: True


Else resulting values:
(a1 := a2):
E_var "ccount" 64
E_var "wcount" 64
(v1 := v2):
E_val 0 64
E_val 0 64
b0: True b1: True


Else resulting values:
(a1 := a2):
E_var "lcount" 64
E_var "ccount" 64
(v1 := v2):
E_val 0 64
E_val 0 64
b0: True b1: True


Else resulting values:
(a1 := a2):
E_var "lcount" 64
E_var "lcount" 64
(v1 := v2):
E_val 0 64
E_val 0 64
b0: True b1: True


Else resulting values:
(a1 := a2):
E_var "lcount" 64
E_var "wcount" 64
(v1 := v2):
E_val 0 64
E_val 0 64
b0: True b1: True


Else resulting values:
(a1 := a2):
E_var "wcount" 64
E_var "ccount" 64
(v1 := v2):
E_val 0 64
E_val 0 64
b0: True b1: True


Else resulting values:
(a1 := a2):
E_var "wcount" 64
E_var "lcount" 64
(v1 := v2):
E_val 0 64
E_val 0 64
b0: True b1: True


Else resulting values:
(a1 := a2):
E_var "wcount" 64
E_var "wcount" 64
(v1 := v2):
E_val 0 64
E_val 0 64
b0: True b1: True


Mem Chk: True
Result: Success
Nodes .label_25 -> counter_164 and .label_23 -> counter_315 have been verified to do the same.

same_behavior for the nodes: .label_23 -> .label_23 and .label_25 -> .label_25

same_behavior checking these two SStates:

SA || RDI := Dereference: [(Var: RSP0 - Value: 24),8]

SB || RDI := Dereference: [(Var: RSP0 - Value: 24),8]

Resulting values:
Value A:
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 24 64]) 8
Value B:
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 24 64]) 8
local_var_cmp called

Reg Chk: True
Mem Chk: True
Result: Success
Nodes .label_23 -> .label_23 and .label_25 -> .label_25 have been verified to do the same.

same_behavior for the nodes: counter_167 -> counter_167 and counter_318 -> counter_318

same_behavior checking these two SStates:

SA || RAX := getword@()

SB || RAX := getword@()

Resulting values:
Value A:
E_app (F2 "getword" "") []
Value B:
E_app (F2 "getword" "") []
Reg Chk: True
Mem Chk: True
Result: Success
Nodes counter_167 -> counter_167 and counter_318 -> counter_318 have been verified to do the same.

same_behavior for the nodes: counter_168 -> counter_169 and counter_319 -> counter_320

same_behavior checking these two SStates:

SA || ZF := CMP(TakeBits: <31,0>(Reg: RAX),Value: 0), CF := CMP(TakeBits: <31,0>(Reg: RAX),Value: 0), SF := CMP(TakeBits: <31,0>(Reg: RAX),Value: 0), OF := CMP(TakeBits: <31,0>(Reg: RAX),Value: 0), PF := CMP(TakeBits: <31,0>(Reg: RAX),Value: 0)

SB || ZF := CMP(TakeBits: <31,0>(Reg: RAX),Value: 0), CF := CMP(TakeBits: <31,0>(Reg: RAX),Value: 0), SF := CMP(TakeBits: <31,0>(Reg: RAX),Value: 0), OF := CMP(TakeBits: <31,0>(Reg: RAX),Value: 0), PF := CMP(TakeBits: <31,0>(Reg: RAX),Value: 0)

Reg Chk: True
Mem Chk: True
Result: Success
Nodes counter_168 -> counter_169 and counter_319 -> counter_320 have been verified to do the same.

same_behavior for the nodes: .label_22 -> .label_22 and .label_26 -> .label_26

same_behavior checking these two SStates:

SA || RDI := Dereference: [(Var: RSP0 - Value: 24),8]

SB || RDI := Dereference: [(Var: RSP0 - Value: 24),8]

Resulting values:
Value A:
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 24 64]) 8
Value B:
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 24 64]) 8
local_var_cmp called

Reg Chk: True
Mem Chk: True
Result: Success
Nodes .label_22 -> .label_22 and .label_26 -> .label_26 have been verified to do the same.

same_behavior for the nodes: counter_173 -> counter_173 and main_271 -> main_271

same_behavior checking these two SStates:

SA || RAX := fclose@()

SB || RAX := fclose@()

Resulting values:
Value A:
E_app (F2 "fclose" "") []
Value B:
E_app (F2 "fclose" "") []
Reg Chk: True
Mem Chk: True
Result: Success
Nodes counter_173 -> counter_173 and main_271 -> main_271 have been verified to do the same.

same_behavior for the nodes: counter_174 -> counter_178 and main_272 -> main_276

same_behavior checking these two SStates:

SA || RCX := Dereference: [Var: lcount,8], RDX := Dereference: [Var: wcount,8], RDI := Dereference: [(Var: RSP0 - Value: 16),8], RSI := Dereference: [Var: ccount,8]
SA || [(Var: RSP0 - Value: 28),4] := TakeBits: <31,0>(Reg: RAX)

SB || RCX := Dereference: [Var: lcount,8], RDX := Dereference: [Var: wcount,8], RDI := Dereference: [(Var: RSP0 - Value: 16),8], RSI := Dereference: [Var: ccount,8]
SB || [(Var: RSP0 - Value: 28),4] := TakeBits: <31,0>(Reg: RAX)

Resulting values:
Value A:
E_deref (E_var "lcount" 64) 8
Value B:
E_deref (E_var "lcount" 64) 8
Resulting values:
Value A:
E_deref (E_var "wcount" 64) 8
Value B:
E_deref (E_var "wcount" 64) 8
Resulting values:
Value A:
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 16 64]) 8
Value B:
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 16 64]) 8
local_var_cmp called

Resulting values:
Value A:
E_deref (E_var "ccount" 64) 8
Value B:
E_deref (E_var "ccount" 64) 8
Reg Chk: True
local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 28 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 28 64]
(v1 := v2):
E_app (TakeBits 31 0) [E_reg RAX]
E_app (TakeBits 31 0) [E_reg RAX]
b0: True b1: True
Mem Chk: True
Result: Success
Nodes counter_174 -> counter_178 and main_272 -> main_276 have been verified to do the same.

same_behavior for the nodes: counter_179 -> counter_179 and main_277 -> main_277

same_behavior checking these two SStates:

SA || RAX := report@()

SB || RAX := report@()

Resulting values:
Value A:
E_app (F2 "report" "") []
Value B:
E_app (F2 "report" "") []
Reg Chk: True
Mem Chk: True
Result: Success
Nodes counter_179 -> counter_179 and main_277 -> main_277 have been verified to do the same.

same_behavior for the nodes: counter_180 -> counter_191 and main_278 -> main_289

same_behavior checking these two SStates:

SA || RCX := (Dereference: [Var: lcount,8] + Dereference: [Var: total_lcount,8])
SA || [Var: total_ccount,8] := (Dereference: [Var: ccount,8] + Dereference: [Var: total_ccount,8]), [Var: total_lcount,8] := (Dereference: [Var: lcount,8] + Dereference: [Var: total_lcount,8]), [Var: total_wcount,8] := (Dereference: [Var: wcount,8] + Dereference: [Var: total_wcount,8])
SA || ZF := (Var: RSP0 - Value: 8), CF := (Var: RSP0 - Value: 8), SF := (Var: RSP0 - Value: 8), OF := (Var: RSP0 - Value: 8), PF := (Var: RSP0 - Value: 8)

SB || RCX := (Dereference: [Var: lcount,8] + Dereference: [Var: total_lcount,8])
SB || [Var: total_ccount,8] := (Dereference: [Var: ccount,8] + Dereference: [Var: total_ccount,8]), [Var: total_lcount,8] := (Dereference: [Var: lcount,8] + Dereference: [Var: total_lcount,8]), [Var: total_wcount,8] := (Dereference: [Var: wcount,8] + Dereference: [Var: total_wcount,8])
SB || ZF := (Var: RSP0 - Value: 8), CF := (Var: RSP0 - Value: 8), SF := (Var: RSP0 - Value: 8), OF := (Var: RSP0 - Value: 8), PF := (Var: RSP0 - Value: 8)

Resulting values:
Value A:
E_app (Op ADD) [E_deref (E_var "lcount" 64) 8,E_deref (E_var "total_lcount" 64) 8]
Value B:
E_app (Op ADD) [E_deref (E_var "lcount" 64) 8,E_deref (E_var "total_lcount" 64) 8]
Reg Chk: True
Else resulting values:
(a1 := a2):
E_var "total_ccount" 64
E_var "total_ccount" 64
(v1 := v2):
E_app (Op ADD) [E_deref (E_var "ccount" 64) 8,E_deref (E_var "total_ccount" 64) 8]
E_app (Op ADD) [E_deref (E_var "ccount" 64) 8,E_deref (E_var "total_ccount" 64) 8]
b0: True b1: True


Else resulting values:
(a1 := a2):
E_var "total_ccount" 64
E_var "total_lcount" 64
(v1 := v2):
E_app (Op ADD) [E_deref (E_var "ccount" 64) 8,E_deref (E_var "total_ccount" 64) 8]
E_app (Op ADD) [E_deref (E_var "lcount" 64) 8,E_deref (E_var "total_lcount" 64) 8]
b0: True b1: True


Else resulting values:
(a1 := a2):
E_var "total_ccount" 64
E_var "total_wcount" 64
(v1 := v2):
E_app (Op ADD) [E_deref (E_var "ccount" 64) 8,E_deref (E_var "total_ccount" 64) 8]
E_app (Op ADD) [E_deref (E_var "wcount" 64) 8,E_deref (E_var "total_wcount" 64) 8]
b0: True b1: True


Else resulting values:
(a1 := a2):
E_var "total_lcount" 64
E_var "total_ccount" 64
(v1 := v2):
E_app (Op ADD) [E_deref (E_var "lcount" 64) 8,E_deref (E_var "total_lcount" 64) 8]
E_app (Op ADD) [E_deref (E_var "ccount" 64) 8,E_deref (E_var "total_ccount" 64) 8]
b0: True b1: True


Else resulting values:
(a1 := a2):
E_var "total_lcount" 64
E_var "total_lcount" 64
(v1 := v2):
E_app (Op ADD) [E_deref (E_var "lcount" 64) 8,E_deref (E_var "total_lcount" 64) 8]
E_app (Op ADD) [E_deref (E_var "lcount" 64) 8,E_deref (E_var "total_lcount" 64) 8]
b0: True b1: True


Else resulting values:
(a1 := a2):
E_var "total_lcount" 64
E_var "total_wcount" 64
(v1 := v2):
E_app (Op ADD) [E_deref (E_var "lcount" 64) 8,E_deref (E_var "total_lcount" 64) 8]
E_app (Op ADD) [E_deref (E_var "wcount" 64) 8,E_deref (E_var "total_wcount" 64) 8]
b0: True b1: True


Else resulting values:
(a1 := a2):
E_var "total_wcount" 64
E_var "total_ccount" 64
(v1 := v2):
E_app (Op ADD) [E_deref (E_var "wcount" 64) 8,E_deref (E_var "total_wcount" 64) 8]
E_app (Op ADD) [E_deref (E_var "ccount" 64) 8,E_deref (E_var "total_ccount" 64) 8]
b0: True b1: True


Else resulting values:
(a1 := a2):
E_var "total_wcount" 64
E_var "total_lcount" 64
(v1 := v2):
E_app (Op ADD) [E_deref (E_var "wcount" 64) 8,E_deref (E_var "total_wcount" 64) 8]
E_app (Op ADD) [E_deref (E_var "lcount" 64) 8,E_deref (E_var "total_lcount" 64) 8]
b0: True b1: True


Else resulting values:
(a1 := a2):
E_var "total_wcount" 64
E_var "total_wcount" 64
(v1 := v2):
E_app (Op ADD) [E_deref (E_var "wcount" 64) 8,E_deref (E_var "total_wcount" 64) 8]
E_app (Op ADD) [E_deref (E_var "wcount" 64) 8,E_deref (E_var "total_wcount" 64) 8]
b0: True b1: True


Mem Chk: True
Result: Success
Nodes counter_180 -> counter_191 and main_278 -> main_289 have been verified to do the same.

same_behavior for the nodes: counter_170 -> counter_170 and counter_321 -> counter_321

same_behavior checking these two SStates:

SA || skip'

SB || skip'

Reg Chk: True
Mem Chk: True
Result: Success
Nodes counter_170 -> counter_170 and counter_321 -> counter_321 have been verified to do the same.

same_behavior for the nodes: counter_157 -> counter_159 and counter_308 -> counter_310

same_behavior checking these two SStates:

SA || RAX := (TakeBits: <63,8>(Reg: RAX) . Value: 0), RDI := Dereference: [Var: label_24,8], RSI := Dereference: [(Var: RSP0 - Value: 16),8]

SB || RAX := (TakeBits: <63,8>(Reg: RAX) . Value: 0), RDI := Dereference: [Var: label_22,8], RSI := Dereference: [(Var: RSP0 - Value: 16),8]

Resulting values:
Value A:
E_app Concat [E_app (TakeBits 63 8) [E_reg RAX],E_val 0 8]
Value B:
E_app Concat [E_app (TakeBits 63 8) [E_reg RAX],E_val 0 8]
Resulting values:
Value A:
E_deref (E_var "label_24" 64) 8
Value B:
E_deref (E_var "label_22" 64) 8
Resulting values:
Value A:
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 16 64]) 8
Value B:
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 16 64]) 8
local_var_cmp called

Reg Chk: True
Mem Chk: True
Result: Success
Nodes counter_157 -> counter_159 and counter_308 -> counter_310 have been verified to do the same.

same_behavior for the nodes: counter_160 -> counter_160 and counter_311 -> counter_311

same_behavior checking these two SStates:

SA || RAX := perrf@()

SB || RAX := perrf@()

Resulting values:
Value A:
E_app (F2 "perrf" "") []
Value B:
E_app (F2 "perrf" "") []
Reg Chk: True
Mem Chk: True
Result: Success
Nodes counter_160 -> counter_160 and counter_311 -> counter_311 have been verified to do the same.

Label relationship:
label_24 <--> label_22
total_wcount <--> total_wcount,total_lcount,total_ccount
total_lcount <--> total_wcount,total_ccount,total_lcount
total_ccount <--> total_wcount,total_lcount,total_ccount
wcount <--> wcount,lcount,ccount
lcount <--> wcount,lcount,ccount
ccount <--> wcount,lcount,ccount
 <--> 
label_21 <--> label_24

Local variable relationship:
(Var: RSP0 - Value: 28) <--> (Var: RSP0 - Value: 28)
(Var: RSP0 - Value: 24) <--> (Var: RSP0 - Value: 24)
(Var: RSP0 - Value: 16) <--> (Var: RSP0 - Value: 16)
(Var: RSP0 - Value: 8) <--> (Var: RSP0 - Value: 8)

Succesful check!
Considering text section (2/8): "errf"
--------
.dot code for CFG of text section errf for Vanilla
diGraph errf_Vanilla{
	errf_0  [label="[errf_333,errf_348]"]
	errf_1  [label="[.label_33,errf_370]"]
	errf_2  [label="[errf_371,errf_371]"]
	errf_3  [label="[errf,errf_332]"]

	errf_0 -> errf_1;
	errf_1 -> errf_2;

	errf_3 -> errf_1 [label="ZF"];
	errf_3 -> errf_0 [label="!ZF"];
}
--------
--------
.dot code for CFG of text section errf for Randomized
diGraph errf_Randomized{
	errf_0  [label="[errf_27,errf_42]"]
	errf_1  [label="[.label_9,errf_64]"]
	errf_2  [label="[errf_65,errf_65]"]
	errf_3  [label="[errf,errf_26]"]

	errf_0 -> errf_1;
	errf_1 -> errf_2;

	errf_3 -> errf_1 [label="ZF"];
	errf_3 -> errf_0 [label="!ZF"];
}
--------
Starting Node: 3

Edges: 0 ----> 1, 1 ----> 2, , 3 --ZF--> 1, 3 --!ZF--> 0

Symbolic Execution for Binary "Vanilla":
Current text section: "errf"
node 0:
XMM0 := Dereference: [(Var: RSP0 - Value: 344),16], XMM1 := Dereference: [(Var: RSP0 - Value: 328),16], XMM2 := Dereference: [(Var: RSP0 - Value: 312),16], XMM3 := Dereference: [(Var: RSP0 - Value: 296),16], XMM4 := Dereference: [(Var: RSP0 - Value: 280),16], XMM5 := Dereference: [(Var: RSP0 - Value: 264),16], XMM6 := Dereference: [(Var: RSP0 - Value: 248),16], XMM7 := Dereference: [(Var: RSP0 - Value: 232),16]
[(Var: RSP0 - Value: 56),16] := Dereference: [(Var: RSP0 - Value: 232),16], [(Var: RSP0 - Value: 72),16] := Dereference: [(Var: RSP0 - Value: 248),16], [(Var: RSP0 - Value: 88),16] := Dereference: [(Var: RSP0 - Value: 264),16], [(Var: RSP0 - Value: 104),16] := Dereference: [(Var: RSP0 - Value: 280),16], [(Var: RSP0 - Value: 120),16] := Dereference: [(Var: RSP0 - Value: 296),16], [(Var: RSP0 - Value: 136),16] := Dereference: [(Var: RSP0 - Value: 312),16], [(Var: RSP0 - Value: 152),16] := Dereference: [(Var: RSP0 - Value: 328),16], [(Var: RSP0 - Value: 168),16] := Dereference: [(Var: RSP0 - Value: 344),16]
node 1:
RAX := Dereference: [(Var: RSP0 - Value: 360),8], RCX := Dereference: [(Var: RSP0 - Value: 368),8], RDX := (Var: RSP0 - Value: 40), RDI := Value: 0, RSI := Dereference: [(Var: RSP0 - Value: 352),8], R8 := (Var: RSP0 + Value: 8)
[(Var: RSP0 - Value: 16),8] := Dereference: [(Var: RSP0 - Value: 352),8], [(Var: RSP0 - Value: 24),8] := (Var: RSP0 - Value: 216), [(Var: RSP0 - Value: 32),8] := (Var: RSP0 + Value: 8), [(Var: RSP0 - Value: 36),4] := Value: 48, [(Var: RSP0 - Value: 40),4] := Value: 8, [(Var: RSP0 - Value: 176),8] := Dereference: [(Var: RSP0 - Value: 360),8], [(Var: RSP0 - Value: 184),8] := Dereference: [(Var: RSP0 - Value: 368),8], [(Var: RSP0 - Value: 192),8] := Dereference: [(Var: RSP0 - Value: 376),8], [(Var: RSP0 - Value: 200),8] := Dereference: [(Var: RSP0 - Value: 384),8], [(Var: RSP0 - Value: 208),8] := Dereference: [(Var: RSP0 - Value: 392),8]
ZF := Value: 0, CF := Value: 0, SF := Value: 0, OF := Value: 0, PF := Value: 0
node 2:
RAX := error_print@()
node 3:
[(Var: RSP0 - Value: 8),8] := Var: RBP0, [(Var: RSP0 - Value: 232),16] := Reg: XMM7, [(Var: RSP0 - Value: 248),16] := Reg: XMM6, [(Var: RSP0 - Value: 264),16] := Reg: XMM5, [(Var: RSP0 - Value: 280),16] := Reg: XMM4, [(Var: RSP0 - Value: 296),16] := Reg: XMM3, [(Var: RSP0 - Value: 312),16] := Reg: XMM2, [(Var: RSP0 - Value: 328),16] := Reg: XMM1, [(Var: RSP0 - Value: 344),16] := Reg: XMM0, [(Var: RSP0 - Value: 352),8] := Reg: RDI, [(Var: RSP0 - Value: 360),8] := Reg: R9, [(Var: RSP0 - Value: 368),8] := Reg: R8, [(Var: RSP0 - Value: 376),8] := Reg: RCX, [(Var: RSP0 - Value: 384),8] := Reg: RDX, [(Var: RSP0 - Value: 392),8] := Reg: RSI
ZF := TEST(TakeBits: <7,0>(Reg: RAX),TakeBits: <7,0>(Reg: RAX)), CF := TEST(TakeBits: <7,0>(Reg: RAX),TakeBits: <7,0>(Reg: RAX)), SF := TEST(TakeBits: <7,0>(Reg: RAX),TakeBits: <7,0>(Reg: RAX)), OF := TEST(TakeBits: <7,0>(Reg: RAX),TakeBits: <7,0>(Reg: RAX)), PF := TEST(TakeBits: <7,0>(Reg: RAX),TakeBits: <7,0>(Reg: RAX))
--------

Starting Node: 3

Edges: 0 ----> 1, 1 ----> 2, , 3 --ZF--> 1, 3 --!ZF--> 0

Symbolic Execution for Binary "Randomized":
Current text section: "errf"
node 0:
XMM0 := Dereference: [(Var: RSP0 - Value: 344),16], XMM1 := Dereference: [(Var: RSP0 - Value: 328),16], XMM2 := Dereference: [(Var: RSP0 - Value: 312),16], XMM3 := Dereference: [(Var: RSP0 - Value: 296),16], XMM4 := Dereference: [(Var: RSP0 - Value: 280),16], XMM5 := Dereference: [(Var: RSP0 - Value: 264),16], XMM6 := Dereference: [(Var: RSP0 - Value: 248),16], XMM7 := Dereference: [(Var: RSP0 - Value: 232),16]
[(Var: RSP0 - Value: 56),16] := Dereference: [(Var: RSP0 - Value: 232),16], [(Var: RSP0 - Value: 72),16] := Dereference: [(Var: RSP0 - Value: 248),16], [(Var: RSP0 - Value: 88),16] := Dereference: [(Var: RSP0 - Value: 264),16], [(Var: RSP0 - Value: 104),16] := Dereference: [(Var: RSP0 - Value: 280),16], [(Var: RSP0 - Value: 120),16] := Dereference: [(Var: RSP0 - Value: 296),16], [(Var: RSP0 - Value: 136),16] := Dereference: [(Var: RSP0 - Value: 312),16], [(Var: RSP0 - Value: 152),16] := Dereference: [(Var: RSP0 - Value: 328),16], [(Var: RSP0 - Value: 168),16] := Dereference: [(Var: RSP0 - Value: 344),16]
node 1:
RAX := Dereference: [(Var: RSP0 - Value: 360),8], RCX := Dereference: [(Var: RSP0 - Value: 368),8], RDX := (Var: RSP0 - Value: 40), RDI := Value: 0, RSI := Dereference: [(Var: RSP0 - Value: 352),8], R8 := (Var: RSP0 + Value: 8)
[(Var: RSP0 - Value: 16),8] := Dereference: [(Var: RSP0 - Value: 352),8], [(Var: RSP0 - Value: 24),8] := (Var: RSP0 - Value: 216), [(Var: RSP0 - Value: 32),8] := (Var: RSP0 + Value: 8), [(Var: RSP0 - Value: 36),4] := Value: 48, [(Var: RSP0 - Value: 40),4] := Value: 8, [(Var: RSP0 - Value: 176),8] := Dereference: [(Var: RSP0 - Value: 360),8], [(Var: RSP0 - Value: 184),8] := Dereference: [(Var: RSP0 - Value: 368),8], [(Var: RSP0 - Value: 192),8] := Dereference: [(Var: RSP0 - Value: 376),8], [(Var: RSP0 - Value: 200),8] := Dereference: [(Var: RSP0 - Value: 384),8], [(Var: RSP0 - Value: 208),8] := Dereference: [(Var: RSP0 - Value: 392),8]
ZF := Value: 0, CF := Value: 0, SF := Value: 0, OF := Value: 0, PF := Value: 0
node 2:
RAX := error_print@()
node 3:
[(Var: RSP0 - Value: 8),8] := Var: RBP0, [(Var: RSP0 - Value: 232),16] := Reg: XMM7, [(Var: RSP0 - Value: 248),16] := Reg: XMM6, [(Var: RSP0 - Value: 264),16] := Reg: XMM5, [(Var: RSP0 - Value: 280),16] := Reg: XMM4, [(Var: RSP0 - Value: 296),16] := Reg: XMM3, [(Var: RSP0 - Value: 312),16] := Reg: XMM2, [(Var: RSP0 - Value: 328),16] := Reg: XMM1, [(Var: RSP0 - Value: 344),16] := Reg: XMM0, [(Var: RSP0 - Value: 352),8] := Reg: RDI, [(Var: RSP0 - Value: 360),8] := Reg: R9, [(Var: RSP0 - Value: 368),8] := Reg: R8, [(Var: RSP0 - Value: 376),8] := Reg: RCX, [(Var: RSP0 - Value: 384),8] := Reg: RDX, [(Var: RSP0 - Value: 392),8] := Reg: RSI
ZF := TEST(TakeBits: <7,0>(Reg: RAX),TakeBits: <7,0>(Reg: RAX)), CF := TEST(TakeBits: <7,0>(Reg: RAX),TakeBits: <7,0>(Reg: RAX)), SF := TEST(TakeBits: <7,0>(Reg: RAX),TakeBits: <7,0>(Reg: RAX)), OF := TEST(TakeBits: <7,0>(Reg: RAX),TakeBits: <7,0>(Reg: RAX)), PF := TEST(TakeBits: <7,0>(Reg: RAX),TakeBits: <7,0>(Reg: RAX))
--------

same_behavior for the nodes: errf -> errf_332 and errf -> errf_26

same_behavior checking these two SStates:

SA || [(Var: RSP0 - Value: 8),8] := Var: RBP0, [(Var: RSP0 - Value: 232),16] := Reg: XMM7, [(Var: RSP0 - Value: 248),16] := Reg: XMM6, [(Var: RSP0 - Value: 264),16] := Reg: XMM5, [(Var: RSP0 - Value: 280),16] := Reg: XMM4, [(Var: RSP0 - Value: 296),16] := Reg: XMM3, [(Var: RSP0 - Value: 312),16] := Reg: XMM2, [(Var: RSP0 - Value: 328),16] := Reg: XMM1, [(Var: RSP0 - Value: 344),16] := Reg: XMM0, [(Var: RSP0 - Value: 352),8] := Reg: RDI, [(Var: RSP0 - Value: 360),8] := Reg: R9, [(Var: RSP0 - Value: 368),8] := Reg: R8, [(Var: RSP0 - Value: 376),8] := Reg: RCX, [(Var: RSP0 - Value: 384),8] := Reg: RDX, [(Var: RSP0 - Value: 392),8] := Reg: RSI
SA || ZF := TEST(TakeBits: <7,0>(Reg: RAX),TakeBits: <7,0>(Reg: RAX)), CF := TEST(TakeBits: <7,0>(Reg: RAX),TakeBits: <7,0>(Reg: RAX)), SF := TEST(TakeBits: <7,0>(Reg: RAX),TakeBits: <7,0>(Reg: RAX)), OF := TEST(TakeBits: <7,0>(Reg: RAX),TakeBits: <7,0>(Reg: RAX)), PF := TEST(TakeBits: <7,0>(Reg: RAX),TakeBits: <7,0>(Reg: RAX))

SB || [(Var: RSP0 - Value: 8),8] := Var: RBP0, [(Var: RSP0 - Value: 232),16] := Reg: XMM7, [(Var: RSP0 - Value: 248),16] := Reg: XMM6, [(Var: RSP0 - Value: 264),16] := Reg: XMM5, [(Var: RSP0 - Value: 280),16] := Reg: XMM4, [(Var: RSP0 - Value: 296),16] := Reg: XMM3, [(Var: RSP0 - Value: 312),16] := Reg: XMM2, [(Var: RSP0 - Value: 328),16] := Reg: XMM1, [(Var: RSP0 - Value: 344),16] := Reg: XMM0, [(Var: RSP0 - Value: 352),8] := Reg: RDI, [(Var: RSP0 - Value: 360),8] := Reg: R9, [(Var: RSP0 - Value: 368),8] := Reg: R8, [(Var: RSP0 - Value: 376),8] := Reg: RCX, [(Var: RSP0 - Value: 384),8] := Reg: RDX, [(Var: RSP0 - Value: 392),8] := Reg: RSI
SB || ZF := TEST(TakeBits: <7,0>(Reg: RAX),TakeBits: <7,0>(Reg: RAX)), CF := TEST(TakeBits: <7,0>(Reg: RAX),TakeBits: <7,0>(Reg: RAX)), SF := TEST(TakeBits: <7,0>(Reg: RAX),TakeBits: <7,0>(Reg: RAX)), OF := TEST(TakeBits: <7,0>(Reg: RAX),TakeBits: <7,0>(Reg: RAX)), PF := TEST(TakeBits: <7,0>(Reg: RAX),TakeBits: <7,0>(Reg: RAX))

Reg Chk: True
local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 8 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 8 64]
(v1 := v2):
E_var "RBP0" 64
E_var "RBP0" 64
b0: True b1: True
local_var_cmp called

local_var_cmp called

local_var_cmp called

local_var_cmp called

local_var_cmp called

local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 232 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 232 64]
(v1 := v2):
E_reg XMM7
E_reg XMM7
b0: True b1: True
local_var_cmp called

local_var_cmp called

local_var_cmp called

local_var_cmp called

local_var_cmp called

local_var_cmp called

local_var_cmp called

local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 248 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 248 64]
(v1 := v2):
E_reg XMM6
E_reg XMM6
b0: True b1: True
local_var_cmp called

local_var_cmp called

local_var_cmp called

local_var_cmp called

local_var_cmp called

local_var_cmp called

local_var_cmp called

local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 264 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 264 64]
(v1 := v2):
E_reg XMM5
E_reg XMM5
b0: True b1: True
local_var_cmp called

local_var_cmp called

local_var_cmp called

local_var_cmp called

local_var_cmp called

local_var_cmp called

local_var_cmp called

local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 280 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 280 64]
(v1 := v2):
E_reg XMM4
E_reg XMM4
b0: True b1: True
local_var_cmp called

local_var_cmp called

local_var_cmp called

local_var_cmp called

local_var_cmp called

local_var_cmp called

local_var_cmp called

local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 296 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 296 64]
(v1 := v2):
E_reg XMM3
E_reg XMM3
b0: True b1: True
local_var_cmp called

local_var_cmp called

local_var_cmp called

local_var_cmp called

local_var_cmp called

local_var_cmp called

local_var_cmp called

local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 312 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 312 64]
(v1 := v2):
E_reg XMM2
E_reg XMM2
b0: True b1: True
local_var_cmp called

local_var_cmp called

local_var_cmp called

local_var_cmp called

local_var_cmp called

local_var_cmp called

local_var_cmp called

local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 328 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 328 64]
(v1 := v2):
E_reg XMM1
E_reg XMM1
b0: True b1: True
local_var_cmp called

local_var_cmp called

local_var_cmp called

local_var_cmp called

local_var_cmp called

local_var_cmp called

local_var_cmp called

local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 344 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 344 64]
(v1 := v2):
E_reg XMM0
E_reg XMM0
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 352 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 352 64]
(v1 := v2):
E_reg RDI
E_reg RDI
b0: True b1: True
local_var_cmp called

local_var_cmp called

local_var_cmp called

local_var_cmp called

local_var_cmp called

local_var_cmp called

local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 360 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 360 64]
(v1 := v2):
E_reg R9
E_reg R9
b0: True b1: True
local_var_cmp called

local_var_cmp called

local_var_cmp called

local_var_cmp called

local_var_cmp called

local_var_cmp called

local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 368 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 368 64]
(v1 := v2):
E_reg R8
E_reg R8
b0: True b1: True
local_var_cmp called

local_var_cmp called

local_var_cmp called

local_var_cmp called

local_var_cmp called

local_var_cmp called

local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 376 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 376 64]
(v1 := v2):
E_reg RCX
E_reg RCX
b0: True b1: True
local_var_cmp called

local_var_cmp called

local_var_cmp called

local_var_cmp called

local_var_cmp called

local_var_cmp called

local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 384 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 384 64]
(v1 := v2):
E_reg RDX
E_reg RDX
b0: True b1: True
local_var_cmp called

local_var_cmp called

local_var_cmp called

local_var_cmp called

local_var_cmp called

local_var_cmp called

local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 392 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 392 64]
(v1 := v2):
E_reg RSI
E_reg RSI
b0: True b1: True
Mem Chk: True
Result: Success
Nodes errf -> errf_332 and errf -> errf_26 have been verified to do the same.

same_behavior for the nodes: .label_33 -> errf_370 and .label_9 -> errf_64

same_behavior checking these two SStates:

SA || RAX := Dereference: [(Var: RSP0 - Value: 360),8], RCX := Dereference: [(Var: RSP0 - Value: 368),8], RDX := (Var: RSP0 - Value: 40), RDI := Value: 0, RSI := Dereference: [(Var: RSP0 - Value: 352),8], R8 := (Var: RSP0 + Value: 8)
SA || [(Var: RSP0 - Value: 16),8] := Dereference: [(Var: RSP0 - Value: 352),8], [(Var: RSP0 - Value: 24),8] := (Var: RSP0 - Value: 216), [(Var: RSP0 - Value: 32),8] := (Var: RSP0 + Value: 8), [(Var: RSP0 - Value: 36),4] := Value: 48, [(Var: RSP0 - Value: 40),4] := Value: 8, [(Var: RSP0 - Value: 176),8] := Dereference: [(Var: RSP0 - Value: 360),8], [(Var: RSP0 - Value: 184),8] := Dereference: [(Var: RSP0 - Value: 368),8], [(Var: RSP0 - Value: 192),8] := Dereference: [(Var: RSP0 - Value: 376),8], [(Var: RSP0 - Value: 200),8] := Dereference: [(Var: RSP0 - Value: 384),8], [(Var: RSP0 - Value: 208),8] := Dereference: [(Var: RSP0 - Value: 392),8]
SA || ZF := Value: 0, CF := Value: 0, SF := Value: 0, OF := Value: 0, PF := Value: 0

SB || RAX := Dereference: [(Var: RSP0 - Value: 360),8], RCX := Dereference: [(Var: RSP0 - Value: 368),8], RDX := (Var: RSP0 - Value: 40), RDI := Value: 0, RSI := Dereference: [(Var: RSP0 - Value: 352),8], R8 := (Var: RSP0 + Value: 8)
SB || [(Var: RSP0 - Value: 16),8] := Dereference: [(Var: RSP0 - Value: 352),8], [(Var: RSP0 - Value: 24),8] := (Var: RSP0 - Value: 216), [(Var: RSP0 - Value: 32),8] := (Var: RSP0 + Value: 8), [(Var: RSP0 - Value: 36),4] := Value: 48, [(Var: RSP0 - Value: 40),4] := Value: 8, [(Var: RSP0 - Value: 176),8] := Dereference: [(Var: RSP0 - Value: 360),8], [(Var: RSP0 - Value: 184),8] := Dereference: [(Var: RSP0 - Value: 368),8], [(Var: RSP0 - Value: 192),8] := Dereference: [(Var: RSP0 - Value: 376),8], [(Var: RSP0 - Value: 200),8] := Dereference: [(Var: RSP0 - Value: 384),8], [(Var: RSP0 - Value: 208),8] := Dereference: [(Var: RSP0 - Value: 392),8]
SB || ZF := Value: 0, CF := Value: 0, SF := Value: 0, OF := Value: 0, PF := Value: 0

Resulting values:
Value A:
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 360 64]) 8
Value B:
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 360 64]) 8
local_var_cmp called

Resulting values:
Value A:
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 368 64]) 8
Value B:
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 368 64]) 8
local_var_cmp called

Resulting values:
Value A:
E_app (Op SUB) [E_var "RSP0" 64,E_val 40 64]
Value B:
E_app (Op SUB) [E_var "RSP0" 64,E_val 40 64]
local_var_cmp called

Resulting values:
Value A:
E_val 0 32
Value B:
E_val 0 32
Resulting values:
Value A:
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 352 64]) 8
Value B:
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 352 64]) 8
local_var_cmp called

Resulting values:
Value A:
E_app (Op ADD) [E_var "RSP0" 64,E_val 8 64]
Value B:
E_app (Op ADD) [E_var "RSP0" 64,E_val 8 64]
Reg Chk: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 16 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 16 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 352 64]) 8
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 352 64]) 8
b0: True b1: True
local_var_cmp called

local_var_cmp called

local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 16 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 176 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 352 64]) 8
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 360 64]) 8
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 16 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 184 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 352 64]) 8
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 368 64]) 8
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 16 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 192 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 352 64]) 8
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 376 64]) 8
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 16 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 200 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 352 64]) 8
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 384 64]) 8
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 16 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 208 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 352 64]) 8
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 392 64]) 8
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 16 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 352 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 352 64]) 8
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 352 64]) 8
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 16 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 360 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 352 64]) 8
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 360 64]) 8
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 16 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 368 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 352 64]) 8
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 368 64]) 8
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 16 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 376 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 352 64]) 8
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 376 64]) 8
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 16 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 384 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 352 64]) 8
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 384 64]) 8
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 16 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 392 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 352 64]) 8
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 392 64]) 8
b0: True b1: True
local_var_cmp called

local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 24 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 24 64]
(v1 := v2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 216 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 216 64]
b0: True b1: True
local_var_cmp called

local_var_cmp called

local_var_cmp called

local_var_cmp called

local_var_cmp called

local_var_cmp called

local_var_cmp called

local_var_cmp called

local_var_cmp called

local_var_cmp called

local_var_cmp called

local_var_cmp called

local_var_cmp called

local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 32 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 32 64]
(v1 := v2):
E_app (Op ADD) [E_var "RSP0" 64,E_val 8 64]
E_app (Op ADD) [E_var "RSP0" 64,E_val 8 64]
b0: True b1: True
local_var_cmp called

local_var_cmp called

local_var_cmp called

local_var_cmp called

local_var_cmp called

local_var_cmp called

local_var_cmp called

local_var_cmp called

local_var_cmp called

local_var_cmp called

local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 36 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 36 64]
(v1 := v2):
E_val 48 32
E_val 48 32
b0: True b1: True
local_var_cmp called

local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 40 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 40 64]
(v1 := v2):
E_val 8 32
E_val 8 32
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 176 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 16 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 360 64]) 8
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 352 64]) 8
b0: True b1: True
local_var_cmp called

local_var_cmp called

local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 176 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 176 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 360 64]) 8
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 360 64]) 8
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 176 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 184 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 360 64]) 8
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 368 64]) 8
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 176 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 192 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 360 64]) 8
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 376 64]) 8
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 176 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 200 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 360 64]) 8
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 384 64]) 8
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 176 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 208 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 360 64]) 8
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 392 64]) 8
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 176 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 352 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 360 64]) 8
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 352 64]) 8
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 176 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 360 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 360 64]) 8
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 360 64]) 8
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 176 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 368 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 360 64]) 8
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 368 64]) 8
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 176 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 376 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 360 64]) 8
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 376 64]) 8
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 176 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 384 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 360 64]) 8
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 384 64]) 8
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 176 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 392 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 360 64]) 8
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 392 64]) 8
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 184 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 16 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 368 64]) 8
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 352 64]) 8
b0: True b1: True
local_var_cmp called

local_var_cmp called

local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 184 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 176 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 368 64]) 8
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 360 64]) 8
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 184 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 184 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 368 64]) 8
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 368 64]) 8
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 184 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 192 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 368 64]) 8
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 376 64]) 8
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 184 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 200 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 368 64]) 8
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 384 64]) 8
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 184 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 208 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 368 64]) 8
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 392 64]) 8
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 184 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 352 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 368 64]) 8
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 352 64]) 8
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 184 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 360 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 368 64]) 8
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 360 64]) 8
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 184 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 368 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 368 64]) 8
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 368 64]) 8
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 184 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 376 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 368 64]) 8
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 376 64]) 8
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 184 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 384 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 368 64]) 8
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 384 64]) 8
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 184 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 392 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 368 64]) 8
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 392 64]) 8
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 192 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 16 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 376 64]) 8
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 352 64]) 8
b0: True b1: True
local_var_cmp called

local_var_cmp called

local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 192 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 176 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 376 64]) 8
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 360 64]) 8
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 192 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 184 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 376 64]) 8
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 368 64]) 8
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 192 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 192 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 376 64]) 8
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 376 64]) 8
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 192 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 200 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 376 64]) 8
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 384 64]) 8
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 192 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 208 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 376 64]) 8
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 392 64]) 8
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 192 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 352 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 376 64]) 8
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 352 64]) 8
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 192 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 360 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 376 64]) 8
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 360 64]) 8
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 192 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 368 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 376 64]) 8
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 368 64]) 8
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 192 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 376 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 376 64]) 8
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 376 64]) 8
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 192 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 384 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 376 64]) 8
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 384 64]) 8
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 192 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 392 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 376 64]) 8
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 392 64]) 8
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 200 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 16 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 384 64]) 8
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 352 64]) 8
b0: True b1: True
local_var_cmp called

local_var_cmp called

local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 200 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 176 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 384 64]) 8
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 360 64]) 8
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 200 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 184 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 384 64]) 8
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 368 64]) 8
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 200 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 192 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 384 64]) 8
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 376 64]) 8
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 200 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 200 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 384 64]) 8
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 384 64]) 8
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 200 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 208 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 384 64]) 8
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 392 64]) 8
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 200 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 352 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 384 64]) 8
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 352 64]) 8
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 200 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 360 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 384 64]) 8
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 360 64]) 8
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 200 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 368 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 384 64]) 8
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 368 64]) 8
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 200 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 376 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 384 64]) 8
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 376 64]) 8
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 200 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 384 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 384 64]) 8
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 384 64]) 8
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 200 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 392 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 384 64]) 8
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 392 64]) 8
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 208 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 16 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 392 64]) 8
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 352 64]) 8
b0: True b1: True
local_var_cmp called

local_var_cmp called

local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 208 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 176 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 392 64]) 8
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 360 64]) 8
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 208 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 184 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 392 64]) 8
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 368 64]) 8
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 208 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 192 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 392 64]) 8
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 376 64]) 8
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 208 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 200 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 392 64]) 8
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 384 64]) 8
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 208 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 208 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 392 64]) 8
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 392 64]) 8
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 208 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 352 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 392 64]) 8
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 352 64]) 8
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 208 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 360 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 392 64]) 8
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 360 64]) 8
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 208 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 368 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 392 64]) 8
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 368 64]) 8
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 208 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 376 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 392 64]) 8
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 376 64]) 8
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 208 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 384 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 392 64]) 8
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 384 64]) 8
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 208 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 392 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 392 64]) 8
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 392 64]) 8
b0: True b1: True
Mem Chk: True
Result: Success
Nodes .label_33 -> errf_370 and .label_9 -> errf_64 have been verified to do the same.

same_behavior for the nodes: errf_371 -> errf_371 and errf_65 -> errf_65

same_behavior checking these two SStates:

SA || RAX := error_print@()

SB || RAX := error_print@()

Resulting values:
Value A:
E_app (F2 "error_print" "") []
Value B:
E_app (F2 "error_print" "") []
Reg Chk: True
Mem Chk: True
Result: Success
Nodes errf_371 -> errf_371 and errf_65 -> errf_65 have been verified to do the same.

same_behavior for the nodes: errf_333 -> errf_348 and errf_27 -> errf_42

same_behavior checking these two SStates:

SA || XMM0 := Dereference: [(Var: RSP0 - Value: 344),16], XMM1 := Dereference: [(Var: RSP0 - Value: 328),16], XMM2 := Dereference: [(Var: RSP0 - Value: 312),16], XMM3 := Dereference: [(Var: RSP0 - Value: 296),16], XMM4 := Dereference: [(Var: RSP0 - Value: 280),16], XMM5 := Dereference: [(Var: RSP0 - Value: 264),16], XMM6 := Dereference: [(Var: RSP0 - Value: 248),16], XMM7 := Dereference: [(Var: RSP0 - Value: 232),16]
SA || [(Var: RSP0 - Value: 56),16] := Dereference: [(Var: RSP0 - Value: 232),16], [(Var: RSP0 - Value: 72),16] := Dereference: [(Var: RSP0 - Value: 248),16], [(Var: RSP0 - Value: 88),16] := Dereference: [(Var: RSP0 - Value: 264),16], [(Var: RSP0 - Value: 104),16] := Dereference: [(Var: RSP0 - Value: 280),16], [(Var: RSP0 - Value: 120),16] := Dereference: [(Var: RSP0 - Value: 296),16], [(Var: RSP0 - Value: 136),16] := Dereference: [(Var: RSP0 - Value: 312),16], [(Var: RSP0 - Value: 152),16] := Dereference: [(Var: RSP0 - Value: 328),16], [(Var: RSP0 - Value: 168),16] := Dereference: [(Var: RSP0 - Value: 344),16]

SB || XMM0 := Dereference: [(Var: RSP0 - Value: 344),16], XMM1 := Dereference: [(Var: RSP0 - Value: 328),16], XMM2 := Dereference: [(Var: RSP0 - Value: 312),16], XMM3 := Dereference: [(Var: RSP0 - Value: 296),16], XMM4 := Dereference: [(Var: RSP0 - Value: 280),16], XMM5 := Dereference: [(Var: RSP0 - Value: 264),16], XMM6 := Dereference: [(Var: RSP0 - Value: 248),16], XMM7 := Dereference: [(Var: RSP0 - Value: 232),16]
SB || [(Var: RSP0 - Value: 56),16] := Dereference: [(Var: RSP0 - Value: 232),16], [(Var: RSP0 - Value: 72),16] := Dereference: [(Var: RSP0 - Value: 248),16], [(Var: RSP0 - Value: 88),16] := Dereference: [(Var: RSP0 - Value: 264),16], [(Var: RSP0 - Value: 104),16] := Dereference: [(Var: RSP0 - Value: 280),16], [(Var: RSP0 - Value: 120),16] := Dereference: [(Var: RSP0 - Value: 296),16], [(Var: RSP0 - Value: 136),16] := Dereference: [(Var: RSP0 - Value: 312),16], [(Var: RSP0 - Value: 152),16] := Dereference: [(Var: RSP0 - Value: 328),16], [(Var: RSP0 - Value: 168),16] := Dereference: [(Var: RSP0 - Value: 344),16]

Resulting values:
Value A:
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 344 64]) 16
Value B:
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 344 64]) 16
local_var_cmp called

Resulting values:
Value A:
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 328 64]) 16
Value B:
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 328 64]) 16
local_var_cmp called

Resulting values:
Value A:
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 312 64]) 16
Value B:
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 312 64]) 16
local_var_cmp called

Resulting values:
Value A:
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 296 64]) 16
Value B:
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 296 64]) 16
local_var_cmp called

Resulting values:
Value A:
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 280 64]) 16
Value B:
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 280 64]) 16
local_var_cmp called

Resulting values:
Value A:
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 264 64]) 16
Value B:
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 264 64]) 16
local_var_cmp called

Resulting values:
Value A:
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 248 64]) 16
Value B:
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 248 64]) 16
local_var_cmp called

Resulting values:
Value A:
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 232 64]) 16
Value B:
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 232 64]) 16
local_var_cmp called

Reg Chk: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 56 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 56 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 232 64]) 16
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 232 64]) 16
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 56 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 72 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 232 64]) 16
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 248 64]) 16
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 56 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 88 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 232 64]) 16
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 264 64]) 16
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 56 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 104 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 232 64]) 16
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 280 64]) 16
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 56 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 120 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 232 64]) 16
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 296 64]) 16
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 56 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 136 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 232 64]) 16
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 312 64]) 16
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 56 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 152 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 232 64]) 16
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 328 64]) 16
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 56 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 168 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 232 64]) 16
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 344 64]) 16
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 56 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 232 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 232 64]) 16
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 232 64]) 16
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 56 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 248 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 232 64]) 16
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 248 64]) 16
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 56 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 264 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 232 64]) 16
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 264 64]) 16
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 56 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 280 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 232 64]) 16
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 280 64]) 16
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 56 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 296 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 232 64]) 16
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 296 64]) 16
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 56 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 312 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 232 64]) 16
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 312 64]) 16
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 56 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 328 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 232 64]) 16
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 328 64]) 16
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 56 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 344 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 232 64]) 16
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 344 64]) 16
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 72 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 56 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 248 64]) 16
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 232 64]) 16
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 72 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 72 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 248 64]) 16
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 248 64]) 16
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 72 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 88 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 248 64]) 16
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 264 64]) 16
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 72 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 104 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 248 64]) 16
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 280 64]) 16
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 72 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 120 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 248 64]) 16
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 296 64]) 16
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 72 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 136 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 248 64]) 16
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 312 64]) 16
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 72 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 152 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 248 64]) 16
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 328 64]) 16
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 72 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 168 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 248 64]) 16
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 344 64]) 16
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 72 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 232 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 248 64]) 16
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 232 64]) 16
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 72 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 248 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 248 64]) 16
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 248 64]) 16
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 72 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 264 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 248 64]) 16
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 264 64]) 16
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 72 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 280 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 248 64]) 16
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 280 64]) 16
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 72 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 296 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 248 64]) 16
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 296 64]) 16
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 72 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 312 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 248 64]) 16
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 312 64]) 16
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 72 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 328 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 248 64]) 16
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 328 64]) 16
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 72 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 344 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 248 64]) 16
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 344 64]) 16
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 88 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 56 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 264 64]) 16
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 232 64]) 16
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 88 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 72 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 264 64]) 16
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 248 64]) 16
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 88 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 88 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 264 64]) 16
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 264 64]) 16
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 88 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 104 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 264 64]) 16
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 280 64]) 16
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 88 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 120 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 264 64]) 16
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 296 64]) 16
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 88 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 136 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 264 64]) 16
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 312 64]) 16
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 88 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 152 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 264 64]) 16
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 328 64]) 16
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 88 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 168 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 264 64]) 16
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 344 64]) 16
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 88 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 232 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 264 64]) 16
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 232 64]) 16
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 88 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 248 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 264 64]) 16
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 248 64]) 16
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 88 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 264 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 264 64]) 16
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 264 64]) 16
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 88 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 280 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 264 64]) 16
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 280 64]) 16
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 88 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 296 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 264 64]) 16
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 296 64]) 16
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 88 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 312 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 264 64]) 16
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 312 64]) 16
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 88 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 328 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 264 64]) 16
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 328 64]) 16
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 88 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 344 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 264 64]) 16
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 344 64]) 16
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 104 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 56 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 280 64]) 16
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 232 64]) 16
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 104 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 72 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 280 64]) 16
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 248 64]) 16
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 104 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 88 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 280 64]) 16
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 264 64]) 16
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 104 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 104 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 280 64]) 16
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 280 64]) 16
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 104 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 120 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 280 64]) 16
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 296 64]) 16
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 104 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 136 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 280 64]) 16
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 312 64]) 16
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 104 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 152 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 280 64]) 16
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 328 64]) 16
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 104 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 168 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 280 64]) 16
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 344 64]) 16
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 104 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 232 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 280 64]) 16
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 232 64]) 16
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 104 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 248 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 280 64]) 16
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 248 64]) 16
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 104 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 264 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 280 64]) 16
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 264 64]) 16
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 104 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 280 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 280 64]) 16
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 280 64]) 16
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 104 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 296 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 280 64]) 16
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 296 64]) 16
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 104 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 312 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 280 64]) 16
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 312 64]) 16
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 104 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 328 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 280 64]) 16
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 328 64]) 16
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 104 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 344 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 280 64]) 16
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 344 64]) 16
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 120 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 56 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 296 64]) 16
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 232 64]) 16
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 120 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 72 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 296 64]) 16
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 248 64]) 16
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 120 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 88 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 296 64]) 16
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 264 64]) 16
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 120 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 104 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 296 64]) 16
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 280 64]) 16
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 120 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 120 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 296 64]) 16
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 296 64]) 16
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 120 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 136 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 296 64]) 16
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 312 64]) 16
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 120 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 152 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 296 64]) 16
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 328 64]) 16
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 120 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 168 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 296 64]) 16
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 344 64]) 16
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 120 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 232 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 296 64]) 16
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 232 64]) 16
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 120 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 248 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 296 64]) 16
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 248 64]) 16
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 120 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 264 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 296 64]) 16
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 264 64]) 16
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 120 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 280 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 296 64]) 16
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 280 64]) 16
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 120 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 296 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 296 64]) 16
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 296 64]) 16
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 120 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 312 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 296 64]) 16
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 312 64]) 16
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 120 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 328 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 296 64]) 16
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 328 64]) 16
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 120 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 344 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 296 64]) 16
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 344 64]) 16
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 136 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 56 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 312 64]) 16
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 232 64]) 16
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 136 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 72 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 312 64]) 16
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 248 64]) 16
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 136 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 88 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 312 64]) 16
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 264 64]) 16
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 136 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 104 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 312 64]) 16
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 280 64]) 16
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 136 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 120 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 312 64]) 16
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 296 64]) 16
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 136 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 136 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 312 64]) 16
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 312 64]) 16
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 136 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 152 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 312 64]) 16
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 328 64]) 16
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 136 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 168 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 312 64]) 16
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 344 64]) 16
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 136 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 232 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 312 64]) 16
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 232 64]) 16
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 136 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 248 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 312 64]) 16
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 248 64]) 16
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 136 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 264 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 312 64]) 16
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 264 64]) 16
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 136 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 280 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 312 64]) 16
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 280 64]) 16
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 136 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 296 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 312 64]) 16
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 296 64]) 16
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 136 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 312 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 312 64]) 16
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 312 64]) 16
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 136 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 328 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 312 64]) 16
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 328 64]) 16
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 136 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 344 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 312 64]) 16
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 344 64]) 16
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 152 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 56 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 328 64]) 16
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 232 64]) 16
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 152 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 72 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 328 64]) 16
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 248 64]) 16
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 152 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 88 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 328 64]) 16
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 264 64]) 16
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 152 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 104 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 328 64]) 16
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 280 64]) 16
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 152 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 120 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 328 64]) 16
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 296 64]) 16
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 152 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 136 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 328 64]) 16
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 312 64]) 16
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 152 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 152 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 328 64]) 16
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 328 64]) 16
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 152 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 168 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 328 64]) 16
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 344 64]) 16
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 152 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 232 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 328 64]) 16
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 232 64]) 16
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 152 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 248 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 328 64]) 16
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 248 64]) 16
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 152 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 264 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 328 64]) 16
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 264 64]) 16
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 152 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 280 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 328 64]) 16
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 280 64]) 16
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 152 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 296 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 328 64]) 16
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 296 64]) 16
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 152 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 312 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 328 64]) 16
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 312 64]) 16
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 152 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 328 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 328 64]) 16
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 328 64]) 16
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 152 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 344 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 328 64]) 16
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 344 64]) 16
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 168 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 56 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 344 64]) 16
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 232 64]) 16
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 168 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 72 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 344 64]) 16
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 248 64]) 16
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 168 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 88 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 344 64]) 16
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 264 64]) 16
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 168 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 104 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 344 64]) 16
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 280 64]) 16
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 168 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 120 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 344 64]) 16
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 296 64]) 16
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 168 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 136 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 344 64]) 16
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 312 64]) 16
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 168 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 152 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 344 64]) 16
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 328 64]) 16
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 168 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 168 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 344 64]) 16
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 344 64]) 16
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 168 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 232 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 344 64]) 16
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 232 64]) 16
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 168 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 248 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 344 64]) 16
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 248 64]) 16
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 168 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 264 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 344 64]) 16
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 264 64]) 16
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 168 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 280 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 344 64]) 16
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 280 64]) 16
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 168 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 296 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 344 64]) 16
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 296 64]) 16
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 168 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 312 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 344 64]) 16
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 312 64]) 16
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 168 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 328 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 344 64]) 16
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 328 64]) 16
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 168 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 344 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 344 64]) 16
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 344 64]) 16
b0: True b1: True
Mem Chk: True
Result: Success
Nodes errf_333 -> errf_348 and errf_27 -> errf_42 have been verified to do the same.

Label relationship:
 <--> 

Local variable relationship:
(Var: RSP0 - Value: 168) <--> (Var: RSP0 - Value: 344),(Var: RSP0 - Value: 328),(Var: RSP0 - Value: 312),(Var: RSP0 - Value: 296),(Var: RSP0 - Value: 280),(Var: RSP0 - Value: 264),(Var: RSP0 - Value: 248),(Var: RSP0 - Value: 232),(Var: RSP0 - Value: 168),(Var: RSP0 - Value: 152),(Var: RSP0 - Value: 136),(Var: RSP0 - Value: 120),(Var: RSP0 - Value: 104),(Var: RSP0 - Value: 88),(Var: RSP0 - Value: 72),(Var: RSP0 - Value: 56)
(Var: RSP0 - Value: 344) <--> (Var: RSP0 - Value: 328),(Var: RSP0 - Value: 312),(Var: RSP0 - Value: 296),(Var: RSP0 - Value: 280),(Var: RSP0 - Value: 264),(Var: RSP0 - Value: 248),(Var: RSP0 - Value: 232),(Var: RSP0 - Value: 344)
(Var: RSP0 - Value: 152) <--> (Var: RSP0 - Value: 344),(Var: RSP0 - Value: 328),(Var: RSP0 - Value: 312),(Var: RSP0 - Value: 296),(Var: RSP0 - Value: 280),(Var: RSP0 - Value: 264),(Var: RSP0 - Value: 248),(Var: RSP0 - Value: 232),(Var: RSP0 - Value: 168),(Var: RSP0 - Value: 152),(Var: RSP0 - Value: 136),(Var: RSP0 - Value: 120),(Var: RSP0 - Value: 104),(Var: RSP0 - Value: 88),(Var: RSP0 - Value: 72),(Var: RSP0 - Value: 56)
(Var: RSP0 - Value: 328) <--> (Var: RSP0 - Value: 344),(Var: RSP0 - Value: 312),(Var: RSP0 - Value: 296),(Var: RSP0 - Value: 280),(Var: RSP0 - Value: 264),(Var: RSP0 - Value: 248),(Var: RSP0 - Value: 232),(Var: RSP0 - Value: 328)
(Var: RSP0 - Value: 136) <--> (Var: RSP0 - Value: 344),(Var: RSP0 - Value: 328),(Var: RSP0 - Value: 312),(Var: RSP0 - Value: 296),(Var: RSP0 - Value: 280),(Var: RSP0 - Value: 264),(Var: RSP0 - Value: 248),(Var: RSP0 - Value: 232),(Var: RSP0 - Value: 168),(Var: RSP0 - Value: 152),(Var: RSP0 - Value: 136),(Var: RSP0 - Value: 120),(Var: RSP0 - Value: 104),(Var: RSP0 - Value: 88),(Var: RSP0 - Value: 72),(Var: RSP0 - Value: 56)
(Var: RSP0 - Value: 312) <--> (Var: RSP0 - Value: 344),(Var: RSP0 - Value: 328),(Var: RSP0 - Value: 296),(Var: RSP0 - Value: 280),(Var: RSP0 - Value: 264),(Var: RSP0 - Value: 248),(Var: RSP0 - Value: 232),(Var: RSP0 - Value: 312)
(Var: RSP0 - Value: 120) <--> (Var: RSP0 - Value: 344),(Var: RSP0 - Value: 328),(Var: RSP0 - Value: 312),(Var: RSP0 - Value: 296),(Var: RSP0 - Value: 280),(Var: RSP0 - Value: 264),(Var: RSP0 - Value: 248),(Var: RSP0 - Value: 232),(Var: RSP0 - Value: 168),(Var: RSP0 - Value: 152),(Var: RSP0 - Value: 136),(Var: RSP0 - Value: 120),(Var: RSP0 - Value: 104),(Var: RSP0 - Value: 88),(Var: RSP0 - Value: 72),(Var: RSP0 - Value: 56)
(Var: RSP0 - Value: 296) <--> (Var: RSP0 - Value: 344),(Var: RSP0 - Value: 328),(Var: RSP0 - Value: 312),(Var: RSP0 - Value: 280),(Var: RSP0 - Value: 264),(Var: RSP0 - Value: 248),(Var: RSP0 - Value: 232),(Var: RSP0 - Value: 296)
(Var: RSP0 - Value: 104) <--> (Var: RSP0 - Value: 344),(Var: RSP0 - Value: 328),(Var: RSP0 - Value: 312),(Var: RSP0 - Value: 296),(Var: RSP0 - Value: 280),(Var: RSP0 - Value: 264),(Var: RSP0 - Value: 248),(Var: RSP0 - Value: 232),(Var: RSP0 - Value: 168),(Var: RSP0 - Value: 152),(Var: RSP0 - Value: 136),(Var: RSP0 - Value: 120),(Var: RSP0 - Value: 104),(Var: RSP0 - Value: 88),(Var: RSP0 - Value: 72),(Var: RSP0 - Value: 56)
(Var: RSP0 - Value: 280) <--> (Var: RSP0 - Value: 344),(Var: RSP0 - Value: 328),(Var: RSP0 - Value: 312),(Var: RSP0 - Value: 296),(Var: RSP0 - Value: 264),(Var: RSP0 - Value: 248),(Var: RSP0 - Value: 232),(Var: RSP0 - Value: 280)
(Var: RSP0 - Value: 88) <--> (Var: RSP0 - Value: 344),(Var: RSP0 - Value: 328),(Var: RSP0 - Value: 312),(Var: RSP0 - Value: 296),(Var: RSP0 - Value: 280),(Var: RSP0 - Value: 264),(Var: RSP0 - Value: 248),(Var: RSP0 - Value: 232),(Var: RSP0 - Value: 168),(Var: RSP0 - Value: 152),(Var: RSP0 - Value: 136),(Var: RSP0 - Value: 120),(Var: RSP0 - Value: 104),(Var: RSP0 - Value: 88),(Var: RSP0 - Value: 72),(Var: RSP0 - Value: 56)
(Var: RSP0 - Value: 264) <--> (Var: RSP0 - Value: 344),(Var: RSP0 - Value: 328),(Var: RSP0 - Value: 312),(Var: RSP0 - Value: 296),(Var: RSP0 - Value: 280),(Var: RSP0 - Value: 248),(Var: RSP0 - Value: 232),(Var: RSP0 - Value: 264)
(Var: RSP0 - Value: 72) <--> (Var: RSP0 - Value: 344),(Var: RSP0 - Value: 328),(Var: RSP0 - Value: 312),(Var: RSP0 - Value: 296),(Var: RSP0 - Value: 280),(Var: RSP0 - Value: 264),(Var: RSP0 - Value: 248),(Var: RSP0 - Value: 232),(Var: RSP0 - Value: 168),(Var: RSP0 - Value: 152),(Var: RSP0 - Value: 136),(Var: RSP0 - Value: 120),(Var: RSP0 - Value: 104),(Var: RSP0 - Value: 88),(Var: RSP0 - Value: 72),(Var: RSP0 - Value: 56)
(Var: RSP0 - Value: 248) <--> (Var: RSP0 - Value: 344),(Var: RSP0 - Value: 328),(Var: RSP0 - Value: 312),(Var: RSP0 - Value: 296),(Var: RSP0 - Value: 280),(Var: RSP0 - Value: 264),(Var: RSP0 - Value: 232),(Var: RSP0 - Value: 248)
(Var: RSP0 - Value: 56) <--> (Var: RSP0 - Value: 344),(Var: RSP0 - Value: 328),(Var: RSP0 - Value: 312),(Var: RSP0 - Value: 296),(Var: RSP0 - Value: 280),(Var: RSP0 - Value: 264),(Var: RSP0 - Value: 248),(Var: RSP0 - Value: 232),(Var: RSP0 - Value: 168),(Var: RSP0 - Value: 152),(Var: RSP0 - Value: 136),(Var: RSP0 - Value: 120),(Var: RSP0 - Value: 104),(Var: RSP0 - Value: 88),(Var: RSP0 - Value: 72),(Var: RSP0 - Value: 56)
(Var: RSP0 - Value: 232) <--> (Var: RSP0 - Value: 344),(Var: RSP0 - Value: 328),(Var: RSP0 - Value: 312),(Var: RSP0 - Value: 296),(Var: RSP0 - Value: 280),(Var: RSP0 - Value: 264),(Var: RSP0 - Value: 248),(Var: RSP0 - Value: 232)
(Var: RSP0 - Value: 208) <--> (Var: RSP0 - Value: 392),(Var: RSP0 - Value: 384),(Var: RSP0 - Value: 376),(Var: RSP0 - Value: 368),(Var: RSP0 - Value: 360),(Var: RSP0 - Value: 352),(Var: RSP0 - Value: 208),(Var: RSP0 - Value: 200),(Var: RSP0 - Value: 192),(Var: RSP0 - Value: 184),(Var: RSP0 - Value: 176),(Var: RSP0 - Value: 16)
(Var: RSP0 - Value: 392) <--> (Var: RSP0 - Value: 384),(Var: RSP0 - Value: 376),(Var: RSP0 - Value: 368),(Var: RSP0 - Value: 360),(Var: RSP0 - Value: 352),(Var: RSP0 - Value: 392)
(Var: RSP0 - Value: 200) <--> (Var: RSP0 - Value: 392),(Var: RSP0 - Value: 384),(Var: RSP0 - Value: 376),(Var: RSP0 - Value: 368),(Var: RSP0 - Value: 360),(Var: RSP0 - Value: 352),(Var: RSP0 - Value: 208),(Var: RSP0 - Value: 200),(Var: RSP0 - Value: 192),(Var: RSP0 - Value: 184),(Var: RSP0 - Value: 176),(Var: RSP0 - Value: 16)
(Var: RSP0 - Value: 384) <--> (Var: RSP0 - Value: 392),(Var: RSP0 - Value: 376),(Var: RSP0 - Value: 368),(Var: RSP0 - Value: 360),(Var: RSP0 - Value: 352),(Var: RSP0 - Value: 384)
(Var: RSP0 - Value: 192) <--> (Var: RSP0 - Value: 392),(Var: RSP0 - Value: 384),(Var: RSP0 - Value: 376),(Var: RSP0 - Value: 368),(Var: RSP0 - Value: 360),(Var: RSP0 - Value: 352),(Var: RSP0 - Value: 208),(Var: RSP0 - Value: 200),(Var: RSP0 - Value: 192),(Var: RSP0 - Value: 184),(Var: RSP0 - Value: 176),(Var: RSP0 - Value: 16)
(Var: RSP0 - Value: 376) <--> (Var: RSP0 - Value: 392),(Var: RSP0 - Value: 384),(Var: RSP0 - Value: 368),(Var: RSP0 - Value: 360),(Var: RSP0 - Value: 352),(Var: RSP0 - Value: 376)
(Var: RSP0 - Value: 184) <--> (Var: RSP0 - Value: 392),(Var: RSP0 - Value: 384),(Var: RSP0 - Value: 376),(Var: RSP0 - Value: 368),(Var: RSP0 - Value: 360),(Var: RSP0 - Value: 352),(Var: RSP0 - Value: 208),(Var: RSP0 - Value: 200),(Var: RSP0 - Value: 192),(Var: RSP0 - Value: 184),(Var: RSP0 - Value: 176),(Var: RSP0 - Value: 16)
(Var: RSP0 - Value: 368) <--> (Var: RSP0 - Value: 392),(Var: RSP0 - Value: 384),(Var: RSP0 - Value: 376),(Var: RSP0 - Value: 360),(Var: RSP0 - Value: 352),(Var: RSP0 - Value: 368)
(Var: RSP0 - Value: 176) <--> (Var: RSP0 - Value: 392),(Var: RSP0 - Value: 384),(Var: RSP0 - Value: 376),(Var: RSP0 - Value: 368),(Var: RSP0 - Value: 360),(Var: RSP0 - Value: 352),(Var: RSP0 - Value: 208),(Var: RSP0 - Value: 200),(Var: RSP0 - Value: 192),(Var: RSP0 - Value: 184),(Var: RSP0 - Value: 176),(Var: RSP0 - Value: 16)
(Var: RSP0 - Value: 360) <--> (Var: RSP0 - Value: 392),(Var: RSP0 - Value: 384),(Var: RSP0 - Value: 376),(Var: RSP0 - Value: 368),(Var: RSP0 - Value: 352),(Var: RSP0 - Value: 360)
(Var: RSP0 - Value: 36) <--> (Var: RSP0 - Value: 36)
(Var: RSP0 - Value: 32) <--> (Var: RSP0 - Value: 32)
(Var: RSP0 - Value: 216) <--> (Var: RSP0 - Value: 216)
(Var: RSP0 - Value: 24) <--> (Var: RSP0 - Value: 24)
(Var: RSP0 - Value: 16) <--> (Var: RSP0 - Value: 392),(Var: RSP0 - Value: 384),(Var: RSP0 - Value: 376),(Var: RSP0 - Value: 368),(Var: RSP0 - Value: 360),(Var: RSP0 - Value: 352),(Var: RSP0 - Value: 208),(Var: RSP0 - Value: 200),(Var: RSP0 - Value: 192),(Var: RSP0 - Value: 184),(Var: RSP0 - Value: 176),(Var: RSP0 - Value: 16)
(Var: RSP0 - Value: 352) <--> (Var: RSP0 - Value: 392),(Var: RSP0 - Value: 384),(Var: RSP0 - Value: 376),(Var: RSP0 - Value: 368),(Var: RSP0 - Value: 360),(Var: RSP0 - Value: 352)
(Var: RSP0 - Value: 40) <--> (Var: RSP0 - Value: 40)
(Var: RSP0 - Value: 8) <--> (Var: RSP0 - Value: 8)

Succesful check!
Considering text section (3/8): "perrf"
--------
.dot code for CFG of text section perrf for Vanilla
diGraph perrf_Vanilla{
	perrf_0  [label="[perrf_219,perrf_234]"]
	perrf_1  [label="[.label_26,perrf_256]"]
	perrf_2  [label="[perrf_257,perrf_257]"]
	perrf_3  [label="[perrf,perrf_218]"]

	perrf_0 -> perrf_1;
	perrf_1 -> perrf_2;

	perrf_3 -> perrf_1 [label="ZF"];
	perrf_3 -> perrf_0 [label="!ZF"];
}
--------
--------
.dot code for CFG of text section perrf for Randomized
diGraph perrf_Randomized{
	perrf_0  [label="[perrf_129,perrf_144]"]
	perrf_1  [label="[.label_14,perrf_166]"]
	perrf_2  [label="[perrf_167,perrf_167]"]
	perrf_3  [label="[perrf,perrf_128]"]

	perrf_0 -> perrf_1;
	perrf_1 -> perrf_2;

	perrf_3 -> perrf_1 [label="ZF"];
	perrf_3 -> perrf_0 [label="!ZF"];
}
--------
Starting Node: 3

Edges: 0 ----> 1, 1 ----> 2, , 3 --ZF--> 1, 3 --!ZF--> 0

Symbolic Execution for Binary "Vanilla":
Current text section: "perrf"
node 0:
XMM0 := Dereference: [(Var: RSP0 - Value: 344),16], XMM1 := Dereference: [(Var: RSP0 - Value: 328),16], XMM2 := Dereference: [(Var: RSP0 - Value: 312),16], XMM3 := Dereference: [(Var: RSP0 - Value: 296),16], XMM4 := Dereference: [(Var: RSP0 - Value: 280),16], XMM5 := Dereference: [(Var: RSP0 - Value: 264),16], XMM6 := Dereference: [(Var: RSP0 - Value: 248),16], XMM7 := Dereference: [(Var: RSP0 - Value: 232),16]
[(Var: RSP0 - Value: 56),16] := Dereference: [(Var: RSP0 - Value: 232),16], [(Var: RSP0 - Value: 72),16] := Dereference: [(Var: RSP0 - Value: 248),16], [(Var: RSP0 - Value: 88),16] := Dereference: [(Var: RSP0 - Value: 264),16], [(Var: RSP0 - Value: 104),16] := Dereference: [(Var: RSP0 - Value: 280),16], [(Var: RSP0 - Value: 120),16] := Dereference: [(Var: RSP0 - Value: 296),16], [(Var: RSP0 - Value: 136),16] := Dereference: [(Var: RSP0 - Value: 312),16], [(Var: RSP0 - Value: 152),16] := Dereference: [(Var: RSP0 - Value: 328),16], [(Var: RSP0 - Value: 168),16] := Dereference: [(Var: RSP0 - Value: 344),16]
node 1:
RAX := Dereference: [(Var: RSP0 - Value: 360),8], RCX := Dereference: [(Var: RSP0 - Value: 368),8], RDX := (Var: RSP0 - Value: 40), RDI := Value: 1, RSI := Dereference: [(Var: RSP0 - Value: 352),8], R8 := (Var: RSP0 + Value: 8)
[(Var: RSP0 - Value: 16),8] := Dereference: [(Var: RSP0 - Value: 352),8], [(Var: RSP0 - Value: 24),8] := (Var: RSP0 - Value: 216), [(Var: RSP0 - Value: 32),8] := (Var: RSP0 + Value: 8), [(Var: RSP0 - Value: 36),4] := Value: 48, [(Var: RSP0 - Value: 40),4] := Value: 8, [(Var: RSP0 - Value: 176),8] := Dereference: [(Var: RSP0 - Value: 360),8], [(Var: RSP0 - Value: 184),8] := Dereference: [(Var: RSP0 - Value: 368),8], [(Var: RSP0 - Value: 192),8] := Dereference: [(Var: RSP0 - Value: 376),8], [(Var: RSP0 - Value: 200),8] := Dereference: [(Var: RSP0 - Value: 384),8], [(Var: RSP0 - Value: 208),8] := Dereference: [(Var: RSP0 - Value: 392),8]
node 2:
RAX := error_print@()
node 3:
[(Var: RSP0 - Value: 8),8] := Var: RBP0, [(Var: RSP0 - Value: 232),16] := Reg: XMM7, [(Var: RSP0 - Value: 248),16] := Reg: XMM6, [(Var: RSP0 - Value: 264),16] := Reg: XMM5, [(Var: RSP0 - Value: 280),16] := Reg: XMM4, [(Var: RSP0 - Value: 296),16] := Reg: XMM3, [(Var: RSP0 - Value: 312),16] := Reg: XMM2, [(Var: RSP0 - Value: 328),16] := Reg: XMM1, [(Var: RSP0 - Value: 344),16] := Reg: XMM0, [(Var: RSP0 - Value: 352),8] := Reg: RDI, [(Var: RSP0 - Value: 360),8] := Reg: R9, [(Var: RSP0 - Value: 368),8] := Reg: R8, [(Var: RSP0 - Value: 376),8] := Reg: RCX, [(Var: RSP0 - Value: 384),8] := Reg: RDX, [(Var: RSP0 - Value: 392),8] := Reg: RSI
ZF := TEST(TakeBits: <7,0>(Reg: RAX),TakeBits: <7,0>(Reg: RAX)), CF := TEST(TakeBits: <7,0>(Reg: RAX),TakeBits: <7,0>(Reg: RAX)), SF := TEST(TakeBits: <7,0>(Reg: RAX),TakeBits: <7,0>(Reg: RAX)), OF := TEST(TakeBits: <7,0>(Reg: RAX),TakeBits: <7,0>(Reg: RAX)), PF := TEST(TakeBits: <7,0>(Reg: RAX),TakeBits: <7,0>(Reg: RAX))
--------

Starting Node: 3

Edges: 0 ----> 1, 1 ----> 2, , 3 --ZF--> 1, 3 --!ZF--> 0

Symbolic Execution for Binary "Randomized":
Current text section: "perrf"
node 0:
XMM0 := Dereference: [(Var: RSP0 - Value: 344),16], XMM1 := Dereference: [(Var: RSP0 - Value: 328),16], XMM2 := Dereference: [(Var: RSP0 - Value: 312),16], XMM3 := Dereference: [(Var: RSP0 - Value: 296),16], XMM4 := Dereference: [(Var: RSP0 - Value: 280),16], XMM5 := Dereference: [(Var: RSP0 - Value: 264),16], XMM6 := Dereference: [(Var: RSP0 - Value: 248),16], XMM7 := Dereference: [(Var: RSP0 - Value: 232),16]
[(Var: RSP0 - Value: 56),16] := Dereference: [(Var: RSP0 - Value: 232),16], [(Var: RSP0 - Value: 72),16] := Dereference: [(Var: RSP0 - Value: 248),16], [(Var: RSP0 - Value: 88),16] := Dereference: [(Var: RSP0 - Value: 264),16], [(Var: RSP0 - Value: 104),16] := Dereference: [(Var: RSP0 - Value: 280),16], [(Var: RSP0 - Value: 120),16] := Dereference: [(Var: RSP0 - Value: 296),16], [(Var: RSP0 - Value: 136),16] := Dereference: [(Var: RSP0 - Value: 312),16], [(Var: RSP0 - Value: 152),16] := Dereference: [(Var: RSP0 - Value: 328),16], [(Var: RSP0 - Value: 168),16] := Dereference: [(Var: RSP0 - Value: 344),16]
node 1:
RAX := Dereference: [(Var: RSP0 - Value: 360),8], RCX := Dereference: [(Var: RSP0 - Value: 368),8], RDX := (Var: RSP0 - Value: 40), RDI := Value: 1, RSI := Dereference: [(Var: RSP0 - Value: 352),8], R8 := (Var: RSP0 + Value: 8)
[(Var: RSP0 - Value: 16),8] := Dereference: [(Var: RSP0 - Value: 352),8], [(Var: RSP0 - Value: 24),8] := (Var: RSP0 - Value: 216), [(Var: RSP0 - Value: 32),8] := (Var: RSP0 + Value: 8), [(Var: RSP0 - Value: 36),4] := Value: 48, [(Var: RSP0 - Value: 40),4] := Value: 8, [(Var: RSP0 - Value: 176),8] := Dereference: [(Var: RSP0 - Value: 360),8], [(Var: RSP0 - Value: 184),8] := Dereference: [(Var: RSP0 - Value: 368),8], [(Var: RSP0 - Value: 192),8] := Dereference: [(Var: RSP0 - Value: 376),8], [(Var: RSP0 - Value: 200),8] := Dereference: [(Var: RSP0 - Value: 384),8], [(Var: RSP0 - Value: 208),8] := Dereference: [(Var: RSP0 - Value: 392),8]
node 2:
RAX := error_print@()
node 3:
[(Var: RSP0 - Value: 8),8] := Var: RBP0, [(Var: RSP0 - Value: 232),16] := Reg: XMM7, [(Var: RSP0 - Value: 248),16] := Reg: XMM6, [(Var: RSP0 - Value: 264),16] := Reg: XMM5, [(Var: RSP0 - Value: 280),16] := Reg: XMM4, [(Var: RSP0 - Value: 296),16] := Reg: XMM3, [(Var: RSP0 - Value: 312),16] := Reg: XMM2, [(Var: RSP0 - Value: 328),16] := Reg: XMM1, [(Var: RSP0 - Value: 344),16] := Reg: XMM0, [(Var: RSP0 - Value: 352),8] := Reg: RDI, [(Var: RSP0 - Value: 360),8] := Reg: R9, [(Var: RSP0 - Value: 368),8] := Reg: R8, [(Var: RSP0 - Value: 376),8] := Reg: RCX, [(Var: RSP0 - Value: 384),8] := Reg: RDX, [(Var: RSP0 - Value: 392),8] := Reg: RSI
ZF := TEST(TakeBits: <7,0>(Reg: RAX),TakeBits: <7,0>(Reg: RAX)), CF := TEST(TakeBits: <7,0>(Reg: RAX),TakeBits: <7,0>(Reg: RAX)), SF := TEST(TakeBits: <7,0>(Reg: RAX),TakeBits: <7,0>(Reg: RAX)), OF := TEST(TakeBits: <7,0>(Reg: RAX),TakeBits: <7,0>(Reg: RAX)), PF := TEST(TakeBits: <7,0>(Reg: RAX),TakeBits: <7,0>(Reg: RAX))
--------

same_behavior for the nodes: perrf -> perrf_218 and perrf -> perrf_128

same_behavior checking these two SStates:

SA || [(Var: RSP0 - Value: 8),8] := Var: RBP0, [(Var: RSP0 - Value: 232),16] := Reg: XMM7, [(Var: RSP0 - Value: 248),16] := Reg: XMM6, [(Var: RSP0 - Value: 264),16] := Reg: XMM5, [(Var: RSP0 - Value: 280),16] := Reg: XMM4, [(Var: RSP0 - Value: 296),16] := Reg: XMM3, [(Var: RSP0 - Value: 312),16] := Reg: XMM2, [(Var: RSP0 - Value: 328),16] := Reg: XMM1, [(Var: RSP0 - Value: 344),16] := Reg: XMM0, [(Var: RSP0 - Value: 352),8] := Reg: RDI, [(Var: RSP0 - Value: 360),8] := Reg: R9, [(Var: RSP0 - Value: 368),8] := Reg: R8, [(Var: RSP0 - Value: 376),8] := Reg: RCX, [(Var: RSP0 - Value: 384),8] := Reg: RDX, [(Var: RSP0 - Value: 392),8] := Reg: RSI
SA || ZF := TEST(TakeBits: <7,0>(Reg: RAX),TakeBits: <7,0>(Reg: RAX)), CF := TEST(TakeBits: <7,0>(Reg: RAX),TakeBits: <7,0>(Reg: RAX)), SF := TEST(TakeBits: <7,0>(Reg: RAX),TakeBits: <7,0>(Reg: RAX)), OF := TEST(TakeBits: <7,0>(Reg: RAX),TakeBits: <7,0>(Reg: RAX)), PF := TEST(TakeBits: <7,0>(Reg: RAX),TakeBits: <7,0>(Reg: RAX))

SB || [(Var: RSP0 - Value: 8),8] := Var: RBP0, [(Var: RSP0 - Value: 232),16] := Reg: XMM7, [(Var: RSP0 - Value: 248),16] := Reg: XMM6, [(Var: RSP0 - Value: 264),16] := Reg: XMM5, [(Var: RSP0 - Value: 280),16] := Reg: XMM4, [(Var: RSP0 - Value: 296),16] := Reg: XMM3, [(Var: RSP0 - Value: 312),16] := Reg: XMM2, [(Var: RSP0 - Value: 328),16] := Reg: XMM1, [(Var: RSP0 - Value: 344),16] := Reg: XMM0, [(Var: RSP0 - Value: 352),8] := Reg: RDI, [(Var: RSP0 - Value: 360),8] := Reg: R9, [(Var: RSP0 - Value: 368),8] := Reg: R8, [(Var: RSP0 - Value: 376),8] := Reg: RCX, [(Var: RSP0 - Value: 384),8] := Reg: RDX, [(Var: RSP0 - Value: 392),8] := Reg: RSI
SB || ZF := TEST(TakeBits: <7,0>(Reg: RAX),TakeBits: <7,0>(Reg: RAX)), CF := TEST(TakeBits: <7,0>(Reg: RAX),TakeBits: <7,0>(Reg: RAX)), SF := TEST(TakeBits: <7,0>(Reg: RAX),TakeBits: <7,0>(Reg: RAX)), OF := TEST(TakeBits: <7,0>(Reg: RAX),TakeBits: <7,0>(Reg: RAX)), PF := TEST(TakeBits: <7,0>(Reg: RAX),TakeBits: <7,0>(Reg: RAX))

Reg Chk: True
local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 8 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 8 64]
(v1 := v2):
E_var "RBP0" 64
E_var "RBP0" 64
b0: True b1: True
local_var_cmp called

local_var_cmp called

local_var_cmp called

local_var_cmp called

local_var_cmp called

local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 232 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 232 64]
(v1 := v2):
E_reg XMM7
E_reg XMM7
b0: True b1: True
local_var_cmp called

local_var_cmp called

local_var_cmp called

local_var_cmp called

local_var_cmp called

local_var_cmp called

local_var_cmp called

local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 248 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 248 64]
(v1 := v2):
E_reg XMM6
E_reg XMM6
b0: True b1: True
local_var_cmp called

local_var_cmp called

local_var_cmp called

local_var_cmp called

local_var_cmp called

local_var_cmp called

local_var_cmp called

local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 264 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 264 64]
(v1 := v2):
E_reg XMM5
E_reg XMM5
b0: True b1: True
local_var_cmp called

local_var_cmp called

local_var_cmp called

local_var_cmp called

local_var_cmp called

local_var_cmp called

local_var_cmp called

local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 280 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 280 64]
(v1 := v2):
E_reg XMM4
E_reg XMM4
b0: True b1: True
local_var_cmp called

local_var_cmp called

local_var_cmp called

local_var_cmp called

local_var_cmp called

local_var_cmp called

local_var_cmp called

local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 296 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 296 64]
(v1 := v2):
E_reg XMM3
E_reg XMM3
b0: True b1: True
local_var_cmp called

local_var_cmp called

local_var_cmp called

local_var_cmp called

local_var_cmp called

local_var_cmp called

local_var_cmp called

local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 312 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 312 64]
(v1 := v2):
E_reg XMM2
E_reg XMM2
b0: True b1: True
local_var_cmp called

local_var_cmp called

local_var_cmp called

local_var_cmp called

local_var_cmp called

local_var_cmp called

local_var_cmp called

local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 328 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 328 64]
(v1 := v2):
E_reg XMM1
E_reg XMM1
b0: True b1: True
local_var_cmp called

local_var_cmp called

local_var_cmp called

local_var_cmp called

local_var_cmp called

local_var_cmp called

local_var_cmp called

local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 344 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 344 64]
(v1 := v2):
E_reg XMM0
E_reg XMM0
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 352 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 352 64]
(v1 := v2):
E_reg RDI
E_reg RDI
b0: True b1: True
local_var_cmp called

local_var_cmp called

local_var_cmp called

local_var_cmp called

local_var_cmp called

local_var_cmp called

local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 360 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 360 64]
(v1 := v2):
E_reg R9
E_reg R9
b0: True b1: True
local_var_cmp called

local_var_cmp called

local_var_cmp called

local_var_cmp called

local_var_cmp called

local_var_cmp called

local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 368 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 368 64]
(v1 := v2):
E_reg R8
E_reg R8
b0: True b1: True
local_var_cmp called

local_var_cmp called

local_var_cmp called

local_var_cmp called

local_var_cmp called

local_var_cmp called

local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 376 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 376 64]
(v1 := v2):
E_reg RCX
E_reg RCX
b0: True b1: True
local_var_cmp called

local_var_cmp called

local_var_cmp called

local_var_cmp called

local_var_cmp called

local_var_cmp called

local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 384 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 384 64]
(v1 := v2):
E_reg RDX
E_reg RDX
b0: True b1: True
local_var_cmp called

local_var_cmp called

local_var_cmp called

local_var_cmp called

local_var_cmp called

local_var_cmp called

local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 392 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 392 64]
(v1 := v2):
E_reg RSI
E_reg RSI
b0: True b1: True
Mem Chk: True
Result: Success
Nodes perrf -> perrf_218 and perrf -> perrf_128 have been verified to do the same.

same_behavior for the nodes: .label_26 -> perrf_256 and .label_14 -> perrf_166

same_behavior checking these two SStates:

SA || RAX := Dereference: [(Var: RSP0 - Value: 360),8], RCX := Dereference: [(Var: RSP0 - Value: 368),8], RDX := (Var: RSP0 - Value: 40), RDI := Value: 1, RSI := Dereference: [(Var: RSP0 - Value: 352),8], R8 := (Var: RSP0 + Value: 8)
SA || [(Var: RSP0 - Value: 16),8] := Dereference: [(Var: RSP0 - Value: 352),8], [(Var: RSP0 - Value: 24),8] := (Var: RSP0 - Value: 216), [(Var: RSP0 - Value: 32),8] := (Var: RSP0 + Value: 8), [(Var: RSP0 - Value: 36),4] := Value: 48, [(Var: RSP0 - Value: 40),4] := Value: 8, [(Var: RSP0 - Value: 176),8] := Dereference: [(Var: RSP0 - Value: 360),8], [(Var: RSP0 - Value: 184),8] := Dereference: [(Var: RSP0 - Value: 368),8], [(Var: RSP0 - Value: 192),8] := Dereference: [(Var: RSP0 - Value: 376),8], [(Var: RSP0 - Value: 200),8] := Dereference: [(Var: RSP0 - Value: 384),8], [(Var: RSP0 - Value: 208),8] := Dereference: [(Var: RSP0 - Value: 392),8]

SB || RAX := Dereference: [(Var: RSP0 - Value: 360),8], RCX := Dereference: [(Var: RSP0 - Value: 368),8], RDX := (Var: RSP0 - Value: 40), RDI := Value: 1, RSI := Dereference: [(Var: RSP0 - Value: 352),8], R8 := (Var: RSP0 + Value: 8)
SB || [(Var: RSP0 - Value: 16),8] := Dereference: [(Var: RSP0 - Value: 352),8], [(Var: RSP0 - Value: 24),8] := (Var: RSP0 - Value: 216), [(Var: RSP0 - Value: 32),8] := (Var: RSP0 + Value: 8), [(Var: RSP0 - Value: 36),4] := Value: 48, [(Var: RSP0 - Value: 40),4] := Value: 8, [(Var: RSP0 - Value: 176),8] := Dereference: [(Var: RSP0 - Value: 360),8], [(Var: RSP0 - Value: 184),8] := Dereference: [(Var: RSP0 - Value: 368),8], [(Var: RSP0 - Value: 192),8] := Dereference: [(Var: RSP0 - Value: 376),8], [(Var: RSP0 - Value: 200),8] := Dereference: [(Var: RSP0 - Value: 384),8], [(Var: RSP0 - Value: 208),8] := Dereference: [(Var: RSP0 - Value: 392),8]

Resulting values:
Value A:
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 360 64]) 8
Value B:
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 360 64]) 8
local_var_cmp called

Resulting values:
Value A:
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 368 64]) 8
Value B:
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 368 64]) 8
local_var_cmp called

Resulting values:
Value A:
E_app (Op SUB) [E_var "RSP0" 64,E_val 40 64]
Value B:
E_app (Op SUB) [E_var "RSP0" 64,E_val 40 64]
local_var_cmp called

Resulting values:
Value A:
E_val 1 32
Value B:
E_val 1 32
Resulting values:
Value A:
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 352 64]) 8
Value B:
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 352 64]) 8
local_var_cmp called

Resulting values:
Value A:
E_app (Op ADD) [E_var "RSP0" 64,E_val 8 64]
Value B:
E_app (Op ADD) [E_var "RSP0" 64,E_val 8 64]
Reg Chk: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 16 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 16 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 352 64]) 8
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 352 64]) 8
b0: True b1: True
local_var_cmp called

local_var_cmp called

local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 16 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 176 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 352 64]) 8
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 360 64]) 8
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 16 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 184 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 352 64]) 8
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 368 64]) 8
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 16 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 192 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 352 64]) 8
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 376 64]) 8
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 16 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 200 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 352 64]) 8
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 384 64]) 8
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 16 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 208 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 352 64]) 8
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 392 64]) 8
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 16 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 352 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 352 64]) 8
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 352 64]) 8
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 16 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 360 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 352 64]) 8
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 360 64]) 8
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 16 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 368 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 352 64]) 8
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 368 64]) 8
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 16 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 376 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 352 64]) 8
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 376 64]) 8
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 16 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 384 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 352 64]) 8
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 384 64]) 8
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 16 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 392 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 352 64]) 8
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 392 64]) 8
b0: True b1: True
local_var_cmp called

local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 24 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 24 64]
(v1 := v2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 216 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 216 64]
b0: True b1: True
local_var_cmp called

local_var_cmp called

local_var_cmp called

local_var_cmp called

local_var_cmp called

local_var_cmp called

local_var_cmp called

local_var_cmp called

local_var_cmp called

local_var_cmp called

local_var_cmp called

local_var_cmp called

local_var_cmp called

local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 32 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 32 64]
(v1 := v2):
E_app (Op ADD) [E_var "RSP0" 64,E_val 8 64]
E_app (Op ADD) [E_var "RSP0" 64,E_val 8 64]
b0: True b1: True
local_var_cmp called

local_var_cmp called

local_var_cmp called

local_var_cmp called

local_var_cmp called

local_var_cmp called

local_var_cmp called

local_var_cmp called

local_var_cmp called

local_var_cmp called

local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 36 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 36 64]
(v1 := v2):
E_val 48 32
E_val 48 32
b0: True b1: True
local_var_cmp called

local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 40 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 40 64]
(v1 := v2):
E_val 8 32
E_val 8 32
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 176 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 16 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 360 64]) 8
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 352 64]) 8
b0: True b1: True
local_var_cmp called

local_var_cmp called

local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 176 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 176 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 360 64]) 8
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 360 64]) 8
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 176 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 184 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 360 64]) 8
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 368 64]) 8
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 176 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 192 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 360 64]) 8
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 376 64]) 8
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 176 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 200 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 360 64]) 8
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 384 64]) 8
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 176 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 208 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 360 64]) 8
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 392 64]) 8
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 176 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 352 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 360 64]) 8
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 352 64]) 8
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 176 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 360 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 360 64]) 8
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 360 64]) 8
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 176 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 368 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 360 64]) 8
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 368 64]) 8
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 176 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 376 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 360 64]) 8
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 376 64]) 8
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 176 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 384 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 360 64]) 8
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 384 64]) 8
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 176 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 392 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 360 64]) 8
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 392 64]) 8
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 184 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 16 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 368 64]) 8
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 352 64]) 8
b0: True b1: True
local_var_cmp called

local_var_cmp called

local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 184 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 176 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 368 64]) 8
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 360 64]) 8
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 184 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 184 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 368 64]) 8
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 368 64]) 8
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 184 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 192 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 368 64]) 8
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 376 64]) 8
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 184 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 200 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 368 64]) 8
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 384 64]) 8
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 184 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 208 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 368 64]) 8
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 392 64]) 8
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 184 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 352 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 368 64]) 8
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 352 64]) 8
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 184 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 360 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 368 64]) 8
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 360 64]) 8
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 184 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 368 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 368 64]) 8
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 368 64]) 8
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 184 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 376 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 368 64]) 8
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 376 64]) 8
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 184 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 384 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 368 64]) 8
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 384 64]) 8
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 184 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 392 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 368 64]) 8
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 392 64]) 8
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 192 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 16 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 376 64]) 8
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 352 64]) 8
b0: True b1: True
local_var_cmp called

local_var_cmp called

local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 192 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 176 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 376 64]) 8
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 360 64]) 8
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 192 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 184 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 376 64]) 8
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 368 64]) 8
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 192 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 192 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 376 64]) 8
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 376 64]) 8
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 192 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 200 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 376 64]) 8
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 384 64]) 8
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 192 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 208 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 376 64]) 8
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 392 64]) 8
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 192 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 352 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 376 64]) 8
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 352 64]) 8
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 192 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 360 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 376 64]) 8
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 360 64]) 8
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 192 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 368 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 376 64]) 8
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 368 64]) 8
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 192 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 376 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 376 64]) 8
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 376 64]) 8
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 192 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 384 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 376 64]) 8
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 384 64]) 8
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 192 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 392 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 376 64]) 8
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 392 64]) 8
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 200 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 16 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 384 64]) 8
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 352 64]) 8
b0: True b1: True
local_var_cmp called

local_var_cmp called

local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 200 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 176 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 384 64]) 8
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 360 64]) 8
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 200 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 184 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 384 64]) 8
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 368 64]) 8
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 200 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 192 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 384 64]) 8
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 376 64]) 8
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 200 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 200 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 384 64]) 8
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 384 64]) 8
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 200 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 208 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 384 64]) 8
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 392 64]) 8
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 200 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 352 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 384 64]) 8
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 352 64]) 8
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 200 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 360 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 384 64]) 8
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 360 64]) 8
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 200 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 368 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 384 64]) 8
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 368 64]) 8
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 200 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 376 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 384 64]) 8
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 376 64]) 8
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 200 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 384 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 384 64]) 8
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 384 64]) 8
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 200 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 392 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 384 64]) 8
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 392 64]) 8
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 208 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 16 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 392 64]) 8
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 352 64]) 8
b0: True b1: True
local_var_cmp called

local_var_cmp called

local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 208 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 176 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 392 64]) 8
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 360 64]) 8
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 208 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 184 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 392 64]) 8
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 368 64]) 8
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 208 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 192 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 392 64]) 8
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 376 64]) 8
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 208 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 200 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 392 64]) 8
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 384 64]) 8
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 208 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 208 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 392 64]) 8
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 392 64]) 8
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 208 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 352 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 392 64]) 8
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 352 64]) 8
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 208 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 360 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 392 64]) 8
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 360 64]) 8
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 208 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 368 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 392 64]) 8
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 368 64]) 8
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 208 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 376 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 392 64]) 8
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 376 64]) 8
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 208 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 384 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 392 64]) 8
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 384 64]) 8
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 208 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 392 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 392 64]) 8
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 392 64]) 8
b0: True b1: True
Mem Chk: True
Result: Success
Nodes .label_26 -> perrf_256 and .label_14 -> perrf_166 have been verified to do the same.

same_behavior for the nodes: perrf_257 -> perrf_257 and perrf_167 -> perrf_167

same_behavior checking these two SStates:

SA || RAX := error_print@()

SB || RAX := error_print@()

Resulting values:
Value A:
E_app (F2 "error_print" "") []
Value B:
E_app (F2 "error_print" "") []
Reg Chk: True
Mem Chk: True
Result: Success
Nodes perrf_257 -> perrf_257 and perrf_167 -> perrf_167 have been verified to do the same.

same_behavior for the nodes: perrf_219 -> perrf_234 and perrf_129 -> perrf_144

same_behavior checking these two SStates:

SA || XMM0 := Dereference: [(Var: RSP0 - Value: 344),16], XMM1 := Dereference: [(Var: RSP0 - Value: 328),16], XMM2 := Dereference: [(Var: RSP0 - Value: 312),16], XMM3 := Dereference: [(Var: RSP0 - Value: 296),16], XMM4 := Dereference: [(Var: RSP0 - Value: 280),16], XMM5 := Dereference: [(Var: RSP0 - Value: 264),16], XMM6 := Dereference: [(Var: RSP0 - Value: 248),16], XMM7 := Dereference: [(Var: RSP0 - Value: 232),16]
SA || [(Var: RSP0 - Value: 56),16] := Dereference: [(Var: RSP0 - Value: 232),16], [(Var: RSP0 - Value: 72),16] := Dereference: [(Var: RSP0 - Value: 248),16], [(Var: RSP0 - Value: 88),16] := Dereference: [(Var: RSP0 - Value: 264),16], [(Var: RSP0 - Value: 104),16] := Dereference: [(Var: RSP0 - Value: 280),16], [(Var: RSP0 - Value: 120),16] := Dereference: [(Var: RSP0 - Value: 296),16], [(Var: RSP0 - Value: 136),16] := Dereference: [(Var: RSP0 - Value: 312),16], [(Var: RSP0 - Value: 152),16] := Dereference: [(Var: RSP0 - Value: 328),16], [(Var: RSP0 - Value: 168),16] := Dereference: [(Var: RSP0 - Value: 344),16]

SB || XMM0 := Dereference: [(Var: RSP0 - Value: 344),16], XMM1 := Dereference: [(Var: RSP0 - Value: 328),16], XMM2 := Dereference: [(Var: RSP0 - Value: 312),16], XMM3 := Dereference: [(Var: RSP0 - Value: 296),16], XMM4 := Dereference: [(Var: RSP0 - Value: 280),16], XMM5 := Dereference: [(Var: RSP0 - Value: 264),16], XMM6 := Dereference: [(Var: RSP0 - Value: 248),16], XMM7 := Dereference: [(Var: RSP0 - Value: 232),16]
SB || [(Var: RSP0 - Value: 56),16] := Dereference: [(Var: RSP0 - Value: 232),16], [(Var: RSP0 - Value: 72),16] := Dereference: [(Var: RSP0 - Value: 248),16], [(Var: RSP0 - Value: 88),16] := Dereference: [(Var: RSP0 - Value: 264),16], [(Var: RSP0 - Value: 104),16] := Dereference: [(Var: RSP0 - Value: 280),16], [(Var: RSP0 - Value: 120),16] := Dereference: [(Var: RSP0 - Value: 296),16], [(Var: RSP0 - Value: 136),16] := Dereference: [(Var: RSP0 - Value: 312),16], [(Var: RSP0 - Value: 152),16] := Dereference: [(Var: RSP0 - Value: 328),16], [(Var: RSP0 - Value: 168),16] := Dereference: [(Var: RSP0 - Value: 344),16]

Resulting values:
Value A:
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 344 64]) 16
Value B:
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 344 64]) 16
local_var_cmp called

Resulting values:
Value A:
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 328 64]) 16
Value B:
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 328 64]) 16
local_var_cmp called

Resulting values:
Value A:
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 312 64]) 16
Value B:
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 312 64]) 16
local_var_cmp called

Resulting values:
Value A:
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 296 64]) 16
Value B:
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 296 64]) 16
local_var_cmp called

Resulting values:
Value A:
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 280 64]) 16
Value B:
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 280 64]) 16
local_var_cmp called

Resulting values:
Value A:
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 264 64]) 16
Value B:
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 264 64]) 16
local_var_cmp called

Resulting values:
Value A:
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 248 64]) 16
Value B:
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 248 64]) 16
local_var_cmp called

Resulting values:
Value A:
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 232 64]) 16
Value B:
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 232 64]) 16
local_var_cmp called

Reg Chk: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 56 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 56 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 232 64]) 16
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 232 64]) 16
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 56 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 72 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 232 64]) 16
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 248 64]) 16
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 56 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 88 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 232 64]) 16
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 264 64]) 16
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 56 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 104 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 232 64]) 16
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 280 64]) 16
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 56 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 120 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 232 64]) 16
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 296 64]) 16
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 56 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 136 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 232 64]) 16
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 312 64]) 16
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 56 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 152 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 232 64]) 16
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 328 64]) 16
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 56 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 168 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 232 64]) 16
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 344 64]) 16
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 56 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 232 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 232 64]) 16
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 232 64]) 16
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 56 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 248 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 232 64]) 16
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 248 64]) 16
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 56 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 264 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 232 64]) 16
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 264 64]) 16
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 56 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 280 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 232 64]) 16
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 280 64]) 16
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 56 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 296 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 232 64]) 16
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 296 64]) 16
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 56 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 312 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 232 64]) 16
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 312 64]) 16
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 56 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 328 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 232 64]) 16
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 328 64]) 16
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 56 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 344 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 232 64]) 16
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 344 64]) 16
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 72 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 56 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 248 64]) 16
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 232 64]) 16
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 72 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 72 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 248 64]) 16
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 248 64]) 16
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 72 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 88 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 248 64]) 16
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 264 64]) 16
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 72 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 104 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 248 64]) 16
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 280 64]) 16
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 72 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 120 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 248 64]) 16
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 296 64]) 16
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 72 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 136 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 248 64]) 16
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 312 64]) 16
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 72 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 152 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 248 64]) 16
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 328 64]) 16
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 72 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 168 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 248 64]) 16
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 344 64]) 16
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 72 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 232 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 248 64]) 16
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 232 64]) 16
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 72 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 248 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 248 64]) 16
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 248 64]) 16
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 72 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 264 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 248 64]) 16
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 264 64]) 16
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 72 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 280 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 248 64]) 16
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 280 64]) 16
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 72 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 296 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 248 64]) 16
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 296 64]) 16
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 72 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 312 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 248 64]) 16
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 312 64]) 16
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 72 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 328 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 248 64]) 16
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 328 64]) 16
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 72 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 344 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 248 64]) 16
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 344 64]) 16
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 88 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 56 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 264 64]) 16
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 232 64]) 16
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 88 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 72 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 264 64]) 16
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 248 64]) 16
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 88 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 88 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 264 64]) 16
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 264 64]) 16
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 88 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 104 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 264 64]) 16
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 280 64]) 16
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 88 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 120 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 264 64]) 16
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 296 64]) 16
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 88 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 136 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 264 64]) 16
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 312 64]) 16
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 88 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 152 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 264 64]) 16
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 328 64]) 16
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 88 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 168 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 264 64]) 16
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 344 64]) 16
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 88 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 232 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 264 64]) 16
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 232 64]) 16
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 88 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 248 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 264 64]) 16
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 248 64]) 16
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 88 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 264 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 264 64]) 16
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 264 64]) 16
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 88 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 280 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 264 64]) 16
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 280 64]) 16
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 88 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 296 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 264 64]) 16
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 296 64]) 16
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 88 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 312 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 264 64]) 16
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 312 64]) 16
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 88 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 328 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 264 64]) 16
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 328 64]) 16
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 88 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 344 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 264 64]) 16
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 344 64]) 16
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 104 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 56 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 280 64]) 16
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 232 64]) 16
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 104 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 72 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 280 64]) 16
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 248 64]) 16
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 104 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 88 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 280 64]) 16
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 264 64]) 16
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 104 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 104 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 280 64]) 16
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 280 64]) 16
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 104 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 120 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 280 64]) 16
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 296 64]) 16
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 104 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 136 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 280 64]) 16
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 312 64]) 16
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 104 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 152 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 280 64]) 16
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 328 64]) 16
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 104 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 168 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 280 64]) 16
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 344 64]) 16
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 104 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 232 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 280 64]) 16
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 232 64]) 16
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 104 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 248 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 280 64]) 16
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 248 64]) 16
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 104 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 264 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 280 64]) 16
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 264 64]) 16
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 104 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 280 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 280 64]) 16
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 280 64]) 16
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 104 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 296 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 280 64]) 16
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 296 64]) 16
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 104 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 312 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 280 64]) 16
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 312 64]) 16
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 104 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 328 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 280 64]) 16
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 328 64]) 16
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 104 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 344 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 280 64]) 16
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 344 64]) 16
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 120 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 56 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 296 64]) 16
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 232 64]) 16
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 120 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 72 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 296 64]) 16
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 248 64]) 16
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 120 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 88 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 296 64]) 16
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 264 64]) 16
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 120 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 104 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 296 64]) 16
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 280 64]) 16
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 120 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 120 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 296 64]) 16
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 296 64]) 16
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 120 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 136 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 296 64]) 16
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 312 64]) 16
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 120 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 152 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 296 64]) 16
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 328 64]) 16
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 120 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 168 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 296 64]) 16
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 344 64]) 16
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 120 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 232 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 296 64]) 16
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 232 64]) 16
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 120 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 248 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 296 64]) 16
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 248 64]) 16
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 120 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 264 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 296 64]) 16
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 264 64]) 16
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 120 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 280 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 296 64]) 16
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 280 64]) 16
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 120 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 296 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 296 64]) 16
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 296 64]) 16
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 120 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 312 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 296 64]) 16
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 312 64]) 16
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 120 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 328 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 296 64]) 16
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 328 64]) 16
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 120 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 344 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 296 64]) 16
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 344 64]) 16
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 136 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 56 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 312 64]) 16
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 232 64]) 16
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 136 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 72 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 312 64]) 16
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 248 64]) 16
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 136 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 88 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 312 64]) 16
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 264 64]) 16
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 136 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 104 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 312 64]) 16
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 280 64]) 16
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 136 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 120 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 312 64]) 16
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 296 64]) 16
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 136 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 136 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 312 64]) 16
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 312 64]) 16
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 136 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 152 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 312 64]) 16
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 328 64]) 16
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 136 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 168 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 312 64]) 16
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 344 64]) 16
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 136 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 232 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 312 64]) 16
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 232 64]) 16
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 136 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 248 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 312 64]) 16
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 248 64]) 16
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 136 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 264 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 312 64]) 16
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 264 64]) 16
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 136 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 280 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 312 64]) 16
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 280 64]) 16
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 136 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 296 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 312 64]) 16
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 296 64]) 16
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 136 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 312 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 312 64]) 16
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 312 64]) 16
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 136 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 328 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 312 64]) 16
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 328 64]) 16
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 136 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 344 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 312 64]) 16
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 344 64]) 16
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 152 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 56 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 328 64]) 16
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 232 64]) 16
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 152 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 72 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 328 64]) 16
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 248 64]) 16
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 152 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 88 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 328 64]) 16
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 264 64]) 16
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 152 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 104 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 328 64]) 16
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 280 64]) 16
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 152 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 120 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 328 64]) 16
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 296 64]) 16
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 152 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 136 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 328 64]) 16
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 312 64]) 16
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 152 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 152 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 328 64]) 16
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 328 64]) 16
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 152 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 168 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 328 64]) 16
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 344 64]) 16
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 152 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 232 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 328 64]) 16
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 232 64]) 16
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 152 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 248 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 328 64]) 16
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 248 64]) 16
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 152 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 264 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 328 64]) 16
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 264 64]) 16
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 152 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 280 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 328 64]) 16
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 280 64]) 16
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 152 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 296 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 328 64]) 16
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 296 64]) 16
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 152 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 312 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 328 64]) 16
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 312 64]) 16
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 152 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 328 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 328 64]) 16
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 328 64]) 16
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 152 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 344 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 328 64]) 16
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 344 64]) 16
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 168 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 56 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 344 64]) 16
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 232 64]) 16
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 168 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 72 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 344 64]) 16
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 248 64]) 16
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 168 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 88 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 344 64]) 16
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 264 64]) 16
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 168 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 104 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 344 64]) 16
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 280 64]) 16
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 168 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 120 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 344 64]) 16
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 296 64]) 16
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 168 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 136 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 344 64]) 16
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 312 64]) 16
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 168 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 152 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 344 64]) 16
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 328 64]) 16
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 168 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 168 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 344 64]) 16
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 344 64]) 16
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 168 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 232 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 344 64]) 16
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 232 64]) 16
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 168 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 248 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 344 64]) 16
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 248 64]) 16
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 168 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 264 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 344 64]) 16
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 264 64]) 16
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 168 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 280 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 344 64]) 16
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 280 64]) 16
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 168 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 296 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 344 64]) 16
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 296 64]) 16
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 168 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 312 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 344 64]) 16
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 312 64]) 16
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 168 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 328 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 344 64]) 16
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 328 64]) 16
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 168 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 344 64]
(v1 := v2):
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 344 64]) 16
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 344 64]) 16
b0: True b1: True
Mem Chk: True
Result: Success
Nodes perrf_219 -> perrf_234 and perrf_129 -> perrf_144 have been verified to do the same.

Label relationship:
 <--> 

Local variable relationship:
(Var: RSP0 - Value: 168) <--> (Var: RSP0 - Value: 344),(Var: RSP0 - Value: 328),(Var: RSP0 - Value: 312),(Var: RSP0 - Value: 296),(Var: RSP0 - Value: 280),(Var: RSP0 - Value: 264),(Var: RSP0 - Value: 248),(Var: RSP0 - Value: 232),(Var: RSP0 - Value: 168),(Var: RSP0 - Value: 152),(Var: RSP0 - Value: 136),(Var: RSP0 - Value: 120),(Var: RSP0 - Value: 104),(Var: RSP0 - Value: 88),(Var: RSP0 - Value: 72),(Var: RSP0 - Value: 56)
(Var: RSP0 - Value: 344) <--> (Var: RSP0 - Value: 328),(Var: RSP0 - Value: 312),(Var: RSP0 - Value: 296),(Var: RSP0 - Value: 280),(Var: RSP0 - Value: 264),(Var: RSP0 - Value: 248),(Var: RSP0 - Value: 232),(Var: RSP0 - Value: 344)
(Var: RSP0 - Value: 152) <--> (Var: RSP0 - Value: 344),(Var: RSP0 - Value: 328),(Var: RSP0 - Value: 312),(Var: RSP0 - Value: 296),(Var: RSP0 - Value: 280),(Var: RSP0 - Value: 264),(Var: RSP0 - Value: 248),(Var: RSP0 - Value: 232),(Var: RSP0 - Value: 168),(Var: RSP0 - Value: 152),(Var: RSP0 - Value: 136),(Var: RSP0 - Value: 120),(Var: RSP0 - Value: 104),(Var: RSP0 - Value: 88),(Var: RSP0 - Value: 72),(Var: RSP0 - Value: 56)
(Var: RSP0 - Value: 328) <--> (Var: RSP0 - Value: 344),(Var: RSP0 - Value: 312),(Var: RSP0 - Value: 296),(Var: RSP0 - Value: 280),(Var: RSP0 - Value: 264),(Var: RSP0 - Value: 248),(Var: RSP0 - Value: 232),(Var: RSP0 - Value: 328)
(Var: RSP0 - Value: 136) <--> (Var: RSP0 - Value: 344),(Var: RSP0 - Value: 328),(Var: RSP0 - Value: 312),(Var: RSP0 - Value: 296),(Var: RSP0 - Value: 280),(Var: RSP0 - Value: 264),(Var: RSP0 - Value: 248),(Var: RSP0 - Value: 232),(Var: RSP0 - Value: 168),(Var: RSP0 - Value: 152),(Var: RSP0 - Value: 136),(Var: RSP0 - Value: 120),(Var: RSP0 - Value: 104),(Var: RSP0 - Value: 88),(Var: RSP0 - Value: 72),(Var: RSP0 - Value: 56)
(Var: RSP0 - Value: 312) <--> (Var: RSP0 - Value: 344),(Var: RSP0 - Value: 328),(Var: RSP0 - Value: 296),(Var: RSP0 - Value: 280),(Var: RSP0 - Value: 264),(Var: RSP0 - Value: 248),(Var: RSP0 - Value: 232),(Var: RSP0 - Value: 312)
(Var: RSP0 - Value: 120) <--> (Var: RSP0 - Value: 344),(Var: RSP0 - Value: 328),(Var: RSP0 - Value: 312),(Var: RSP0 - Value: 296),(Var: RSP0 - Value: 280),(Var: RSP0 - Value: 264),(Var: RSP0 - Value: 248),(Var: RSP0 - Value: 232),(Var: RSP0 - Value: 168),(Var: RSP0 - Value: 152),(Var: RSP0 - Value: 136),(Var: RSP0 - Value: 120),(Var: RSP0 - Value: 104),(Var: RSP0 - Value: 88),(Var: RSP0 - Value: 72),(Var: RSP0 - Value: 56)
(Var: RSP0 - Value: 296) <--> (Var: RSP0 - Value: 344),(Var: RSP0 - Value: 328),(Var: RSP0 - Value: 312),(Var: RSP0 - Value: 280),(Var: RSP0 - Value: 264),(Var: RSP0 - Value: 248),(Var: RSP0 - Value: 232),(Var: RSP0 - Value: 296)
(Var: RSP0 - Value: 104) <--> (Var: RSP0 - Value: 344),(Var: RSP0 - Value: 328),(Var: RSP0 - Value: 312),(Var: RSP0 - Value: 296),(Var: RSP0 - Value: 280),(Var: RSP0 - Value: 264),(Var: RSP0 - Value: 248),(Var: RSP0 - Value: 232),(Var: RSP0 - Value: 168),(Var: RSP0 - Value: 152),(Var: RSP0 - Value: 136),(Var: RSP0 - Value: 120),(Var: RSP0 - Value: 104),(Var: RSP0 - Value: 88),(Var: RSP0 - Value: 72),(Var: RSP0 - Value: 56)
(Var: RSP0 - Value: 280) <--> (Var: RSP0 - Value: 344),(Var: RSP0 - Value: 328),(Var: RSP0 - Value: 312),(Var: RSP0 - Value: 296),(Var: RSP0 - Value: 264),(Var: RSP0 - Value: 248),(Var: RSP0 - Value: 232),(Var: RSP0 - Value: 280)
(Var: RSP0 - Value: 88) <--> (Var: RSP0 - Value: 344),(Var: RSP0 - Value: 328),(Var: RSP0 - Value: 312),(Var: RSP0 - Value: 296),(Var: RSP0 - Value: 280),(Var: RSP0 - Value: 264),(Var: RSP0 - Value: 248),(Var: RSP0 - Value: 232),(Var: RSP0 - Value: 168),(Var: RSP0 - Value: 152),(Var: RSP0 - Value: 136),(Var: RSP0 - Value: 120),(Var: RSP0 - Value: 104),(Var: RSP0 - Value: 88),(Var: RSP0 - Value: 72),(Var: RSP0 - Value: 56)
(Var: RSP0 - Value: 264) <--> (Var: RSP0 - Value: 344),(Var: RSP0 - Value: 328),(Var: RSP0 - Value: 312),(Var: RSP0 - Value: 296),(Var: RSP0 - Value: 280),(Var: RSP0 - Value: 248),(Var: RSP0 - Value: 232),(Var: RSP0 - Value: 264)
(Var: RSP0 - Value: 72) <--> (Var: RSP0 - Value: 344),(Var: RSP0 - Value: 328),(Var: RSP0 - Value: 312),(Var: RSP0 - Value: 296),(Var: RSP0 - Value: 280),(Var: RSP0 - Value: 264),(Var: RSP0 - Value: 248),(Var: RSP0 - Value: 232),(Var: RSP0 - Value: 168),(Var: RSP0 - Value: 152),(Var: RSP0 - Value: 136),(Var: RSP0 - Value: 120),(Var: RSP0 - Value: 104),(Var: RSP0 - Value: 88),(Var: RSP0 - Value: 72),(Var: RSP0 - Value: 56)
(Var: RSP0 - Value: 248) <--> (Var: RSP0 - Value: 344),(Var: RSP0 - Value: 328),(Var: RSP0 - Value: 312),(Var: RSP0 - Value: 296),(Var: RSP0 - Value: 280),(Var: RSP0 - Value: 264),(Var: RSP0 - Value: 232),(Var: RSP0 - Value: 248)
(Var: RSP0 - Value: 56) <--> (Var: RSP0 - Value: 344),(Var: RSP0 - Value: 328),(Var: RSP0 - Value: 312),(Var: RSP0 - Value: 296),(Var: RSP0 - Value: 280),(Var: RSP0 - Value: 264),(Var: RSP0 - Value: 248),(Var: RSP0 - Value: 232),(Var: RSP0 - Value: 168),(Var: RSP0 - Value: 152),(Var: RSP0 - Value: 136),(Var: RSP0 - Value: 120),(Var: RSP0 - Value: 104),(Var: RSP0 - Value: 88),(Var: RSP0 - Value: 72),(Var: RSP0 - Value: 56)
(Var: RSP0 - Value: 232) <--> (Var: RSP0 - Value: 344),(Var: RSP0 - Value: 328),(Var: RSP0 - Value: 312),(Var: RSP0 - Value: 296),(Var: RSP0 - Value: 280),(Var: RSP0 - Value: 264),(Var: RSP0 - Value: 248),(Var: RSP0 - Value: 232)
(Var: RSP0 - Value: 208) <--> (Var: RSP0 - Value: 392),(Var: RSP0 - Value: 384),(Var: RSP0 - Value: 376),(Var: RSP0 - Value: 368),(Var: RSP0 - Value: 360),(Var: RSP0 - Value: 352),(Var: RSP0 - Value: 208),(Var: RSP0 - Value: 200),(Var: RSP0 - Value: 192),(Var: RSP0 - Value: 184),(Var: RSP0 - Value: 176),(Var: RSP0 - Value: 16)
(Var: RSP0 - Value: 392) <--> (Var: RSP0 - Value: 384),(Var: RSP0 - Value: 376),(Var: RSP0 - Value: 368),(Var: RSP0 - Value: 360),(Var: RSP0 - Value: 352),(Var: RSP0 - Value: 392)
(Var: RSP0 - Value: 200) <--> (Var: RSP0 - Value: 392),(Var: RSP0 - Value: 384),(Var: RSP0 - Value: 376),(Var: RSP0 - Value: 368),(Var: RSP0 - Value: 360),(Var: RSP0 - Value: 352),(Var: RSP0 - Value: 208),(Var: RSP0 - Value: 200),(Var: RSP0 - Value: 192),(Var: RSP0 - Value: 184),(Var: RSP0 - Value: 176),(Var: RSP0 - Value: 16)
(Var: RSP0 - Value: 384) <--> (Var: RSP0 - Value: 392),(Var: RSP0 - Value: 376),(Var: RSP0 - Value: 368),(Var: RSP0 - Value: 360),(Var: RSP0 - Value: 352),(Var: RSP0 - Value: 384)
(Var: RSP0 - Value: 192) <--> (Var: RSP0 - Value: 392),(Var: RSP0 - Value: 384),(Var: RSP0 - Value: 376),(Var: RSP0 - Value: 368),(Var: RSP0 - Value: 360),(Var: RSP0 - Value: 352),(Var: RSP0 - Value: 208),(Var: RSP0 - Value: 200),(Var: RSP0 - Value: 192),(Var: RSP0 - Value: 184),(Var: RSP0 - Value: 176),(Var: RSP0 - Value: 16)
(Var: RSP0 - Value: 376) <--> (Var: RSP0 - Value: 392),(Var: RSP0 - Value: 384),(Var: RSP0 - Value: 368),(Var: RSP0 - Value: 360),(Var: RSP0 - Value: 352),(Var: RSP0 - Value: 376)
(Var: RSP0 - Value: 184) <--> (Var: RSP0 - Value: 392),(Var: RSP0 - Value: 384),(Var: RSP0 - Value: 376),(Var: RSP0 - Value: 368),(Var: RSP0 - Value: 360),(Var: RSP0 - Value: 352),(Var: RSP0 - Value: 208),(Var: RSP0 - Value: 200),(Var: RSP0 - Value: 192),(Var: RSP0 - Value: 184),(Var: RSP0 - Value: 176),(Var: RSP0 - Value: 16)
(Var: RSP0 - Value: 368) <--> (Var: RSP0 - Value: 392),(Var: RSP0 - Value: 384),(Var: RSP0 - Value: 376),(Var: RSP0 - Value: 360),(Var: RSP0 - Value: 352),(Var: RSP0 - Value: 368)
(Var: RSP0 - Value: 176) <--> (Var: RSP0 - Value: 392),(Var: RSP0 - Value: 384),(Var: RSP0 - Value: 376),(Var: RSP0 - Value: 368),(Var: RSP0 - Value: 360),(Var: RSP0 - Value: 352),(Var: RSP0 - Value: 208),(Var: RSP0 - Value: 200),(Var: RSP0 - Value: 192),(Var: RSP0 - Value: 184),(Var: RSP0 - Value: 176),(Var: RSP0 - Value: 16)
(Var: RSP0 - Value: 360) <--> (Var: RSP0 - Value: 392),(Var: RSP0 - Value: 384),(Var: RSP0 - Value: 376),(Var: RSP0 - Value: 368),(Var: RSP0 - Value: 352),(Var: RSP0 - Value: 360)
(Var: RSP0 - Value: 36) <--> (Var: RSP0 - Value: 36)
(Var: RSP0 - Value: 32) <--> (Var: RSP0 - Value: 32)
(Var: RSP0 - Value: 216) <--> (Var: RSP0 - Value: 216)
(Var: RSP0 - Value: 24) <--> (Var: RSP0 - Value: 24)
(Var: RSP0 - Value: 16) <--> (Var: RSP0 - Value: 392),(Var: RSP0 - Value: 384),(Var: RSP0 - Value: 376),(Var: RSP0 - Value: 368),(Var: RSP0 - Value: 360),(Var: RSP0 - Value: 352),(Var: RSP0 - Value: 208),(Var: RSP0 - Value: 200),(Var: RSP0 - Value: 192),(Var: RSP0 - Value: 184),(Var: RSP0 - Value: 176),(Var: RSP0 - Value: 16)
(Var: RSP0 - Value: 352) <--> (Var: RSP0 - Value: 392),(Var: RSP0 - Value: 384),(Var: RSP0 - Value: 376),(Var: RSP0 - Value: 368),(Var: RSP0 - Value: 360),(Var: RSP0 - Value: 352)
(Var: RSP0 - Value: 40) <--> (Var: RSP0 - Value: 40)
(Var: RSP0 - Value: 8) <--> (Var: RSP0 - Value: 8)

Succesful check!
Considering text section (4/8): "getword"
--------
.dot code for CFG of text section getword for Vanilla
diGraph getword_Vanilla{
	getword_0  [label="[getword_44,getword_45]"]
	getword_1  [label="[getword_60,getword_63]"]
	getword_2  [label="[getword_70,getword_72]"]
	getword_3  [label="[.label_19,.label_19]"]
	getword_4  [label="[.label_13,getword_69]"]
	getword_5  [label="[getword_54,getword_56]"]
	getword_6  [label="[getword_57,getword_57]"]
	getword_7  [label="[getword_58,getword_59]"]
	getword_8  [label="[getword_85,getword_87]"]
	getword_9  [label="[getword_95,getword_95]"]
	getword_10  [label="[.label_20,.label_12]"]
	getword_11  [label="[getword_100,getword_100]"]
	getword_12  [label="[getword_101,getword_102]"]
	getword_13  [label="[.label_10,getword_91]"]
	getword_14  [label="[getword_92,getword_92]"]
	getword_15  [label="[getword_93,getword_94]"]
	getword_16  [label="[getword_80,getword_84]"]
	getword_17  [label="[.label_11,getword_108]"]
	getword_18  [label="[.label_17,getword_113]"]
	getword_19  [label="[.label_16,.label_16]"]
	getword_20  [label="[.label_14,getword_79]"]
	getword_21  [label="[.label_15,.label_15]"]
	getword_22  [label="[.label_18,.label_18]"]
	getword_23  [label="[getword_50,getword_50]"]
	getword_24  [label="[getword_51,getword_53]"]
	getword_25  [label="[getword,getword_40]"]
	getword_26  [label="[getword_41,getword_41]"]
	getword_27  [label="[getword_42,getword_43]"]

	getword_0 -> getword_18;
	getword_1 -> getword_19;
	getword_2 -> getword_3;
	getword_3 -> getword_22;
	getword_4 -> getword_3 [label="!ZF"];
	getword_4 -> getword_2 [label="ZF"];
	getword_5 -> getword_6;
	getword_6 -> getword_7;
	getword_7 -> getword_4 [label="ZF"];
	getword_7 -> getword_1 [label="!ZF"];
	getword_8 -> getword_13;
	getword_9 -> getword_17;
	getword_10 -> getword_11;
	getword_11 -> getword_12;
	getword_12 -> getword_20;
	getword_13 -> getword_14;
	getword_14 -> getword_15;
	getword_15 -> getword_10 [label="!ZF"];
	getword_15 -> getword_9 [label="ZF"];
	getword_16 -> getword_13 [label="!ZF"];
	getword_16 -> getword_8 [label="ZF"];
	getword_17 -> getword_18;

	getword_19 -> getword_20;
	getword_20 -> getword_17 [label="ZF"];
	getword_20 -> getword_16 [label="!ZF"];
	getword_21 -> getword_22;
	getword_22 -> getword_23;
	getword_23 -> getword_24;
	getword_24 -> getword_19 [label="ZF"];
	getword_24 -> getword_5 [label="!ZF"];
	getword_25 -> getword_26;
	getword_26 -> getword_27;
	getword_27 -> getword_21 [label="ZF"];
	getword_27 -> getword_0 [label="!ZF"];
}
--------
--------
.dot code for CFG of text section getword for Randomized
diGraph getword_Randomized{
	getword_0  [label="[getword_338,getword_339]"]
	getword_1  [label="[getword_354,getword_357]"]
	getword_2  [label="[getword_397,getword_399]"]
	getword_3  [label="[.label_28,.label_28]"]
	getword_4  [label="[.label_32,getword_396]"]
	getword_5  [label="[getword_348,getword_350]"]
	getword_6  [label="[getword_351,getword_351]"]
	getword_7  [label="[getword_352,getword_353]"]
	getword_8  [label="[getword_380,getword_382]"]
	getword_9  [label="[getword_390,getword_390]"]
	getword_10  [label="[.label_34,.label_36]"]
	getword_11  [label="[getword_406,getword_406]"]
	getword_12  [label="[getword_407,getword_408]"]
	getword_13  [label="[.label_35,getword_386]"]
	getword_14  [label="[getword_387,getword_387]"]
	getword_15  [label="[getword_388,getword_389]"]
	getword_16  [label="[getword_375,getword_379]"]
	getword_17  [label="[.label_30,getword_363]"]
	getword_18  [label="[.label_37,getword_368]"]
	getword_19  [label="[.label_31,.label_31]"]
	getword_20  [label="[.label_29,getword_374]"]
	getword_21  [label="[.label_33,.label_33]"]
	getword_22  [label="[.label_27,.label_27]"]
	getword_23  [label="[getword_344,getword_344]"]
	getword_24  [label="[getword_345,getword_347]"]
	getword_25  [label="[getword,getword_334]"]
	getword_26  [label="[getword_335,getword_335]"]
	getword_27  [label="[getword_336,getword_337]"]

	getword_0 -> getword_18;
	getword_1 -> getword_19;
	getword_2 -> getword_3;
	getword_3 -> getword_22;
	getword_4 -> getword_3 [label="!ZF"];
	getword_4 -> getword_2 [label="ZF"];
	getword_5 -> getword_6;
	getword_6 -> getword_7;
	getword_7 -> getword_4 [label="ZF"];
	getword_7 -> getword_1 [label="!ZF"];
	getword_8 -> getword_13;
	getword_9 -> getword_17;
	getword_10 -> getword_11;
	getword_11 -> getword_12;
	getword_12 -> getword_20;
	getword_13 -> getword_14;
	getword_14 -> getword_15;
	getword_15 -> getword_10 [label="!ZF"];
	getword_15 -> getword_9 [label="ZF"];
	getword_16 -> getword_13 [label="!ZF"];
	getword_16 -> getword_8 [label="ZF"];
	getword_17 -> getword_18;

	getword_19 -> getword_20;
	getword_20 -> getword_17 [label="ZF"];
	getword_20 -> getword_16 [label="!ZF"];
	getword_21 -> getword_22;
	getword_22 -> getword_23;
	getword_23 -> getword_24;
	getword_24 -> getword_19 [label="ZF"];
	getword_24 -> getword_5 [label="!ZF"];
	getword_25 -> getword_26;
	getword_26 -> getword_27;
	getword_27 -> getword_21 [label="ZF"];
	getword_27 -> getword_0 [label="!ZF"];
}
--------
Starting Node: 25

Edges: 0 ----> 18, 1 ----> 19, 2 ----> 3, 3 ----> 22, 4 --!ZF--> 3, 4 --ZF--> 2, 5 ----> 6, 6 ----> 7, 7 --ZF--> 4, 7 --!ZF--> 1, 8 ----> 13, 9 ----> 17, 10 ----> 11, 11 ----> 12, 12 ----> 20, 13 ----> 14, 14 ----> 15, 15 --!ZF--> 10, 15 --ZF--> 9, 16 --!ZF--> 13, 16 --ZF--> 8, 17 ----> 18, , 19 ----> 20, 20 --ZF--> 17, 20 --!ZF--> 16, 21 ----> 22, 22 ----> 23, 23 ----> 24, 24 --ZF--> 19, 24 --!ZF--> 5, 25 ----> 26, 26 ----> 27, 27 --ZF--> 21, 27 --!ZF--> 0

Symbolic Execution for Binary "Vanilla":
Current text section: "getword"
node 0:
[(Var: RSP0 - Value: 12),4] := Value: 0
node 1:
RAX := (Dereference: [Var: wcount,8] + Value: 1)
[Var: wcount,8] := (Dereference: [Var: wcount,8] + Value: 1)
ZF := (Dereference: [Var: wcount,8] + Value: 1), CF := (Dereference: [Var: wcount,8] + Value: 1), SF := (Dereference: [Var: wcount,8] + Value: 1), OF := (Dereference: [Var: wcount,8] + Value: 1), PF := (Dereference: [Var: wcount,8] + Value: 1)
node 2:
RAX := (Dereference: [Var: lcount,8] + Value: 1)
[Var: lcount,8] := (Dereference: [Var: lcount,8] + Value: 1)
ZF := (Dereference: [Var: lcount,8] + Value: 1), CF := (Dereference: [Var: lcount,8] + Value: 1), SF := (Dereference: [Var: lcount,8] + Value: 1), OF := (Dereference: [Var: lcount,8] + Value: 1), PF := (Dereference: [Var: lcount,8] + Value: 1)
node 3:
skip'
node 4:
RAX := (Dereference: [Var: ccount,8] + Value: 1)
[Var: ccount,8] := (Dereference: [Var: ccount,8] + Value: 1)
ZF := CMP(Dereference: [(Var: RSP0 - Value: 28),4],Value: 10), CF := CMP(Dereference: [(Var: RSP0 - Value: 28),4],Value: 10), SF := CMP(Dereference: [(Var: RSP0 - Value: 28),4],Value: 10), OF := CMP(Dereference: [(Var: RSP0 - Value: 28),4],Value: 10), PF := CMP(Dereference: [(Var: RSP0 - Value: 28),4],Value: 10)
node 5:
RAX := Dereference: [(Var: RSP0 - Value: 28),4], RCX := (TakeBits: <63,8>(Reg: RCX) . TakeBits: <7,0>(Dereference: [(Var: RSP0 - Value: 28),4])), RDI := TakeBits: <7,0>(Dereference: [(Var: RSP0 - Value: 28),4])
node 6:
RAX := isword@()
node 7:
ZF := CMP(TakeBits: <31,0>(Reg: RAX),Value: 0), CF := CMP(TakeBits: <31,0>(Reg: RAX),Value: 0), SF := CMP(TakeBits: <31,0>(Reg: RAX),Value: 0), OF := CMP(TakeBits: <31,0>(Reg: RAX),Value: 0), PF := CMP(TakeBits: <31,0>(Reg: RAX),Value: 0)
node 8:
RAX := (Dereference: [Var: lcount,8] + Value: 1)
[Var: lcount,8] := (Dereference: [Var: lcount,8] + Value: 1)
ZF := (Dereference: [Var: lcount,8] + Value: 1), CF := (Dereference: [Var: lcount,8] + Value: 1), SF := (Dereference: [Var: lcount,8] + Value: 1), OF := (Dereference: [Var: lcount,8] + Value: 1), PF := (Dereference: [Var: lcount,8] + Value: 1)
node 9:
skip'
node 10:
RDI := Dereference: [(Var: RSP0 - Value: 24),8]
node 11:
RAX := _IO_getc@()
node 12:
[(Var: RSP0 - Value: 28),4] := TakeBits: <31,0>(Reg: RAX)
node 13:
RAX := Dereference: [(Var: RSP0 - Value: 28),4], RCX := (TakeBits: <63,8>(Reg: RCX) . TakeBits: <7,0>(Dereference: [(Var: RSP0 - Value: 28),4])), RDI := TakeBits: <7,0>(Dereference: [(Var: RSP0 - Value: 28),4])
node 14:
RAX := isword@()
node 15:
ZF := CMP(TakeBits: <31,0>(Reg: RAX),Value: 0), CF := CMP(TakeBits: <31,0>(Reg: RAX),Value: 0), SF := CMP(TakeBits: <31,0>(Reg: RAX),Value: 0), OF := CMP(TakeBits: <31,0>(Reg: RAX),Value: 0), PF := CMP(TakeBits: <31,0>(Reg: RAX),Value: 0)
node 16:
RAX := (Dereference: [Var: ccount,8] + Value: 1)
[Var: ccount,8] := (Dereference: [Var: ccount,8] + Value: 1)
ZF := CMP(Dereference: [(Var: RSP0 - Value: 28),4],Value: 10), CF := CMP(Dereference: [(Var: RSP0 - Value: 28),4],Value: 10), SF := CMP(Dereference: [(Var: RSP0 - Value: 28),4],Value: 10), OF := CMP(Dereference: [(Var: RSP0 - Value: 28),4],Value: 10), PF := CMP(Dereference: [(Var: RSP0 - Value: 28),4],Value: 10)
node 17:
RAX := (TakeBits: <63,8>(Reg: RAX) . AND((if (Dereference: [(Var: RSP0 - Value: 28),4] != Value: 18446744073709551615) then Value: 1 else Value: 0),Value: 1)), RCX := AND((if (Dereference: [(Var: RSP0 - Value: 28),4] != Value: 18446744073709551615) then Value: 1 else Value: 0),Value: 1)
[(Var: RSP0 - Value: 12),4] := AND((if (Dereference: [(Var: RSP0 - Value: 28),4] != Value: 18446744073709551615) then Value: 1 else Value: 0),Value: 1)
ZF := AND((if (Dereference: [(Var: RSP0 - Value: 28),4] != Value: 18446744073709551615) then Value: 1 else Value: 0),Value: 1), CF := AND((if (Dereference: [(Var: RSP0 - Value: 28),4] != Value: 18446744073709551615) then Value: 1 else Value: 0),Value: 1), SF := AND((if (Dereference: [(Var: RSP0 - Value: 28),4] != Value: 18446744073709551615) then Value: 1 else Value: 0),Value: 1), OF := AND((if (Dereference: [(Var: RSP0 - Value: 28),4] != Value: 18446744073709551615) then Value: 1 else Value: 0),Value: 1), PF := AND((if (Dereference: [(Var: RSP0 - Value: 28),4] != Value: 18446744073709551615) then Value: 1 else Value: 0),Value: 1)
node 18:
RAX := Dereference: [(Var: RSP0 - Value: 12),4]
ZF := (Var: RSP0 - Value: 8), CF := (Var: RSP0 - Value: 8), SF := (Var: RSP0 - Value: 8), OF := (Var: RSP0 - Value: 8), PF := (Var: RSP0 - Value: 8)
node 19:
skip'
node 20:
ZF := CMP(Dereference: [(Var: RSP0 - Value: 28),4],Value: 18446744073709551615), CF := CMP(Dereference: [(Var: RSP0 - Value: 28),4],Value: 18446744073709551615), SF := CMP(Dereference: [(Var: RSP0 - Value: 28),4],Value: 18446744073709551615), OF := CMP(Dereference: [(Var: RSP0 - Value: 28),4],Value: 18446744073709551615), PF := CMP(Dereference: [(Var: RSP0 - Value: 28),4],Value: 18446744073709551615)
node 21:
skip'
node 22:
RDI := Dereference: [(Var: RSP0 - Value: 24),8]
node 23:
RAX := _IO_getc@()
node 24:
[(Var: RSP0 - Value: 28),4] := TakeBits: <31,0>(Reg: RAX)
ZF := CMP(TakeBits: <31,0>(Reg: RAX),Value: 18446744073709551615), CF := CMP(TakeBits: <31,0>(Reg: RAX),Value: 18446744073709551615), SF := CMP(TakeBits: <31,0>(Reg: RAX),Value: 18446744073709551615), OF := CMP(TakeBits: <31,0>(Reg: RAX),Value: 18446744073709551615), PF := CMP(TakeBits: <31,0>(Reg: RAX),Value: 18446744073709551615)
node 25:
[(Var: RSP0 - Value: 8),8] := Var: RBP0, [(Var: RSP0 - Value: 24),8] := Reg: RDI, [(Var: RSP0 - Value: 32),4] := Value: 0
ZF := (Var: RSP0 - Value: 40), CF := (Var: RSP0 - Value: 40), SF := (Var: RSP0 - Value: 40), OF := (Var: RSP0 - Value: 40), PF := (Var: RSP0 - Value: 40)
node 26:
RAX := feof@()
node 27:
ZF := CMP(TakeBits: <31,0>(Reg: RAX),Value: 0), CF := CMP(TakeBits: <31,0>(Reg: RAX),Value: 0), SF := CMP(TakeBits: <31,0>(Reg: RAX),Value: 0), OF := CMP(TakeBits: <31,0>(Reg: RAX),Value: 0), PF := CMP(TakeBits: <31,0>(Reg: RAX),Value: 0)
--------

Starting Node: 25

Edges: 0 ----> 18, 1 ----> 19, 2 ----> 3, 3 ----> 22, 4 --!ZF--> 3, 4 --ZF--> 2, 5 ----> 6, 6 ----> 7, 7 --ZF--> 4, 7 --!ZF--> 1, 8 ----> 13, 9 ----> 17, 10 ----> 11, 11 ----> 12, 12 ----> 20, 13 ----> 14, 14 ----> 15, 15 --!ZF--> 10, 15 --ZF--> 9, 16 --!ZF--> 13, 16 --ZF--> 8, 17 ----> 18, , 19 ----> 20, 20 --ZF--> 17, 20 --!ZF--> 16, 21 ----> 22, 22 ----> 23, 23 ----> 24, 24 --ZF--> 19, 24 --!ZF--> 5, 25 ----> 26, 26 ----> 27, 27 --ZF--> 21, 27 --!ZF--> 0

Symbolic Execution for Binary "Randomized":
Current text section: "getword"
node 0:
[(Var: RSP0 - Value: 12),4] := Value: 0
node 1:
RAX := (Dereference: [Var: wcount,8] + Value: 1)
[Var: wcount,8] := (Dereference: [Var: wcount,8] + Value: 1)
ZF := (Dereference: [Var: wcount,8] + Value: 1), CF := (Dereference: [Var: wcount,8] + Value: 1), SF := (Dereference: [Var: wcount,8] + Value: 1), OF := (Dereference: [Var: wcount,8] + Value: 1), PF := (Dereference: [Var: wcount,8] + Value: 1)
node 2:
RAX := (Dereference: [Var: lcount,8] + Value: 1)
[Var: lcount,8] := (Dereference: [Var: lcount,8] + Value: 1)
ZF := (Dereference: [Var: lcount,8] + Value: 1), CF := (Dereference: [Var: lcount,8] + Value: 1), SF := (Dereference: [Var: lcount,8] + Value: 1), OF := (Dereference: [Var: lcount,8] + Value: 1), PF := (Dereference: [Var: lcount,8] + Value: 1)
node 3:
skip'
node 4:
RAX := (Dereference: [Var: ccount,8] + Value: 1)
[Var: ccount,8] := (Dereference: [Var: ccount,8] + Value: 1)
ZF := CMP(Dereference: [(Var: RSP0 - Value: 28),4],Value: 10), CF := CMP(Dereference: [(Var: RSP0 - Value: 28),4],Value: 10), SF := CMP(Dereference: [(Var: RSP0 - Value: 28),4],Value: 10), OF := CMP(Dereference: [(Var: RSP0 - Value: 28),4],Value: 10), PF := CMP(Dereference: [(Var: RSP0 - Value: 28),4],Value: 10)
node 5:
RAX := Dereference: [(Var: RSP0 - Value: 28),4], RCX := (TakeBits: <63,8>(Reg: RCX) . TakeBits: <7,0>(Dereference: [(Var: RSP0 - Value: 28),4])), RDI := TakeBits: <7,0>(Dereference: [(Var: RSP0 - Value: 28),4])
node 6:
RAX := isword@()
node 7:
ZF := CMP(TakeBits: <31,0>(Reg: RAX),Value: 0), CF := CMP(TakeBits: <31,0>(Reg: RAX),Value: 0), SF := CMP(TakeBits: <31,0>(Reg: RAX),Value: 0), OF := CMP(TakeBits: <31,0>(Reg: RAX),Value: 0), PF := CMP(TakeBits: <31,0>(Reg: RAX),Value: 0)
node 8:
RAX := (Dereference: [Var: lcount,8] + Value: 1)
[Var: lcount,8] := (Dereference: [Var: lcount,8] + Value: 1)
ZF := (Dereference: [Var: lcount,8] + Value: 1), CF := (Dereference: [Var: lcount,8] + Value: 1), SF := (Dereference: [Var: lcount,8] + Value: 1), OF := (Dereference: [Var: lcount,8] + Value: 1), PF := (Dereference: [Var: lcount,8] + Value: 1)
node 9:
skip'
node 10:
RDI := Dereference: [(Var: RSP0 - Value: 24),8]
node 11:
RAX := _IO_getc@()
node 12:
[(Var: RSP0 - Value: 28),4] := TakeBits: <31,0>(Reg: RAX)
node 13:
RAX := Dereference: [(Var: RSP0 - Value: 28),4], RCX := (TakeBits: <63,8>(Reg: RCX) . TakeBits: <7,0>(Dereference: [(Var: RSP0 - Value: 28),4])), RDI := TakeBits: <7,0>(Dereference: [(Var: RSP0 - Value: 28),4])
node 14:
RAX := isword@()
node 15:
ZF := CMP(TakeBits: <31,0>(Reg: RAX),Value: 0), CF := CMP(TakeBits: <31,0>(Reg: RAX),Value: 0), SF := CMP(TakeBits: <31,0>(Reg: RAX),Value: 0), OF := CMP(TakeBits: <31,0>(Reg: RAX),Value: 0), PF := CMP(TakeBits: <31,0>(Reg: RAX),Value: 0)
node 16:
RAX := (Dereference: [Var: ccount,8] + Value: 1)
[Var: ccount,8] := (Dereference: [Var: ccount,8] + Value: 1)
ZF := CMP(Dereference: [(Var: RSP0 - Value: 28),4],Value: 10), CF := CMP(Dereference: [(Var: RSP0 - Value: 28),4],Value: 10), SF := CMP(Dereference: [(Var: RSP0 - Value: 28),4],Value: 10), OF := CMP(Dereference: [(Var: RSP0 - Value: 28),4],Value: 10), PF := CMP(Dereference: [(Var: RSP0 - Value: 28),4],Value: 10)
node 17:
RAX := (TakeBits: <63,8>(Reg: RAX) . AND((if (Dereference: [(Var: RSP0 - Value: 28),4] != Value: 18446744073709551615) then Value: 1 else Value: 0),Value: 1)), RCX := AND((if (Dereference: [(Var: RSP0 - Value: 28),4] != Value: 18446744073709551615) then Value: 1 else Value: 0),Value: 1)
[(Var: RSP0 - Value: 12),4] := AND((if (Dereference: [(Var: RSP0 - Value: 28),4] != Value: 18446744073709551615) then Value: 1 else Value: 0),Value: 1)
ZF := AND((if (Dereference: [(Var: RSP0 - Value: 28),4] != Value: 18446744073709551615) then Value: 1 else Value: 0),Value: 1), CF := AND((if (Dereference: [(Var: RSP0 - Value: 28),4] != Value: 18446744073709551615) then Value: 1 else Value: 0),Value: 1), SF := AND((if (Dereference: [(Var: RSP0 - Value: 28),4] != Value: 18446744073709551615) then Value: 1 else Value: 0),Value: 1), OF := AND((if (Dereference: [(Var: RSP0 - Value: 28),4] != Value: 18446744073709551615) then Value: 1 else Value: 0),Value: 1), PF := AND((if (Dereference: [(Var: RSP0 - Value: 28),4] != Value: 18446744073709551615) then Value: 1 else Value: 0),Value: 1)
node 18:
RAX := Dereference: [(Var: RSP0 - Value: 12),4]
ZF := (Var: RSP0 - Value: 8), CF := (Var: RSP0 - Value: 8), SF := (Var: RSP0 - Value: 8), OF := (Var: RSP0 - Value: 8), PF := (Var: RSP0 - Value: 8)
node 19:
skip'
node 20:
ZF := CMP(Dereference: [(Var: RSP0 - Value: 28),4],Value: 18446744073709551615), CF := CMP(Dereference: [(Var: RSP0 - Value: 28),4],Value: 18446744073709551615), SF := CMP(Dereference: [(Var: RSP0 - Value: 28),4],Value: 18446744073709551615), OF := CMP(Dereference: [(Var: RSP0 - Value: 28),4],Value: 18446744073709551615), PF := CMP(Dereference: [(Var: RSP0 - Value: 28),4],Value: 18446744073709551615)
node 21:
skip'
node 22:
RDI := Dereference: [(Var: RSP0 - Value: 24),8]
node 23:
RAX := _IO_getc@()
node 24:
[(Var: RSP0 - Value: 28),4] := TakeBits: <31,0>(Reg: RAX)
ZF := CMP(TakeBits: <31,0>(Reg: RAX),Value: 18446744073709551615), CF := CMP(TakeBits: <31,0>(Reg: RAX),Value: 18446744073709551615), SF := CMP(TakeBits: <31,0>(Reg: RAX),Value: 18446744073709551615), OF := CMP(TakeBits: <31,0>(Reg: RAX),Value: 18446744073709551615), PF := CMP(TakeBits: <31,0>(Reg: RAX),Value: 18446744073709551615)
node 25:
[(Var: RSP0 - Value: 8),8] := Var: RBP0, [(Var: RSP0 - Value: 24),8] := Reg: RDI, [(Var: RSP0 - Value: 32),4] := Value: 0
ZF := (Var: RSP0 - Value: 40), CF := (Var: RSP0 - Value: 40), SF := (Var: RSP0 - Value: 40), OF := (Var: RSP0 - Value: 40), PF := (Var: RSP0 - Value: 40)
node 26:
RAX := feof@()
node 27:
ZF := CMP(TakeBits: <31,0>(Reg: RAX),Value: 0), CF := CMP(TakeBits: <31,0>(Reg: RAX),Value: 0), SF := CMP(TakeBits: <31,0>(Reg: RAX),Value: 0), OF := CMP(TakeBits: <31,0>(Reg: RAX),Value: 0), PF := CMP(TakeBits: <31,0>(Reg: RAX),Value: 0)
--------

same_behavior for the nodes: getword -> getword_40 and getword -> getword_334

same_behavior checking these two SStates:

SA || [(Var: RSP0 - Value: 8),8] := Var: RBP0, [(Var: RSP0 - Value: 24),8] := Reg: RDI, [(Var: RSP0 - Value: 32),4] := Value: 0
SA || ZF := (Var: RSP0 - Value: 40), CF := (Var: RSP0 - Value: 40), SF := (Var: RSP0 - Value: 40), OF := (Var: RSP0 - Value: 40), PF := (Var: RSP0 - Value: 40)

SB || [(Var: RSP0 - Value: 8),8] := Var: RBP0, [(Var: RSP0 - Value: 24),8] := Reg: RDI, [(Var: RSP0 - Value: 32),4] := Value: 0
SB || ZF := (Var: RSP0 - Value: 40), CF := (Var: RSP0 - Value: 40), SF := (Var: RSP0 - Value: 40), OF := (Var: RSP0 - Value: 40), PF := (Var: RSP0 - Value: 40)

Resulting values:
Value A:
E_reg RDI
Value B:
E_reg RDI
Reg Chk: True
local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 8 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 8 64]
(v1 := v2):
E_var "RBP0" 64
E_var "RBP0" 64
b0: True b1: True
local_var_cmp called

local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 24 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 24 64]
(v1 := v2):
E_reg RDI
E_reg RDI
b0: True b1: True
local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 32 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 32 64]
(v1 := v2):
E_val 0 32
E_val 0 32
b0: True b1: True
Mem Chk: True
Result: Success
Nodes getword -> getword_40 and getword -> getword_334 have been verified to do the same.

same_behavior for the nodes: getword_41 -> getword_41 and getword_335 -> getword_335

same_behavior checking these two SStates:

SA || RAX := feof@()

SB || RAX := feof@()

Resulting values:
Value A:
E_app (F2 "feof" "") []
Value B:
E_app (F2 "feof" "") []
Reg Chk: True
Mem Chk: True
Result: Success
Nodes getword_41 -> getword_41 and getword_335 -> getword_335 have been verified to do the same.

same_behavior for the nodes: getword_42 -> getword_43 and getword_336 -> getword_337

same_behavior checking these two SStates:

SA || ZF := CMP(TakeBits: <31,0>(Reg: RAX),Value: 0), CF := CMP(TakeBits: <31,0>(Reg: RAX),Value: 0), SF := CMP(TakeBits: <31,0>(Reg: RAX),Value: 0), OF := CMP(TakeBits: <31,0>(Reg: RAX),Value: 0), PF := CMP(TakeBits: <31,0>(Reg: RAX),Value: 0)

SB || ZF := CMP(TakeBits: <31,0>(Reg: RAX),Value: 0), CF := CMP(TakeBits: <31,0>(Reg: RAX),Value: 0), SF := CMP(TakeBits: <31,0>(Reg: RAX),Value: 0), OF := CMP(TakeBits: <31,0>(Reg: RAX),Value: 0), PF := CMP(TakeBits: <31,0>(Reg: RAX),Value: 0)

Reg Chk: True
Mem Chk: True
Result: Success
Nodes getword_42 -> getword_43 and getword_336 -> getword_337 have been verified to do the same.

same_behavior for the nodes: .label_15 -> .label_15 and .label_33 -> .label_33

same_behavior checking these two SStates:

SA || skip'

SB || skip'

Reg Chk: True
Mem Chk: True
Result: Success
Nodes .label_15 -> .label_15 and .label_33 -> .label_33 have been verified to do the same.

same_behavior for the nodes: .label_18 -> .label_18 and .label_27 -> .label_27

same_behavior checking these two SStates:

SA || RDI := Dereference: [(Var: RSP0 - Value: 24),8]

SB || RDI := Dereference: [(Var: RSP0 - Value: 24),8]

Resulting values:
Value A:
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 24 64]) 8
Value B:
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 24 64]) 8
local_var_cmp called

Reg Chk: True
Mem Chk: True
Result: Success
Nodes .label_18 -> .label_18 and .label_27 -> .label_27 have been verified to do the same.

same_behavior for the nodes: getword_50 -> getword_50 and getword_344 -> getword_344

same_behavior checking these two SStates:

SA || RAX := _IO_getc@()

SB || RAX := _IO_getc@()

Resulting values:
Value A:
E_app (F2 "_IO_getc" "") []
Value B:
E_app (F2 "_IO_getc" "") []
Reg Chk: True
Mem Chk: True
Result: Success
Nodes getword_50 -> getword_50 and getword_344 -> getword_344 have been verified to do the same.

same_behavior for the nodes: getword_51 -> getword_53 and getword_345 -> getword_347

same_behavior checking these two SStates:

SA || [(Var: RSP0 - Value: 28),4] := TakeBits: <31,0>(Reg: RAX)
SA || ZF := CMP(TakeBits: <31,0>(Reg: RAX),Value: 18446744073709551615), CF := CMP(TakeBits: <31,0>(Reg: RAX),Value: 18446744073709551615), SF := CMP(TakeBits: <31,0>(Reg: RAX),Value: 18446744073709551615), OF := CMP(TakeBits: <31,0>(Reg: RAX),Value: 18446744073709551615), PF := CMP(TakeBits: <31,0>(Reg: RAX),Value: 18446744073709551615)

SB || [(Var: RSP0 - Value: 28),4] := TakeBits: <31,0>(Reg: RAX)
SB || ZF := CMP(TakeBits: <31,0>(Reg: RAX),Value: 18446744073709551615), CF := CMP(TakeBits: <31,0>(Reg: RAX),Value: 18446744073709551615), SF := CMP(TakeBits: <31,0>(Reg: RAX),Value: 18446744073709551615), OF := CMP(TakeBits: <31,0>(Reg: RAX),Value: 18446744073709551615), PF := CMP(TakeBits: <31,0>(Reg: RAX),Value: 18446744073709551615)

Reg Chk: True
local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 28 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 28 64]
(v1 := v2):
E_app (TakeBits 31 0) [E_reg RAX]
E_app (TakeBits 31 0) [E_reg RAX]
b0: True b1: True
Mem Chk: True
Result: Success
Nodes getword_51 -> getword_53 and getword_345 -> getword_347 have been verified to do the same.

same_behavior for the nodes: .label_16 -> .label_16 and .label_31 -> .label_31

same_behavior checking these two SStates:

SA || skip'

SB || skip'

Reg Chk: True
Mem Chk: True
Result: Success
Nodes .label_16 -> .label_16 and .label_31 -> .label_31 have been verified to do the same.

same_behavior for the nodes: .label_14 -> getword_79 and .label_29 -> getword_374

same_behavior checking these two SStates:

SA || ZF := CMP(Dereference: [(Var: RSP0 - Value: 28),4],Value: 18446744073709551615), CF := CMP(Dereference: [(Var: RSP0 - Value: 28),4],Value: 18446744073709551615), SF := CMP(Dereference: [(Var: RSP0 - Value: 28),4],Value: 18446744073709551615), OF := CMP(Dereference: [(Var: RSP0 - Value: 28),4],Value: 18446744073709551615), PF := CMP(Dereference: [(Var: RSP0 - Value: 28),4],Value: 18446744073709551615)

SB || ZF := CMP(Dereference: [(Var: RSP0 - Value: 28),4],Value: 18446744073709551615), CF := CMP(Dereference: [(Var: RSP0 - Value: 28),4],Value: 18446744073709551615), SF := CMP(Dereference: [(Var: RSP0 - Value: 28),4],Value: 18446744073709551615), OF := CMP(Dereference: [(Var: RSP0 - Value: 28),4],Value: 18446744073709551615), PF := CMP(Dereference: [(Var: RSP0 - Value: 28),4],Value: 18446744073709551615)

Reg Chk: True
Mem Chk: True
Result: Success
Nodes .label_14 -> getword_79 and .label_29 -> getword_374 have been verified to do the same.

same_behavior for the nodes: .label_11 -> getword_108 and .label_30 -> getword_363

same_behavior checking these two SStates:

SA || RAX := (TakeBits: <63,8>(Reg: RAX) . AND((if (Dereference: [(Var: RSP0 - Value: 28),4] != Value: 18446744073709551615) then Value: 1 else Value: 0),Value: 1)), RCX := AND((if (Dereference: [(Var: RSP0 - Value: 28),4] != Value: 18446744073709551615) then Value: 1 else Value: 0),Value: 1)
SA || [(Var: RSP0 - Value: 12),4] := AND((if (Dereference: [(Var: RSP0 - Value: 28),4] != Value: 18446744073709551615) then Value: 1 else Value: 0),Value: 1)
SA || ZF := AND((if (Dereference: [(Var: RSP0 - Value: 28),4] != Value: 18446744073709551615) then Value: 1 else Value: 0),Value: 1), CF := AND((if (Dereference: [(Var: RSP0 - Value: 28),4] != Value: 18446744073709551615) then Value: 1 else Value: 0),Value: 1), SF := AND((if (Dereference: [(Var: RSP0 - Value: 28),4] != Value: 18446744073709551615) then Value: 1 else Value: 0),Value: 1), OF := AND((if (Dereference: [(Var: RSP0 - Value: 28),4] != Value: 18446744073709551615) then Value: 1 else Value: 0),Value: 1), PF := AND((if (Dereference: [(Var: RSP0 - Value: 28),4] != Value: 18446744073709551615) then Value: 1 else Value: 0),Value: 1)

SB || RAX := (TakeBits: <63,8>(Reg: RAX) . AND((if (Dereference: [(Var: RSP0 - Value: 28),4] != Value: 18446744073709551615) then Value: 1 else Value: 0),Value: 1)), RCX := AND((if (Dereference: [(Var: RSP0 - Value: 28),4] != Value: 18446744073709551615) then Value: 1 else Value: 0),Value: 1)
SB || [(Var: RSP0 - Value: 12),4] := AND((if (Dereference: [(Var: RSP0 - Value: 28),4] != Value: 18446744073709551615) then Value: 1 else Value: 0),Value: 1)
SB || ZF := AND((if (Dereference: [(Var: RSP0 - Value: 28),4] != Value: 18446744073709551615) then Value: 1 else Value: 0),Value: 1), CF := AND((if (Dereference: [(Var: RSP0 - Value: 28),4] != Value: 18446744073709551615) then Value: 1 else Value: 0),Value: 1), SF := AND((if (Dereference: [(Var: RSP0 - Value: 28),4] != Value: 18446744073709551615) then Value: 1 else Value: 0),Value: 1), OF := AND((if (Dereference: [(Var: RSP0 - Value: 28),4] != Value: 18446744073709551615) then Value: 1 else Value: 0),Value: 1), PF := AND((if (Dereference: [(Var: RSP0 - Value: 28),4] != Value: 18446744073709551615) then Value: 1 else Value: 0),Value: 1)

Resulting values:
Value A:
E_app Concat [E_app (TakeBits 63 8) [E_reg RAX],E_app (Op AND) [E_ite (E_app (F !=) [E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 28 64]) 4,E_val 18446744073709551615 32]) (E_val 1 8) (E_val 0 8),E_val 1 8]]
Value B:
E_app Concat [E_app (TakeBits 63 8) [E_reg RAX],E_app (Op AND) [E_ite (E_app (F !=) [E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 28 64]) 4,E_val 18446744073709551615 32]) (E_val 1 8) (E_val 0 8),E_val 1 8]]
local_var_cmp called

Resulting values:
Value A:
E_app (Op AND) [E_ite (E_app (F !=) [E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 28 64]) 4,E_val 18446744073709551615 32]) (E_val 1 8) (E_val 0 8),E_val 1 8]
Value B:
E_app (Op AND) [E_ite (E_app (F !=) [E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 28 64]) 4,E_val 18446744073709551615 32]) (E_val 1 8) (E_val 0 8),E_val 1 8]
local_var_cmp called

Reg Chk: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 12 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 12 64]
(v1 := v2):
E_app (Op AND) [E_ite (E_app (F !=) [E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 28 64]) 4,E_val 18446744073709551615 32]) (E_val 1 32) (E_val 0 32),E_val 1 32]
E_app (Op AND) [E_ite (E_app (F !=) [E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 28 64]) 4,E_val 18446744073709551615 32]) (E_val 1 32) (E_val 0 32),E_val 1 32]
b0: True b1: True
local_var_cmp called

Mem Chk: True
Result: Success
Nodes .label_11 -> getword_108 and .label_30 -> getword_363 have been verified to do the same.

same_behavior for the nodes: .label_17 -> getword_113 and .label_37 -> getword_368

same_behavior checking these two SStates:

SA || RAX := Dereference: [(Var: RSP0 - Value: 12),4]
SA || ZF := (Var: RSP0 - Value: 8), CF := (Var: RSP0 - Value: 8), SF := (Var: RSP0 - Value: 8), OF := (Var: RSP0 - Value: 8), PF := (Var: RSP0 - Value: 8)

SB || RAX := Dereference: [(Var: RSP0 - Value: 12),4]
SB || ZF := (Var: RSP0 - Value: 8), CF := (Var: RSP0 - Value: 8), SF := (Var: RSP0 - Value: 8), OF := (Var: RSP0 - Value: 8), PF := (Var: RSP0 - Value: 8)

Resulting values:
Value A:
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 12 64]) 4
Value B:
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 12 64]) 4
local_var_cmp called

Reg Chk: True
Mem Chk: True
Result: Success
Nodes .label_17 -> getword_113 and .label_37 -> getword_368 have been verified to do the same.

same_behavior for the nodes: getword_80 -> getword_84 and getword_375 -> getword_379

same_behavior checking these two SStates:

SA || RAX := (Dereference: [Var: ccount,8] + Value: 1)
SA || [Var: ccount,8] := (Dereference: [Var: ccount,8] + Value: 1)
SA || ZF := CMP(Dereference: [(Var: RSP0 - Value: 28),4],Value: 10), CF := CMP(Dereference: [(Var: RSP0 - Value: 28),4],Value: 10), SF := CMP(Dereference: [(Var: RSP0 - Value: 28),4],Value: 10), OF := CMP(Dereference: [(Var: RSP0 - Value: 28),4],Value: 10), PF := CMP(Dereference: [(Var: RSP0 - Value: 28),4],Value: 10)

SB || RAX := (Dereference: [Var: ccount,8] + Value: 1)
SB || [Var: ccount,8] := (Dereference: [Var: ccount,8] + Value: 1)
SB || ZF := CMP(Dereference: [(Var: RSP0 - Value: 28),4],Value: 10), CF := CMP(Dereference: [(Var: RSP0 - Value: 28),4],Value: 10), SF := CMP(Dereference: [(Var: RSP0 - Value: 28),4],Value: 10), OF := CMP(Dereference: [(Var: RSP0 - Value: 28),4],Value: 10), PF := CMP(Dereference: [(Var: RSP0 - Value: 28),4],Value: 10)

Resulting values:
Value A:
E_app (Op ADD) [E_deref (E_var "ccount" 64) 8,E_val 1 64]
Value B:
E_app (Op ADD) [E_deref (E_var "ccount" 64) 8,E_val 1 64]
Reg Chk: True
Else resulting values:
(a1 := a2):
E_var "ccount" 64
E_var "ccount" 64
(v1 := v2):
E_app (Op ADD) [E_deref (E_var "ccount" 64) 8,E_val 1 64]
E_app (Op ADD) [E_deref (E_var "ccount" 64) 8,E_val 1 64]
b0: True b1: True


Mem Chk: True
Result: Success
Nodes getword_80 -> getword_84 and getword_375 -> getword_379 have been verified to do the same.

same_behavior for the nodes: .label_10 -> getword_91 and .label_35 -> getword_386

same_behavior checking these two SStates:

SA || RAX := Dereference: [(Var: RSP0 - Value: 28),4], RCX := (TakeBits: <63,8>(Reg: RCX) . TakeBits: <7,0>(Dereference: [(Var: RSP0 - Value: 28),4])), RDI := TakeBits: <7,0>(Dereference: [(Var: RSP0 - Value: 28),4])

SB || RAX := Dereference: [(Var: RSP0 - Value: 28),4], RCX := (TakeBits: <63,8>(Reg: RCX) . TakeBits: <7,0>(Dereference: [(Var: RSP0 - Value: 28),4])), RDI := TakeBits: <7,0>(Dereference: [(Var: RSP0 - Value: 28),4])

Resulting values:
Value A:
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 28 64]) 4
Value B:
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 28 64]) 4
local_var_cmp called

Resulting values:
Value A:
E_app Concat [E_app (TakeBits 63 8) [E_reg RCX],E_app (TakeBits 7 0) [E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 28 64]) 4]]
Value B:
E_app Concat [E_app (TakeBits 63 8) [E_reg RCX],E_app (TakeBits 7 0) [E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 28 64]) 4]]
local_var_cmp called

Resulting values:
Value A:
E_app (TakeBits 7 0) [E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 28 64]) 4]
Value B:
E_app (TakeBits 7 0) [E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 28 64]) 4]
local_var_cmp called

Reg Chk: True
Mem Chk: True
Result: Success
Nodes .label_10 -> getword_91 and .label_35 -> getword_386 have been verified to do the same.

same_behavior for the nodes: getword_92 -> getword_92 and getword_387 -> getword_387

same_behavior checking these two SStates:

SA || RAX := isword@()

SB || RAX := isword@()

Resulting values:
Value A:
E_app (F2 "isword" "") []
Value B:
E_app (F2 "isword" "") []
Reg Chk: True
Mem Chk: True
Result: Success
Nodes getword_92 -> getword_92 and getword_387 -> getword_387 have been verified to do the same.

same_behavior for the nodes: getword_93 -> getword_94 and getword_388 -> getword_389

same_behavior checking these two SStates:

SA || ZF := CMP(TakeBits: <31,0>(Reg: RAX),Value: 0), CF := CMP(TakeBits: <31,0>(Reg: RAX),Value: 0), SF := CMP(TakeBits: <31,0>(Reg: RAX),Value: 0), OF := CMP(TakeBits: <31,0>(Reg: RAX),Value: 0), PF := CMP(TakeBits: <31,0>(Reg: RAX),Value: 0)

SB || ZF := CMP(TakeBits: <31,0>(Reg: RAX),Value: 0), CF := CMP(TakeBits: <31,0>(Reg: RAX),Value: 0), SF := CMP(TakeBits: <31,0>(Reg: RAX),Value: 0), OF := CMP(TakeBits: <31,0>(Reg: RAX),Value: 0), PF := CMP(TakeBits: <31,0>(Reg: RAX),Value: 0)

Reg Chk: True
Mem Chk: True
Result: Success
Nodes getword_93 -> getword_94 and getword_388 -> getword_389 have been verified to do the same.

same_behavior for the nodes: .label_20 -> .label_12 and .label_34 -> .label_36

same_behavior checking these two SStates:

SA || RDI := Dereference: [(Var: RSP0 - Value: 24),8]

SB || RDI := Dereference: [(Var: RSP0 - Value: 24),8]

Resulting values:
Value A:
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 24 64]) 8
Value B:
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 24 64]) 8
local_var_cmp called

Reg Chk: True
Mem Chk: True
Result: Success
Nodes .label_20 -> .label_12 and .label_34 -> .label_36 have been verified to do the same.

same_behavior for the nodes: getword_100 -> getword_100 and getword_406 -> getword_406

same_behavior checking these two SStates:

SA || RAX := _IO_getc@()

SB || RAX := _IO_getc@()

Resulting values:
Value A:
E_app (F2 "_IO_getc" "") []
Value B:
E_app (F2 "_IO_getc" "") []
Reg Chk: True
Mem Chk: True
Result: Success
Nodes getword_100 -> getword_100 and getword_406 -> getword_406 have been verified to do the same.

same_behavior for the nodes: getword_101 -> getword_102 and getword_407 -> getword_408

same_behavior checking these two SStates:

SA || [(Var: RSP0 - Value: 28),4] := TakeBits: <31,0>(Reg: RAX)

SB || [(Var: RSP0 - Value: 28),4] := TakeBits: <31,0>(Reg: RAX)

Reg Chk: True
local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 28 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 28 64]
(v1 := v2):
E_app (TakeBits 31 0) [E_reg RAX]
E_app (TakeBits 31 0) [E_reg RAX]
b0: True b1: True
Mem Chk: True
Result: Success
Nodes getword_101 -> getword_102 and getword_407 -> getword_408 have been verified to do the same.

same_behavior for the nodes: getword_95 -> getword_95 and getword_390 -> getword_390

same_behavior checking these two SStates:

SA || skip'

SB || skip'

Reg Chk: True
Mem Chk: True
Result: Success
Nodes getword_95 -> getword_95 and getword_390 -> getword_390 have been verified to do the same.

same_behavior for the nodes: getword_85 -> getword_87 and getword_380 -> getword_382

same_behavior checking these two SStates:

SA || RAX := (Dereference: [Var: lcount,8] + Value: 1)
SA || [Var: lcount,8] := (Dereference: [Var: lcount,8] + Value: 1)
SA || ZF := (Dereference: [Var: lcount,8] + Value: 1), CF := (Dereference: [Var: lcount,8] + Value: 1), SF := (Dereference: [Var: lcount,8] + Value: 1), OF := (Dereference: [Var: lcount,8] + Value: 1), PF := (Dereference: [Var: lcount,8] + Value: 1)

SB || RAX := (Dereference: [Var: lcount,8] + Value: 1)
SB || [Var: lcount,8] := (Dereference: [Var: lcount,8] + Value: 1)
SB || ZF := (Dereference: [Var: lcount,8] + Value: 1), CF := (Dereference: [Var: lcount,8] + Value: 1), SF := (Dereference: [Var: lcount,8] + Value: 1), OF := (Dereference: [Var: lcount,8] + Value: 1), PF := (Dereference: [Var: lcount,8] + Value: 1)

Resulting values:
Value A:
E_app (Op ADD) [E_deref (E_var "lcount" 64) 8,E_val 1 64]
Value B:
E_app (Op ADD) [E_deref (E_var "lcount" 64) 8,E_val 1 64]
Reg Chk: True
Else resulting values:
(a1 := a2):
E_var "lcount" 64
E_var "lcount" 64
(v1 := v2):
E_app (Op ADD) [E_deref (E_var "lcount" 64) 8,E_val 1 64]
E_app (Op ADD) [E_deref (E_var "lcount" 64) 8,E_val 1 64]
b0: True b1: True


Mem Chk: True
Result: Success
Nodes getword_85 -> getword_87 and getword_380 -> getword_382 have been verified to do the same.

same_behavior for the nodes: getword_54 -> getword_56 and getword_348 -> getword_350

same_behavior checking these two SStates:

SA || RAX := Dereference: [(Var: RSP0 - Value: 28),4], RCX := (TakeBits: <63,8>(Reg: RCX) . TakeBits: <7,0>(Dereference: [(Var: RSP0 - Value: 28),4])), RDI := TakeBits: <7,0>(Dereference: [(Var: RSP0 - Value: 28),4])

SB || RAX := Dereference: [(Var: RSP0 - Value: 28),4], RCX := (TakeBits: <63,8>(Reg: RCX) . TakeBits: <7,0>(Dereference: [(Var: RSP0 - Value: 28),4])), RDI := TakeBits: <7,0>(Dereference: [(Var: RSP0 - Value: 28),4])

Resulting values:
Value A:
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 28 64]) 4
Value B:
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 28 64]) 4
local_var_cmp called

Resulting values:
Value A:
E_app Concat [E_app (TakeBits 63 8) [E_reg RCX],E_app (TakeBits 7 0) [E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 28 64]) 4]]
Value B:
E_app Concat [E_app (TakeBits 63 8) [E_reg RCX],E_app (TakeBits 7 0) [E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 28 64]) 4]]
local_var_cmp called

Resulting values:
Value A:
E_app (TakeBits 7 0) [E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 28 64]) 4]
Value B:
E_app (TakeBits 7 0) [E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 28 64]) 4]
local_var_cmp called

Reg Chk: True
Mem Chk: True
Result: Success
Nodes getword_54 -> getword_56 and getword_348 -> getword_350 have been verified to do the same.

same_behavior for the nodes: getword_57 -> getword_57 and getword_351 -> getword_351

same_behavior checking these two SStates:

SA || RAX := isword@()

SB || RAX := isword@()

Resulting values:
Value A:
E_app (F2 "isword" "") []
Value B:
E_app (F2 "isword" "") []
Reg Chk: True
Mem Chk: True
Result: Success
Nodes getword_57 -> getword_57 and getword_351 -> getword_351 have been verified to do the same.

same_behavior for the nodes: getword_58 -> getword_59 and getword_352 -> getword_353

same_behavior checking these two SStates:

SA || ZF := CMP(TakeBits: <31,0>(Reg: RAX),Value: 0), CF := CMP(TakeBits: <31,0>(Reg: RAX),Value: 0), SF := CMP(TakeBits: <31,0>(Reg: RAX),Value: 0), OF := CMP(TakeBits: <31,0>(Reg: RAX),Value: 0), PF := CMP(TakeBits: <31,0>(Reg: RAX),Value: 0)

SB || ZF := CMP(TakeBits: <31,0>(Reg: RAX),Value: 0), CF := CMP(TakeBits: <31,0>(Reg: RAX),Value: 0), SF := CMP(TakeBits: <31,0>(Reg: RAX),Value: 0), OF := CMP(TakeBits: <31,0>(Reg: RAX),Value: 0), PF := CMP(TakeBits: <31,0>(Reg: RAX),Value: 0)

Reg Chk: True
Mem Chk: True
Result: Success
Nodes getword_58 -> getword_59 and getword_352 -> getword_353 have been verified to do the same.

same_behavior for the nodes: .label_13 -> getword_69 and .label_32 -> getword_396

same_behavior checking these two SStates:

SA || RAX := (Dereference: [Var: ccount,8] + Value: 1)
SA || [Var: ccount,8] := (Dereference: [Var: ccount,8] + Value: 1)
SA || ZF := CMP(Dereference: [(Var: RSP0 - Value: 28),4],Value: 10), CF := CMP(Dereference: [(Var: RSP0 - Value: 28),4],Value: 10), SF := CMP(Dereference: [(Var: RSP0 - Value: 28),4],Value: 10), OF := CMP(Dereference: [(Var: RSP0 - Value: 28),4],Value: 10), PF := CMP(Dereference: [(Var: RSP0 - Value: 28),4],Value: 10)

SB || RAX := (Dereference: [Var: ccount,8] + Value: 1)
SB || [Var: ccount,8] := (Dereference: [Var: ccount,8] + Value: 1)
SB || ZF := CMP(Dereference: [(Var: RSP0 - Value: 28),4],Value: 10), CF := CMP(Dereference: [(Var: RSP0 - Value: 28),4],Value: 10), SF := CMP(Dereference: [(Var: RSP0 - Value: 28),4],Value: 10), OF := CMP(Dereference: [(Var: RSP0 - Value: 28),4],Value: 10), PF := CMP(Dereference: [(Var: RSP0 - Value: 28),4],Value: 10)

Resulting values:
Value A:
E_app (Op ADD) [E_deref (E_var "ccount" 64) 8,E_val 1 64]
Value B:
E_app (Op ADD) [E_deref (E_var "ccount" 64) 8,E_val 1 64]
Reg Chk: True
Else resulting values:
(a1 := a2):
E_var "ccount" 64
E_var "ccount" 64
(v1 := v2):
E_app (Op ADD) [E_deref (E_var "ccount" 64) 8,E_val 1 64]
E_app (Op ADD) [E_deref (E_var "ccount" 64) 8,E_val 1 64]
b0: True b1: True


Mem Chk: True
Result: Success
Nodes .label_13 -> getword_69 and .label_32 -> getword_396 have been verified to do the same.

same_behavior for the nodes: .label_19 -> .label_19 and .label_28 -> .label_28

same_behavior checking these two SStates:

SA || skip'

SB || skip'

Reg Chk: True
Mem Chk: True
Result: Success
Nodes .label_19 -> .label_19 and .label_28 -> .label_28 have been verified to do the same.

same_behavior for the nodes: getword_70 -> getword_72 and getword_397 -> getword_399

same_behavior checking these two SStates:

SA || RAX := (Dereference: [Var: lcount,8] + Value: 1)
SA || [Var: lcount,8] := (Dereference: [Var: lcount,8] + Value: 1)
SA || ZF := (Dereference: [Var: lcount,8] + Value: 1), CF := (Dereference: [Var: lcount,8] + Value: 1), SF := (Dereference: [Var: lcount,8] + Value: 1), OF := (Dereference: [Var: lcount,8] + Value: 1), PF := (Dereference: [Var: lcount,8] + Value: 1)

SB || RAX := (Dereference: [Var: lcount,8] + Value: 1)
SB || [Var: lcount,8] := (Dereference: [Var: lcount,8] + Value: 1)
SB || ZF := (Dereference: [Var: lcount,8] + Value: 1), CF := (Dereference: [Var: lcount,8] + Value: 1), SF := (Dereference: [Var: lcount,8] + Value: 1), OF := (Dereference: [Var: lcount,8] + Value: 1), PF := (Dereference: [Var: lcount,8] + Value: 1)

Resulting values:
Value A:
E_app (Op ADD) [E_deref (E_var "lcount" 64) 8,E_val 1 64]
Value B:
E_app (Op ADD) [E_deref (E_var "lcount" 64) 8,E_val 1 64]
Reg Chk: True
Else resulting values:
(a1 := a2):
E_var "lcount" 64
E_var "lcount" 64
(v1 := v2):
E_app (Op ADD) [E_deref (E_var "lcount" 64) 8,E_val 1 64]
E_app (Op ADD) [E_deref (E_var "lcount" 64) 8,E_val 1 64]
b0: True b1: True


Mem Chk: True
Result: Success
Nodes getword_70 -> getword_72 and getword_397 -> getword_399 have been verified to do the same.

same_behavior for the nodes: getword_60 -> getword_63 and getword_354 -> getword_357

same_behavior checking these two SStates:

SA || RAX := (Dereference: [Var: wcount,8] + Value: 1)
SA || [Var: wcount,8] := (Dereference: [Var: wcount,8] + Value: 1)
SA || ZF := (Dereference: [Var: wcount,8] + Value: 1), CF := (Dereference: [Var: wcount,8] + Value: 1), SF := (Dereference: [Var: wcount,8] + Value: 1), OF := (Dereference: [Var: wcount,8] + Value: 1), PF := (Dereference: [Var: wcount,8] + Value: 1)

SB || RAX := (Dereference: [Var: wcount,8] + Value: 1)
SB || [Var: wcount,8] := (Dereference: [Var: wcount,8] + Value: 1)
SB || ZF := (Dereference: [Var: wcount,8] + Value: 1), CF := (Dereference: [Var: wcount,8] + Value: 1), SF := (Dereference: [Var: wcount,8] + Value: 1), OF := (Dereference: [Var: wcount,8] + Value: 1), PF := (Dereference: [Var: wcount,8] + Value: 1)

Resulting values:
Value A:
E_app (Op ADD) [E_deref (E_var "wcount" 64) 8,E_val 1 64]
Value B:
E_app (Op ADD) [E_deref (E_var "wcount" 64) 8,E_val 1 64]
Reg Chk: True
Else resulting values:
(a1 := a2):
E_var "wcount" 64
E_var "wcount" 64
(v1 := v2):
E_app (Op ADD) [E_deref (E_var "wcount" 64) 8,E_val 1 64]
E_app (Op ADD) [E_deref (E_var "wcount" 64) 8,E_val 1 64]
b0: True b1: True


Mem Chk: True
Result: Success
Nodes getword_60 -> getword_63 and getword_354 -> getword_357 have been verified to do the same.

same_behavior for the nodes: getword_44 -> getword_45 and getword_338 -> getword_339

same_behavior checking these two SStates:

SA || [(Var: RSP0 - Value: 12),4] := Value: 0

SB || [(Var: RSP0 - Value: 12),4] := Value: 0

Reg Chk: True
local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 12 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 12 64]
(v1 := v2):
E_val 0 32
E_val 0 32
b0: True b1: True
Mem Chk: True
Result: Success
Nodes getword_44 -> getword_45 and getword_338 -> getword_339 have been verified to do the same.

Label relationship:
wcount <--> wcount
lcount <--> lcount
ccount <--> ccount
 <--> 

Local variable relationship:
(Var: RSP0 - Value: 12) <--> (Var: RSP0 - Value: 12)
(Var: RSP0 - Value: 28) <--> (Var: RSP0 - Value: 28)
(Var: RSP0 - Value: 32) <--> (Var: RSP0 - Value: 32)
(Var: RSP0 - Value: 24) <--> (Var: RSP0 - Value: 24)
(Var: RSP0 - Value: 8) <--> (Var: RSP0 - Value: 8)

Succesful check!
Considering text section (5/8): "error_print"
--------
.dot code for CFG of text section error_print for Vanilla
diGraph error_print_Vanilla{
	error_print_0  [label="[error_print_396,error_print_396]"]
	error_print_1  [label="[error_print_397,error_print_397]"]
	error_print_2  [label="[error_print_398,error_print_398]"]
	error_print_3  [label="[.label_36,error_print_402]"]
	error_print_4  [label="[error_print_403,error_print_403]"]
	error_print_5  [label="[error_print_404,error_print_404]"]
	error_print_6  [label="[.label_34,.label_34]"]
	error_print_7  [label="[error_print_407,error_print_407]"]
	error_print_8  [label="[error_print,error_print_391]"]
	error_print_9  [label="[error_print_392,error_print_392]"]
	error_print_10  [label="[error_print_393,error_print_395]"]

	error_print_0 -> error_print_1;
	error_print_1 -> error_print_2;
	error_print_2 -> error_print_6;
	error_print_3 -> error_print_4;
	error_print_4 -> error_print_5;
	error_print_5 -> error_print_6;
	error_print_6 -> error_print_7;

	error_print_8 -> error_print_9;
	error_print_9 -> error_print_10;
	error_print_10 -> error_print_3 [label="ZF"];
	error_print_10 -> error_print_0 [label="!ZF"];
}
--------
--------
.dot code for CFG of text section error_print for Randomized
diGraph error_print_Randomized{
	error_print_0  [label="[error_print_100,error_print_100]"]
	error_print_1  [label="[error_print_101,error_print_101]"]
	error_print_2  [label="[error_print_102,error_print_102]"]
	error_print_3  [label="[.label_12,errf_73]"]
	error_print_4  [label="[errf_74,errf_74]"]
	error_print_5  [label="[errf_75,errf_75]"]
	error_print_6  [label="[.label_11,.label_11]"]
	error_print_7  [label="[errf_78,errf_78]"]
	error_print_8  [label="[error_print,error_print_95]"]
	error_print_9  [label="[error_print_96,error_print_96]"]
	error_print_10  [label="[error_print_97,error_print_99]"]

	error_print_0 -> error_print_1;
	error_print_1 -> error_print_2;
	error_print_2 -> error_print_6;
	error_print_3 -> error_print_4;
	error_print_4 -> error_print_5;
	error_print_5 -> error_print_6;
	error_print_6 -> error_print_7;

	error_print_8 -> error_print_9;
	error_print_9 -> error_print_10;
	error_print_10 -> error_print_3 [label="ZF"];
	error_print_10 -> error_print_0 [label="!ZF"];
}
--------
Starting Node: 8

Edges: 0 ----> 1, 1 ----> 2, 2 ----> 6, 3 ----> 4, 4 ----> 5, 5 ----> 6, 6 ----> 7, , 8 ----> 9, 9 ----> 10, 10 --ZF--> 3, 10 --!ZF--> 0

Symbolic Execution for Binary "Vanilla":
Current text section: "error_print"
node 0:
RDI := Dereference: [Var: label_35,8]
node 1:
RAX := perror@()
node 2:
skip'
node 3:
RAX := (TakeBits: <63,8>(Reg: RAX) . Value: 0), RDI := Dereference: [Var: stderr,8], RSI := Dereference: [Var: label_37,8]
node 4:
RAX := fprintf@()
node 5:
[(Var: RSP0 - Value: 40),4] := TakeBits: <31,0>(Reg: RAX)
node 6:
RDI := Value: 1
node 7:
RAX := exit@()
node 8:
RDI := Dereference: [Var: stderr,8]
[(Var: RSP0 - Value: 8),8] := Var: RBP0, [(Var: RSP0 - Value: 12),4] := TakeBits: <31,0>(Reg: RDI), [(Var: RSP0 - Value: 24),8] := Reg: RSI, [(Var: RSP0 - Value: 32),8] := Reg: RDX
ZF := (Var: RSP0 - Value: 40), CF := (Var: RSP0 - Value: 40), SF := (Var: RSP0 - Value: 40), OF := (Var: RSP0 - Value: 40), PF := (Var: RSP0 - Value: 40)
node 9:
RAX := vfprintf@()
node 10:
[(Var: RSP0 - Value: 36),4] := TakeBits: <31,0>(Reg: RAX)
ZF := CMP(Dereference: [(Var: RSP0 - Value: 12),4],Value: 0), CF := CMP(Dereference: [(Var: RSP0 - Value: 12),4],Value: 0), SF := CMP(Dereference: [(Var: RSP0 - Value: 12),4],Value: 0), OF := CMP(Dereference: [(Var: RSP0 - Value: 12),4],Value: 0), PF := CMP(Dereference: [(Var: RSP0 - Value: 12),4],Value: 0)
--------

Starting Node: 8

Edges: 0 ----> 1, 1 ----> 2, 2 ----> 6, 3 ----> 4, 4 ----> 5, 5 ----> 6, 6 ----> 7, , 8 ----> 9, 9 ----> 10, 10 --ZF--> 3, 10 --!ZF--> 0

Symbolic Execution for Binary "Randomized":
Current text section: "error_print"
node 0:
RDI := Dereference: [Var: label_13,8]
node 1:
RAX := perror@()
node 2:
skip'
node 3:
RAX := (TakeBits: <63,8>(Reg: RAX) . Value: 0), RDI := Dereference: [Var: stderr,8], RSI := Dereference: [Var: label_10,8]
node 4:
RAX := fprintf@()
node 5:
[(Var: RSP0 - Value: 40),4] := TakeBits: <31,0>(Reg: RAX)
node 6:
RDI := Value: 1
node 7:
RAX := exit@()
node 8:
RDI := Dereference: [Var: stderr,8]
[(Var: RSP0 - Value: 8),8] := Var: RBP0, [(Var: RSP0 - Value: 12),4] := TakeBits: <31,0>(Reg: RDI), [(Var: RSP0 - Value: 24),8] := Reg: RSI, [(Var: RSP0 - Value: 32),8] := Reg: RDX
ZF := (Var: RSP0 - Value: 40), CF := (Var: RSP0 - Value: 40), SF := (Var: RSP0 - Value: 40), OF := (Var: RSP0 - Value: 40), PF := (Var: RSP0 - Value: 40)
node 9:
RAX := vfprintf@()
node 10:
[(Var: RSP0 - Value: 36),4] := TakeBits: <31,0>(Reg: RAX)
ZF := CMP(Dereference: [(Var: RSP0 - Value: 12),4],Value: 0), CF := CMP(Dereference: [(Var: RSP0 - Value: 12),4],Value: 0), SF := CMP(Dereference: [(Var: RSP0 - Value: 12),4],Value: 0), OF := CMP(Dereference: [(Var: RSP0 - Value: 12),4],Value: 0), PF := CMP(Dereference: [(Var: RSP0 - Value: 12),4],Value: 0)
--------

same_behavior for the nodes: error_print -> error_print_391 and error_print -> error_print_95

same_behavior checking these two SStates:

SA || RDI := Dereference: [Var: stderr,8]
SA || [(Var: RSP0 - Value: 8),8] := Var: RBP0, [(Var: RSP0 - Value: 12),4] := TakeBits: <31,0>(Reg: RDI), [(Var: RSP0 - Value: 24),8] := Reg: RSI, [(Var: RSP0 - Value: 32),8] := Reg: RDX
SA || ZF := (Var: RSP0 - Value: 40), CF := (Var: RSP0 - Value: 40), SF := (Var: RSP0 - Value: 40), OF := (Var: RSP0 - Value: 40), PF := (Var: RSP0 - Value: 40)

SB || RDI := Dereference: [Var: stderr,8]
SB || [(Var: RSP0 - Value: 8),8] := Var: RBP0, [(Var: RSP0 - Value: 12),4] := TakeBits: <31,0>(Reg: RDI), [(Var: RSP0 - Value: 24),8] := Reg: RSI, [(Var: RSP0 - Value: 32),8] := Reg: RDX
SB || ZF := (Var: RSP0 - Value: 40), CF := (Var: RSP0 - Value: 40), SF := (Var: RSP0 - Value: 40), OF := (Var: RSP0 - Value: 40), PF := (Var: RSP0 - Value: 40)

Resulting values:
Value A:
E_reg RDX
Value B:
E_reg RDX
Resulting values:
Value A:
E_deref (E_var "stderr" 64) 8
Value B:
E_deref (E_var "stderr" 64) 8
Resulting values:
Value A:
E_reg RSI
Value B:
E_reg RSI
Reg Chk: True
local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 8 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 8 64]
(v1 := v2):
E_var "RBP0" 64
E_var "RBP0" 64
b0: True b1: True
local_var_cmp called

local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 12 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 12 64]
(v1 := v2):
E_app (TakeBits 31 0) [E_reg RDI]
E_app (TakeBits 31 0) [E_reg RDI]
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 24 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 24 64]
(v1 := v2):
E_reg RSI
E_reg RSI
b0: True b1: True
local_var_cmp called

local_var_cmp called

local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 32 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 32 64]
(v1 := v2):
E_reg RDX
E_reg RDX
b0: True b1: True
Mem Chk: True
Result: Success
Nodes error_print -> error_print_391 and error_print -> error_print_95 have been verified to do the same.

same_behavior for the nodes: error_print_392 -> error_print_392 and error_print_96 -> error_print_96

same_behavior checking these two SStates:

SA || RAX := vfprintf@()

SB || RAX := vfprintf@()

Resulting values:
Value A:
E_app (F2 "vfprintf" "") []
Value B:
E_app (F2 "vfprintf" "") []
Reg Chk: True
Mem Chk: True
Result: Success
Nodes error_print_392 -> error_print_392 and error_print_96 -> error_print_96 have been verified to do the same.

same_behavior for the nodes: error_print_393 -> error_print_395 and error_print_97 -> error_print_99

same_behavior checking these two SStates:

SA || [(Var: RSP0 - Value: 36),4] := TakeBits: <31,0>(Reg: RAX)
SA || ZF := CMP(Dereference: [(Var: RSP0 - Value: 12),4],Value: 0), CF := CMP(Dereference: [(Var: RSP0 - Value: 12),4],Value: 0), SF := CMP(Dereference: [(Var: RSP0 - Value: 12),4],Value: 0), OF := CMP(Dereference: [(Var: RSP0 - Value: 12),4],Value: 0), PF := CMP(Dereference: [(Var: RSP0 - Value: 12),4],Value: 0)

SB || [(Var: RSP0 - Value: 36),4] := TakeBits: <31,0>(Reg: RAX)
SB || ZF := CMP(Dereference: [(Var: RSP0 - Value: 12),4],Value: 0), CF := CMP(Dereference: [(Var: RSP0 - Value: 12),4],Value: 0), SF := CMP(Dereference: [(Var: RSP0 - Value: 12),4],Value: 0), OF := CMP(Dereference: [(Var: RSP0 - Value: 12),4],Value: 0), PF := CMP(Dereference: [(Var: RSP0 - Value: 12),4],Value: 0)

Reg Chk: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 36 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 36 64]
(v1 := v2):
E_app (TakeBits 31 0) [E_reg RAX]
E_app (TakeBits 31 0) [E_reg RAX]
b0: True b1: True
Mem Chk: True
Result: Success
Nodes error_print_393 -> error_print_395 and error_print_97 -> error_print_99 have been verified to do the same.

same_behavior for the nodes: .label_36 -> error_print_402 and .label_12 -> errf_73

same_behavior checking these two SStates:

SA || RAX := (TakeBits: <63,8>(Reg: RAX) . Value: 0), RDI := Dereference: [Var: stderr,8], RSI := Dereference: [Var: label_37,8]

SB || RAX := (TakeBits: <63,8>(Reg: RAX) . Value: 0), RDI := Dereference: [Var: stderr,8], RSI := Dereference: [Var: label_10,8]

Resulting values:
Value A:
E_app Concat [E_app (TakeBits 63 8) [E_reg RAX],E_val 0 8]
Value B:
E_app Concat [E_app (TakeBits 63 8) [E_reg RAX],E_val 0 8]
Resulting values:
Value A:
E_deref (E_var "stderr" 64) 8
Value B:
E_deref (E_var "stderr" 64) 8
Resulting values:
Value A:
E_deref (E_var "label_37" 64) 8
Value B:
E_deref (E_var "label_10" 64) 8
Reg Chk: True
Mem Chk: True
Result: Success
Nodes .label_36 -> error_print_402 and .label_12 -> errf_73 have been verified to do the same.

same_behavior for the nodes: error_print_403 -> error_print_403 and errf_74 -> errf_74

same_behavior checking these two SStates:

SA || RAX := fprintf@()

SB || RAX := fprintf@()

Resulting values:
Value A:
E_app (F2 "fprintf" "") []
Value B:
E_app (F2 "fprintf" "") []
Reg Chk: True
Mem Chk: True
Result: Success
Nodes error_print_403 -> error_print_403 and errf_74 -> errf_74 have been verified to do the same.

same_behavior for the nodes: error_print_404 -> error_print_404 and errf_75 -> errf_75

same_behavior checking these two SStates:

SA || [(Var: RSP0 - Value: 40),4] := TakeBits: <31,0>(Reg: RAX)

SB || [(Var: RSP0 - Value: 40),4] := TakeBits: <31,0>(Reg: RAX)

Reg Chk: True
local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 40 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 40 64]
(v1 := v2):
E_app (TakeBits 31 0) [E_reg RAX]
E_app (TakeBits 31 0) [E_reg RAX]
b0: True b1: True
Mem Chk: True
Result: Success
Nodes error_print_404 -> error_print_404 and errf_75 -> errf_75 have been verified to do the same.

same_behavior for the nodes: .label_34 -> .label_34 and .label_11 -> .label_11

same_behavior checking these two SStates:

SA || RDI := Value: 1

SB || RDI := Value: 1

Resulting values:
Value A:
E_val 1 32
Value B:
E_val 1 32
Reg Chk: True
Mem Chk: True
Result: Success
Nodes .label_34 -> .label_34 and .label_11 -> .label_11 have been verified to do the same.

same_behavior for the nodes: error_print_407 -> error_print_407 and errf_78 -> errf_78

same_behavior checking these two SStates:

SA || RAX := exit@()

SB || RAX := exit@()

Resulting values:
Value A:
E_app (F2 "exit" "") []
Value B:
E_app (F2 "exit" "") []
Reg Chk: True
Mem Chk: True
Result: Success
Nodes error_print_407 -> error_print_407 and errf_78 -> errf_78 have been verified to do the same.

same_behavior for the nodes: error_print_396 -> error_print_396 and error_print_100 -> error_print_100

same_behavior checking these two SStates:

SA || RDI := Dereference: [Var: label_35,8]

SB || RDI := Dereference: [Var: label_13,8]

Resulting values:
Value A:
E_deref (E_var "label_35" 64) 8
Value B:
E_deref (E_var "label_13" 64) 8
Reg Chk: True
Mem Chk: True
Result: Success
Nodes error_print_396 -> error_print_396 and error_print_100 -> error_print_100 have been verified to do the same.

same_behavior for the nodes: error_print_397 -> error_print_397 and error_print_101 -> error_print_101

same_behavior checking these two SStates:

SA || RAX := perror@()

SB || RAX := perror@()

Resulting values:
Value A:
E_app (F2 "perror" "") []
Value B:
E_app (F2 "perror" "") []
Reg Chk: True
Mem Chk: True
Result: Success
Nodes error_print_397 -> error_print_397 and error_print_101 -> error_print_101 have been verified to do the same.

same_behavior for the nodes: error_print_398 -> error_print_398 and error_print_102 -> error_print_102

same_behavior checking these two SStates:

SA || skip'

SB || skip'

Reg Chk: True
Mem Chk: True
Result: Success
Nodes error_print_398 -> error_print_398 and error_print_102 -> error_print_102 have been verified to do the same.

Label relationship:
label_35 <--> label_13
label_37 <--> label_10
 <--> 
stderr <--> stderr

Local variable relationship:
(Var: RSP0 - Value: 40) <--> (Var: RSP0 - Value: 40)
(Var: RSP0 - Value: 36) <--> (Var: RSP0 - Value: 36)
(Var: RSP0 - Value: 32) <--> (Var: RSP0 - Value: 32)
(Var: RSP0 - Value: 24) <--> (Var: RSP0 - Value: 24)
(Var: RSP0 - Value: 12) <--> (Var: RSP0 - Value: 12)
(Var: RSP0 - Value: 8) <--> (Var: RSP0 - Value: 8)

Succesful check!
Considering text section (6/8): "isword"
--------
.dot code for CFG of text section isword for Vanilla
diGraph isword_Vanilla{
	isword_0  [label="[isword,isword_129]"]
	isword_1  [label="[isword_130,isword_130]"]
	isword_2  [label="[isword_131,isword_138]"]

	isword_0 -> isword_1;
	isword_1 -> isword_2;

}
--------
--------
.dot code for CFG of text section isword for Randomized
diGraph isword_Randomized{
	isword_0  [label="[isword,isword_185]"]
	isword_1  [label="[isword_186,isword_186]"]
	isword_2  [label="[isword_187,isword_194]"]

	isword_0 -> isword_1;
	isword_1 -> isword_2;

}
--------
Starting Node: 0

Edges: 0 ----> 1, 1 ----> 2, 

Symbolic Execution for Binary "Vanilla":
Current text section: "isword"
node 0:
RAX := (TakeBits: <63,8>(Reg: RAX) . TakeBits: <7,0>(Reg: RDI)), RCX := sextend(TakeBits: <7,0>(Reg: RDI),32,64), RDI := TakeBits: <7,0>(Reg: RDI)
[(Var: RSP0 - Value: 8),8] := Var: RBP0, [(Var: RSP0 - Value: 9),1] := TakeBits: <7,0>(Reg: RDI), [(Var: RSP0 - Value: 24),8] := sextend(TakeBits: <7,0>(Reg: RDI),32,64)
ZF := (Var: RSP0 - Value: 24), CF := (Var: RSP0 - Value: 24), SF := (Var: RSP0 - Value: 24), OF := (Var: RSP0 - Value: 24), PF := (Var: RSP0 - Value: 24)
node 1:
RAX := __ctype_b_loc@()
node 2:
RAX := AND(Dereference: [(Dereference: [Reg: RAX,8] + TakeBits: <63,0>((Dereference: [(Var: RSP0 - Value: 24),8] * Value: 2))),2],Value: 1024), RCX := Dereference: [(Var: RSP0 - Value: 24),8], RDI := AND(Dereference: [(Dereference: [Reg: RAX,8] + TakeBits: <63,0>((Dereference: [(Var: RSP0 - Value: 24),8] * Value: 2))),2],Value: 1024)
ZF := (Var: RSP0 - Value: 8), CF := (Var: RSP0 - Value: 8), SF := (Var: RSP0 - Value: 8), OF := (Var: RSP0 - Value: 8), PF := (Var: RSP0 - Value: 8)
--------

Starting Node: 0

Edges: 0 ----> 1, 1 ----> 2, 

Symbolic Execution for Binary "Randomized":
Current text section: "isword"
node 0:
RAX := (TakeBits: <63,8>(Reg: RAX) . TakeBits: <7,0>(Reg: RDI)), RCX := sextend(TakeBits: <7,0>(Reg: RDI),32,64), RDI := TakeBits: <7,0>(Reg: RDI)
[(Var: RSP0 - Value: 8),8] := Var: RBP0, [(Var: RSP0 - Value: 9),1] := TakeBits: <7,0>(Reg: RDI), [(Var: RSP0 - Value: 24),8] := sextend(TakeBits: <7,0>(Reg: RDI),32,64)
ZF := (Var: RSP0 - Value: 24), CF := (Var: RSP0 - Value: 24), SF := (Var: RSP0 - Value: 24), OF := (Var: RSP0 - Value: 24), PF := (Var: RSP0 - Value: 24)
node 1:
RAX := __ctype_b_loc@()
node 2:
RAX := AND(Dereference: [(Dereference: [Reg: RAX,8] + TakeBits: <63,0>((Dereference: [(Var: RSP0 - Value: 24),8] * Value: 2))),2],Value: 1024), RCX := Dereference: [(Var: RSP0 - Value: 24),8], RDI := AND(Dereference: [(Dereference: [Reg: RAX,8] + TakeBits: <63,0>((Dereference: [(Var: RSP0 - Value: 24),8] * Value: 2))),2],Value: 1024)
ZF := (Var: RSP0 - Value: 8), CF := (Var: RSP0 - Value: 8), SF := (Var: RSP0 - Value: 8), OF := (Var: RSP0 - Value: 8), PF := (Var: RSP0 - Value: 8)
--------

same_behavior for the nodes: isword -> isword_129 and isword -> isword_185

same_behavior checking these two SStates:

SA || RAX := (TakeBits: <63,8>(Reg: RAX) . TakeBits: <7,0>(Reg: RDI)), RCX := sextend(TakeBits: <7,0>(Reg: RDI),32,64), RDI := TakeBits: <7,0>(Reg: RDI)
SA || [(Var: RSP0 - Value: 8),8] := Var: RBP0, [(Var: RSP0 - Value: 9),1] := TakeBits: <7,0>(Reg: RDI), [(Var: RSP0 - Value: 24),8] := sextend(TakeBits: <7,0>(Reg: RDI),32,64)
SA || ZF := (Var: RSP0 - Value: 24), CF := (Var: RSP0 - Value: 24), SF := (Var: RSP0 - Value: 24), OF := (Var: RSP0 - Value: 24), PF := (Var: RSP0 - Value: 24)

SB || RAX := (TakeBits: <63,8>(Reg: RAX) . TakeBits: <7,0>(Reg: RDI)), RCX := sextend(TakeBits: <7,0>(Reg: RDI),32,64), RDI := TakeBits: <7,0>(Reg: RDI)
SB || [(Var: RSP0 - Value: 8),8] := Var: RBP0, [(Var: RSP0 - Value: 9),1] := TakeBits: <7,0>(Reg: RDI), [(Var: RSP0 - Value: 24),8] := sextend(TakeBits: <7,0>(Reg: RDI),32,64)
SB || ZF := (Var: RSP0 - Value: 24), CF := (Var: RSP0 - Value: 24), SF := (Var: RSP0 - Value: 24), OF := (Var: RSP0 - Value: 24), PF := (Var: RSP0 - Value: 24)

Resulting values:
Value A:
E_app Concat [E_app (TakeBits 63 8) [E_reg RAX],E_app (TakeBits 7 0) [E_reg RDI]]
Value B:
E_app Concat [E_app (TakeBits 63 8) [E_reg RAX],E_app (TakeBits 7 0) [E_reg RDI]]
Resulting values:
Value A:
E_app (SExtend 32 64) [E_app (TakeBits 7 0) [E_reg RDI]]
Value B:
E_app (SExtend 32 64) [E_app (TakeBits 7 0) [E_reg RDI]]
Resulting values:
Value A:
E_app (TakeBits 7 0) [E_reg RDI]
Value B:
E_app (TakeBits 7 0) [E_reg RDI]
Reg Chk: True
local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 8 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 8 64]
(v1 := v2):
E_var "RBP0" 64
E_var "RBP0" 64
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 9 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 9 64]
(v1 := v2):
E_app (TakeBits 7 0) [E_reg RDI]
E_app (TakeBits 7 0) [E_reg RDI]
b0: True b1: True
local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 24 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 24 64]
(v1 := v2):
E_app (SExtend 32 64) [E_app (TakeBits 7 0) [E_reg RDI]]
E_app (SExtend 32 64) [E_app (TakeBits 7 0) [E_reg RDI]]
b0: True b1: True
Mem Chk: True
Result: Success
Nodes isword -> isword_129 and isword -> isword_185 have been verified to do the same.

same_behavior for the nodes: isword_130 -> isword_130 and isword_186 -> isword_186

same_behavior checking these two SStates:

SA || RAX := __ctype_b_loc@()

SB || RAX := __ctype_b_loc@()

Resulting values:
Value A:
E_app (F2 "__ctype_b_loc" "") []
Value B:
E_app (F2 "__ctype_b_loc" "") []
Reg Chk: True
Mem Chk: True
Result: Success
Nodes isword_130 -> isword_130 and isword_186 -> isword_186 have been verified to do the same.

same_behavior for the nodes: isword_131 -> isword_138 and isword_187 -> isword_194

same_behavior checking these two SStates:

SA || RAX := AND(Dereference: [(Dereference: [Reg: RAX,8] + TakeBits: <63,0>((Dereference: [(Var: RSP0 - Value: 24),8] * Value: 2))),2],Value: 1024), RCX := Dereference: [(Var: RSP0 - Value: 24),8], RDI := AND(Dereference: [(Dereference: [Reg: RAX,8] + TakeBits: <63,0>((Dereference: [(Var: RSP0 - Value: 24),8] * Value: 2))),2],Value: 1024)
SA || ZF := (Var: RSP0 - Value: 8), CF := (Var: RSP0 - Value: 8), SF := (Var: RSP0 - Value: 8), OF := (Var: RSP0 - Value: 8), PF := (Var: RSP0 - Value: 8)

SB || RAX := AND(Dereference: [(Dereference: [Reg: RAX,8] + TakeBits: <63,0>((Dereference: [(Var: RSP0 - Value: 24),8] * Value: 2))),2],Value: 1024), RCX := Dereference: [(Var: RSP0 - Value: 24),8], RDI := AND(Dereference: [(Dereference: [Reg: RAX,8] + TakeBits: <63,0>((Dereference: [(Var: RSP0 - Value: 24),8] * Value: 2))),2],Value: 1024)
SB || ZF := (Var: RSP0 - Value: 8), CF := (Var: RSP0 - Value: 8), SF := (Var: RSP0 - Value: 8), OF := (Var: RSP0 - Value: 8), PF := (Var: RSP0 - Value: 8)

Resulting values:
Value A:
E_app (Op AND) [E_deref (E_app (Op ADD) [E_deref (E_reg RAX) 8,E_app (TakeBits 63 0) [E_app (Op MUL) [E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 24 64]) 8,E_val 2 64]]]) 2,E_val 1024 32]
Value B:
E_app (Op AND) [E_deref (E_app (Op ADD) [E_deref (E_reg RAX) 8,E_app (TakeBits 63 0) [E_app (Op MUL) [E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 24 64]) 8,E_val 2 64]]]) 2,E_val 1024 32]
local_var_cmp called

Resulting values:
Value A:
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 24 64]) 8
Value B:
E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 24 64]) 8
local_var_cmp called

Resulting values:
Value A:
E_app (Op AND) [E_deref (E_app (Op ADD) [E_deref (E_reg RAX) 8,E_app (TakeBits 63 0) [E_app (Op MUL) [E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 24 64]) 8,E_val 2 64]]]) 2,E_val 1024 32]
Value B:
E_app (Op AND) [E_deref (E_app (Op ADD) [E_deref (E_reg RAX) 8,E_app (TakeBits 63 0) [E_app (Op MUL) [E_deref (E_app (Op SUB) [E_var "RSP0" 64,E_val 24 64]) 8,E_val 2 64]]]) 2,E_val 1024 32]
local_var_cmp called

Reg Chk: True
Mem Chk: True
Result: Success
Nodes isword_131 -> isword_138 and isword_187 -> isword_194 have been verified to do the same.

Label relationship:
 <--> 

Local variable relationship:
(Var: RSP0 - Value: 24) <--> (Var: RSP0 - Value: 24)
(Var: RSP0 - Value: 9) <--> (Var: RSP0 - Value: 9)
(Var: RSP0 - Value: 8) <--> (Var: RSP0 - Value: 8)

Succesful check!
Considering text section (7/8): "report"
--------
.dot code for CFG of text section report for Vanilla
diGraph report_Vanilla{
	report_0  [label="[report,report_21]"]
	report_1  [label="[report_22,report_22]"]
	report_2  [label="[report_23,report_26]"]

	report_0 -> report_1;
	report_1 -> report_2;

}
--------
--------
.dot code for CFG of text section report for Randomized
diGraph report_Randomized{
	report_0  [label="[report,report_216]"]
	report_1  [label="[report_217,report_217]"]
	report_2  [label="[report_218,report_221]"]

	report_0 -> report_1;
	report_1 -> report_2;

}
--------
Starting Node: 0

Edges: 0 ----> 1, 1 ----> 2, 

Symbolic Execution for Binary "Vanilla":
Current text section: "report"
node 0:
RAX := (TakeBits: <63,8>(Dereference: [Var: label_9,8]) . Value: 0), RCX := Reg: RSI, RDI := Dereference: [Var: label_9,8], RSI := Reg: RCX, R8 := Reg: RDI
[(Var: RSP0 - Value: 8),8] := Var: RBP0, [(Var: RSP0 - Value: 16),8] := Reg: RDI, [(Var: RSP0 - Value: 24),8] := Reg: RSI, [(Var: RSP0 - Value: 32),8] := Reg: RDX, [(Var: RSP0 - Value: 40),8] := Reg: RCX
ZF := (Var: RSP0 - Value: 56), CF := (Var: RSP0 - Value: 56), SF := (Var: RSP0 - Value: 56), OF := (Var: RSP0 - Value: 56), PF := (Var: RSP0 - Value: 56)
node 1:
RAX := printf@()
node 2:
[(Var: RSP0 - Value: 44),4] := TakeBits: <31,0>(Reg: RAX)
ZF := (Var: RSP0 - Value: 8), CF := (Var: RSP0 - Value: 8), SF := (Var: RSP0 - Value: 8), OF := (Var: RSP0 - Value: 8), PF := (Var: RSP0 - Value: 8)
--------

Starting Node: 0

Edges: 0 ----> 1, 1 ----> 2, 

Symbolic Execution for Binary "Randomized":
Current text section: "report"
node 0:
RAX := (TakeBits: <63,8>(Dereference: [Var: label_15,8]) . Value: 0), RCX := Reg: RSI, RDI := Dereference: [Var: label_15,8], RSI := Reg: RCX, R8 := Reg: RDI
[(Var: RSP0 - Value: 8),8] := Var: RBP0, [(Var: RSP0 - Value: 16),8] := Reg: RDI, [(Var: RSP0 - Value: 24),8] := Reg: RSI, [(Var: RSP0 - Value: 32),8] := Reg: RDX, [(Var: RSP0 - Value: 40),8] := Reg: RCX
ZF := (Var: RSP0 - Value: 56), CF := (Var: RSP0 - Value: 56), SF := (Var: RSP0 - Value: 56), OF := (Var: RSP0 - Value: 56), PF := (Var: RSP0 - Value: 56)
node 1:
RAX := printf@()
node 2:
[(Var: RSP0 - Value: 44),4] := TakeBits: <31,0>(Reg: RAX)
ZF := (Var: RSP0 - Value: 8), CF := (Var: RSP0 - Value: 8), SF := (Var: RSP0 - Value: 8), OF := (Var: RSP0 - Value: 8), PF := (Var: RSP0 - Value: 8)
--------

same_behavior for the nodes: report -> report_21 and report -> report_216

same_behavior checking these two SStates:

SA || RAX := (TakeBits: <63,8>(Dereference: [Var: label_9,8]) . Value: 0), RCX := Reg: RSI, RDI := Dereference: [Var: label_9,8], RSI := Reg: RCX, R8 := Reg: RDI
SA || [(Var: RSP0 - Value: 8),8] := Var: RBP0, [(Var: RSP0 - Value: 16),8] := Reg: RDI, [(Var: RSP0 - Value: 24),8] := Reg: RSI, [(Var: RSP0 - Value: 32),8] := Reg: RDX, [(Var: RSP0 - Value: 40),8] := Reg: RCX
SA || ZF := (Var: RSP0 - Value: 56), CF := (Var: RSP0 - Value: 56), SF := (Var: RSP0 - Value: 56), OF := (Var: RSP0 - Value: 56), PF := (Var: RSP0 - Value: 56)

SB || RAX := (TakeBits: <63,8>(Dereference: [Var: label_15,8]) . Value: 0), RCX := Reg: RSI, RDI := Dereference: [Var: label_15,8], RSI := Reg: RCX, R8 := Reg: RDI
SB || [(Var: RSP0 - Value: 8),8] := Var: RBP0, [(Var: RSP0 - Value: 16),8] := Reg: RDI, [(Var: RSP0 - Value: 24),8] := Reg: RSI, [(Var: RSP0 - Value: 32),8] := Reg: RDX, [(Var: RSP0 - Value: 40),8] := Reg: RCX
SB || ZF := (Var: RSP0 - Value: 56), CF := (Var: RSP0 - Value: 56), SF := (Var: RSP0 - Value: 56), OF := (Var: RSP0 - Value: 56), PF := (Var: RSP0 - Value: 56)

Resulting values:
Value A:
E_app Concat [E_app (TakeBits 63 8) [E_deref (E_var "label_9" 64) 8],E_val 0 8]
Value B:
E_app Concat [E_app (TakeBits 63 8) [E_deref (E_var "label_15" 64) 8],E_val 0 8]
Resulting values:
Value A:
E_reg RSI
Value B:
E_reg RSI
Resulting values:
Value A:
E_reg RDX
Value B:
E_reg RDX
Resulting values:
Value A:
E_deref (E_var "label_9" 64) 8
Value B:
E_deref (E_var "label_15" 64) 8
Resulting values:
Value A:
E_reg RCX
Value B:
E_reg RCX
Resulting values:
Value A:
E_reg RDI
Value B:
E_reg RDI
Reg Chk: True
local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 8 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 8 64]
(v1 := v2):
E_var "RBP0" 64
E_var "RBP0" 64
b0: True b1: True
local_var_cmp called

local_var_cmp called

local_var_cmp called

local_var_cmp called

local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 16 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 16 64]
(v1 := v2):
E_reg RDI
E_reg RDI
b0: True b1: True
local_var_cmp called

local_var_cmp called

local_var_cmp called

local_var_cmp called

local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 24 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 24 64]
(v1 := v2):
E_reg RSI
E_reg RSI
b0: True b1: True
local_var_cmp called

local_var_cmp called

local_var_cmp called

local_var_cmp called

local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 32 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 32 64]
(v1 := v2):
E_reg RDX
E_reg RDX
b0: True b1: True
local_var_cmp called

local_var_cmp called

local_var_cmp called

local_var_cmp called

local_var_cmp called

local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 40 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 40 64]
(v1 := v2):
E_reg RCX
E_reg RCX
b0: True b1: True
Mem Chk: True
Result: Success
Nodes report -> report_21 and report -> report_216 have been verified to do the same.

same_behavior for the nodes: report_22 -> report_22 and report_217 -> report_217

same_behavior checking these two SStates:

SA || RAX := printf@()

SB || RAX := printf@()

Resulting values:
Value A:
E_app (F2 "printf" "") []
Value B:
E_app (F2 "printf" "") []
Reg Chk: True
Mem Chk: True
Result: Success
Nodes report_22 -> report_22 and report_217 -> report_217 have been verified to do the same.

same_behavior for the nodes: report_23 -> report_26 and report_218 -> report_221

same_behavior checking these two SStates:

SA || [(Var: RSP0 - Value: 44),4] := TakeBits: <31,0>(Reg: RAX)
SA || ZF := (Var: RSP0 - Value: 8), CF := (Var: RSP0 - Value: 8), SF := (Var: RSP0 - Value: 8), OF := (Var: RSP0 - Value: 8), PF := (Var: RSP0 - Value: 8)

SB || [(Var: RSP0 - Value: 44),4] := TakeBits: <31,0>(Reg: RAX)
SB || ZF := (Var: RSP0 - Value: 8), CF := (Var: RSP0 - Value: 8), SF := (Var: RSP0 - Value: 8), OF := (Var: RSP0 - Value: 8), PF := (Var: RSP0 - Value: 8)

Reg Chk: True
local_var_cmp called

If resulting values:
(a1 := a2):
E_app (Op SUB) [E_var "RSP0" 64,E_val 44 64]
E_app (Op SUB) [E_var "RSP0" 64,E_val 44 64]
(v1 := v2):
E_app (TakeBits 31 0) [E_reg RAX]
E_app (TakeBits 31 0) [E_reg RAX]
b0: True b1: True
Mem Chk: True
Result: Success
Nodes report_23 -> report_26 and report_218 -> report_221 have been verified to do the same.

Label relationship:
 <--> 
label_9 <--> label_15

Local variable relationship:
(Var: RSP0 - Value: 44) <--> (Var: RSP0 - Value: 44)
(Var: RSP0 - Value: 40) <--> (Var: RSP0 - Value: 40)
(Var: RSP0 - Value: 32) <--> (Var: RSP0 - Value: 32)
(Var: RSP0 - Value: 24) <--> (Var: RSP0 - Value: 24)
(Var: RSP0 - Value: 16) <--> (Var: RSP0 - Value: 16)
(Var: RSP0 - Value: 8) <--> (Var: RSP0 - Value: 8)

Succesful check!
Relevant vanilla text sections: 8
Success: 8 text sections
Failure during CFG generation (indirect branching): 0 text sections
Failure during symbolic excution (indirect calls): 0 text sections
Failure caused by alloca: 0 text sections
