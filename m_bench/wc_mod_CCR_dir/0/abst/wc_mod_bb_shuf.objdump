
wc_mod_dir/0/wc_mod_bb_shuf:     file format elf64-x86-64


Disassembly of section .init:

00000000004006b8 <_init>:
  4006b8:	sub    rsp,0x8
  4006bc:	mov    rax,QWORD PTR [rip+0x291d]        # 402fe0 <__init_array_end+0x1d0>
  4006c3:	test   rax,rax
  4006c6:	je     4006cd <_init+0x15>
  4006c8:	call   400700 <__gmon_start__@plt>
  4006cd:	add    rsp,0x8
  4006d1:	ret    

Disassembly of section .plt:

00000000004006e0 <__libc_start_main@plt-0x10>:
  4006e0:	push   QWORD PTR [rip+0x290a]        # 402ff0 <_GLOBAL_OFFSET_TABLE_+0x8>
  4006e6:	jmp    QWORD PTR [rip+0x290c]        # 402ff8 <_GLOBAL_OFFSET_TABLE_+0x10>
  4006ec:	nop
  4006ed:	nop
  4006ee:	nop
  4006ef:	nop

00000000004006f0 <__libc_start_main@plt>:
  4006f0:	jmp    QWORD PTR [rip+0x290a]        # 403000 <_GLOBAL_OFFSET_TABLE_+0x18>
  4006f6:	push   0x0
  4006fb:	jmp    4006e0 <_init+0x28>

0000000000400700 <__gmon_start__@plt>:
  400700:	jmp    QWORD PTR [rip+0x2902]        # 403008 <_GLOBAL_OFFSET_TABLE_+0x20>
  400706:	push   0x1
  40070b:	jmp    4006e0 <_init+0x28>

0000000000400710 <printf@plt>:
  400710:	jmp    QWORD PTR [rip+0x28fa]        # 403010 <_GLOBAL_OFFSET_TABLE_+0x28>
  400716:	push   0x2
  40071b:	jmp    4006e0 <_init+0x28>

0000000000400720 <feof@plt>:
  400720:	jmp    QWORD PTR [rip+0x28f2]        # 403018 <_GLOBAL_OFFSET_TABLE_+0x30>
  400726:	push   0x3
  40072b:	jmp    4006e0 <_init+0x28>

0000000000400730 <_IO_getc@plt>:
  400730:	jmp    QWORD PTR [rip+0x28ea]        # 403020 <_GLOBAL_OFFSET_TABLE_+0x38>
  400736:	push   0x4
  40073b:	jmp    4006e0 <_init+0x28>

0000000000400740 <__ctype_b_loc@plt>:
  400740:	jmp    QWORD PTR [rip+0x28e2]        # 403028 <_GLOBAL_OFFSET_TABLE_+0x40>
  400746:	push   0x5
  40074b:	jmp    4006e0 <_init+0x28>

0000000000400750 <fopen@plt>:
  400750:	jmp    QWORD PTR [rip+0x28da]        # 403030 <_GLOBAL_OFFSET_TABLE_+0x48>
  400756:	push   0x6
  40075b:	jmp    4006e0 <_init+0x28>

0000000000400760 <fclose@plt>:
  400760:	jmp    QWORD PTR [rip+0x28d2]        # 403038 <_GLOBAL_OFFSET_TABLE_+0x50>
  400766:	push   0x7
  40076b:	jmp    4006e0 <_init+0x28>

0000000000400770 <vfprintf@plt>:
  400770:	jmp    QWORD PTR [rip+0x28ca]        # 403040 <_GLOBAL_OFFSET_TABLE_+0x58>
  400776:	push   0x8
  40077b:	jmp    4006e0 <_init+0x28>

0000000000400780 <perror@plt>:
  400780:	jmp    QWORD PTR [rip+0x28c2]        # 403048 <_GLOBAL_OFFSET_TABLE_+0x60>
  400786:	push   0x9
  40078b:	jmp    4006e0 <_init+0x28>

0000000000400790 <fprintf@plt>:
  400790:	jmp    QWORD PTR [rip+0x28ba]        # 403050 <_GLOBAL_OFFSET_TABLE_+0x68>
  400796:	push   0xa
  40079b:	jmp    4006e0 <_init+0x28>

00000000004007a0 <exit@plt>:
  4007a0:	jmp    QWORD PTR [rip+0x28b2]        # 403058 <_GLOBAL_OFFSET_TABLE_+0x70>
  4007a6:	push   0xb
  4007ab:	jmp    4006e0 <_init+0x28>

Disassembly of section .text:

00000000004007b0 <_start>:
  4007b0:	xor    ebp,ebp
  4007b2:	mov    r9,rdx
  4007b5:	pop    rsi
  4007b6:	mov    rdx,rsp
  4007b9:	and    rsp,0xfffffffffffffff0
  4007bd:	push   rax
  4007be:	push   rsp
  4007bf:	mov    r8,0x400fc0
  4007c6:	mov    rcx,0x400f50
  4007cd:	mov    rdi,0x400abd
  4007d4:	call   4006f0 <__libc_start_main@plt>
  4007d9:	hlt    
  4007da:	nop    WORD PTR [rax+rax*1+0x0]

00000000004007e0 <deregister_tm_clones>:
  4007e0:	mov    eax,0x403077
  4007e5:	push   rbp
  4007e6:	sub    rax,0x403070
  4007ec:	cmp    rax,0xe
  4007f0:	mov    rbp,rsp
  4007f3:	jbe    400810 <deregister_tm_clones+0x30>
  4007f5:	mov    eax,0x0
  4007fa:	test   rax,rax
  4007fd:	je     400810 <deregister_tm_clones+0x30>
  4007ff:	pop    rbp
  400800:	mov    edi,0x403070
  400805:	jmp    rax
  400807:	nop    WORD PTR [rax+rax*1+0x0]
  400810:	pop    rbp
  400811:	ret    
  400812:	nop    DWORD PTR [rax+0x0]
  400816:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000400820 <register_tm_clones>:
  400820:	mov    esi,0x403070
  400825:	push   rbp
  400826:	sub    rsi,0x403070
  40082d:	sar    rsi,0x3
  400831:	mov    rbp,rsp
  400834:	mov    rax,rsi
  400837:	shr    rax,0x3f
  40083b:	add    rsi,rax
  40083e:	sar    rsi,1
  400841:	je     400858 <register_tm_clones+0x38>
  400843:	mov    eax,0x0
  400848:	test   rax,rax
  40084b:	je     400858 <register_tm_clones+0x38>
  40084d:	pop    rbp
  40084e:	mov    edi,0x403070
  400853:	jmp    rax
  400855:	nop    DWORD PTR [rax]
  400858:	pop    rbp
  400859:	ret    
  40085a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000400860 <__do_global_dtors_aux>:
  400860:	cmp    BYTE PTR [rip+0x2819],0x0        # 403080 <completed.7594>
  400867:	jne    40087a <__do_global_dtors_aux+0x1a>
  400869:	push   rbp
  40086a:	mov    rbp,rsp
  40086d:	call   4007e0 <deregister_tm_clones>
  400872:	pop    rbp
  400873:	mov    BYTE PTR [rip+0x2806],0x1        # 403080 <completed.7594>
  40087a:	repz ret 
  40087c:	nop    DWORD PTR [rax+0x0]

0000000000400880 <frame_dummy>:
  400880:	mov    edi,0x402df8
  400885:	cmp    QWORD PTR [rdi],0x0
  400889:	jne    400890 <frame_dummy+0x10>
  40088b:	jmp    400820 <register_tm_clones>
  40088d:	nop    DWORD PTR [rax]
  400890:	mov    eax,0x0
  400895:	test   rax,rax
  400898:	je     40088b <frame_dummy+0xb>
  40089a:	push   rbp
  40089b:	mov    rbp,rsp
  40089e:	call   rax
  4008a0:	pop    rbp
  4008a1:	jmp    400820 <register_tm_clones>
  4008a6:	nop    WORD PTR cs:[rax+rax*1+0x0]

00000000004008b0 <perrf>:
  4008b0:	push   rbp
  4008b1:	mov    rbp,rsp
  4008b4:	sub    rsp,0x180
  4008bb:	test   al,al
  4008bd:	movaps XMMWORD PTR [rbp-0xe0],xmm7
  4008c4:	movaps XMMWORD PTR [rbp-0xf0],xmm6
  4008cb:	movaps XMMWORD PTR [rbp-0x100],xmm5
  4008d2:	movaps XMMWORD PTR [rbp-0x110],xmm4
  4008d9:	movaps XMMWORD PTR [rbp-0x120],xmm3
  4008e0:	movaps XMMWORD PTR [rbp-0x130],xmm2
  4008e7:	movaps XMMWORD PTR [rbp-0x140],xmm1
  4008ee:	movaps XMMWORD PTR [rbp-0x150],xmm0
  4008f5:	mov    QWORD PTR [rbp-0x158],rdi
  4008fc:	mov    QWORD PTR [rbp-0x160],r9
  400903:	mov    QWORD PTR [rbp-0x168],r8
  40090a:	mov    QWORD PTR [rbp-0x170],rcx
  400911:	mov    QWORD PTR [rbp-0x178],rdx
  400918:	mov    QWORD PTR [rbp-0x180],rsi
  40091f:	je     400983 <perrf+0xd3>
  400925:	movaps xmm0,XMMWORD PTR [rbp-0x150]
  40092c:	movaps XMMWORD PTR [rbp-0xa0],xmm0
  400933:	movaps xmm1,XMMWORD PTR [rbp-0x140]
  40093a:	movaps XMMWORD PTR [rbp-0x90],xmm1
  400941:	movaps xmm2,XMMWORD PTR [rbp-0x130]
  400948:	movaps XMMWORD PTR [rbp-0x80],xmm2
  40094c:	movaps xmm3,XMMWORD PTR [rbp-0x120]
  400953:	movaps XMMWORD PTR [rbp-0x70],xmm3
  400957:	movaps xmm4,XMMWORD PTR [rbp-0x110]
  40095e:	movaps XMMWORD PTR [rbp-0x60],xmm4
  400962:	movaps xmm5,XMMWORD PTR [rbp-0x100]
  400969:	movaps XMMWORD PTR [rbp-0x50],xmm5
  40096d:	movaps xmm6,XMMWORD PTR [rbp-0xf0]
  400974:	movaps XMMWORD PTR [rbp-0x40],xmm6
  400978:	movaps xmm7,XMMWORD PTR [rbp-0xe0]
  40097f:	movaps XMMWORD PTR [rbp-0x30],xmm7
  400983:	mov    rax,QWORD PTR [rbp-0x160]
  40098a:	mov    QWORD PTR [rbp-0xa8],rax
  400991:	mov    rcx,QWORD PTR [rbp-0x168]
  400998:	mov    QWORD PTR [rbp-0xb0],rcx
  40099f:	mov    rdx,QWORD PTR [rbp-0x170]
  4009a6:	mov    QWORD PTR [rbp-0xb8],rdx
  4009ad:	mov    rsi,QWORD PTR [rbp-0x178]
  4009b4:	mov    QWORD PTR [rbp-0xc0],rsi
  4009bb:	mov    rdi,QWORD PTR [rbp-0x180]
  4009c2:	mov    QWORD PTR [rbp-0xc8],rdi
  4009c9:	mov    r8,QWORD PTR [rbp-0x158]
  4009d0:	mov    QWORD PTR [rbp-0x8],r8
  4009d4:	lea    r8,[rbp-0xd0]
  4009db:	mov    QWORD PTR [rbp-0x10],r8
  4009df:	lea    r8,[rbp+0x10]
  4009e3:	mov    QWORD PTR [rbp-0x18],r8
  4009e7:	mov    DWORD PTR [rbp-0x1c],0x30
  4009ee:	mov    DWORD PTR [rbp-0x20],0x8
  4009f5:	mov    rsi,QWORD PTR [rbp-0x8]
  4009f9:	mov    edi,0x1
  4009fe:	lea    rdx,[rbp-0x20]
  400a02:	call   400a37 <error_print>
  400a07:	add    rsp,0x180
  400a0e:	pop    rbp
  400a0f:	ret    
  400a10:	movabs rsi,0x401020
  400a1a:	mov    rdi,QWORD PTR ds:0x4030c0
  400a22:	mov    al,0x0
  400a24:	call   400790 <fprintf@plt>
  400a29:	mov    DWORD PTR [rbp-0x20],eax
  400a2c:	mov    edi,0x1
  400a31:	call   4007a0 <exit@plt>
  400a36:	nop

0000000000400a37 <error_print>:
  400a37:	push   rbp
  400a38:	mov    rbp,rsp
  400a3b:	sub    rsp,0x20
  400a3f:	mov    DWORD PTR [rbp-0x4],edi
  400a42:	mov    QWORD PTR [rbp-0x10],rsi
  400a46:	mov    QWORD PTR [rbp-0x18],rdx
  400a4a:	mov    rdi,QWORD PTR ds:0x4030c0
  400a52:	mov    rsi,QWORD PTR [rbp-0x10]
  400a56:	mov    rdx,QWORD PTR [rbp-0x18]
  400a5a:	call   400770 <vfprintf@plt>
  400a5f:	cmp    DWORD PTR [rbp-0x4],0x0
  400a63:	mov    DWORD PTR [rbp-0x1c],eax
  400a66:	je     400a10 <perrf+0x160>
  400a6c:	movabs rdi,0x40101e
  400a76:	call   400780 <perror@plt>
  400a7b:	jmp    400a2c <perrf+0x17c>
  400a80:	cmp    DWORD PTR [rbp-0x8],0x2
  400a84:	jle    400ab1 <error_print+0x7a>
  400a8a:	movabs rdi,0x401018
  400a94:	mov    rsi,QWORD PTR ds:0x403088
  400a9c:	mov    rdx,QWORD PTR ds:0x403090
  400aa4:	mov    rcx,QWORD PTR ds:0x403098
  400aac:	call   400ec0 <report>
  400ab1:	xor    eax,eax
  400ab3:	add    rsp,0x20
  400ab7:	pop    rbp
  400ab8:	ret    
  400ab9:	nop    DWORD PTR [rax+0x0]

0000000000400abd <main>:
  400abd:	push   rbp
  400abe:	mov    rbp,rsp
  400ac1:	sub    rsp,0x20
  400ac5:	mov    DWORD PTR [rbp-0x4],0x0
  400acc:	mov    DWORD PTR [rbp-0x8],edi
  400acf:	mov    QWORD PTR [rbp-0x10],rsi
  400ad3:	cmp    DWORD PTR [rbp-0x8],0x2
  400ad7:	jge    400aee <main+0x31>
  400add:	movabs rdi,0x400fff
  400ae7:	mov    al,0x0
  400ae9:	call   400c20 <errf>
  400aee:	mov    DWORD PTR [rbp-0x14],0x1
  400af5:	mov    eax,DWORD PTR [rbp-0x14]
  400af8:	cmp    eax,DWORD PTR [rbp-0x8]
  400afb:	jge    400a80 <error_print+0x49>
  400b01:	movsxd rax,DWORD PTR [rbp-0x14]
  400b05:	mov    rcx,QWORD PTR [rbp-0x10]
  400b09:	mov    rdi,QWORD PTR [rcx+rax*8]
  400b0d:	call   400b20 <counter>
  400b12:	mov    eax,DWORD PTR [rbp-0x14]
  400b15:	add    eax,0x1
  400b18:	mov    DWORD PTR [rbp-0x14],eax
  400b1b:	jmp    400af5 <main+0x38>

0000000000400b20 <counter>:
  400b20:	push   rbp
  400b21:	mov    rbp,rsp
  400b24:	sub    rsp,0x20
  400b28:	movabs rsi,0x400fe7
  400b32:	mov    QWORD PTR [rbp-0x8],rdi
  400b36:	mov    rdi,QWORD PTR [rbp-0x8]
  400b3a:	call   400750 <fopen@plt>
  400b3f:	mov    QWORD PTR [rbp-0x10],rax
  400b43:	cmp    QWORD PTR [rbp-0x10],0x0
  400b48:	jne    400b63 <counter+0x43>
  400b4e:	movabs rdi,0x400fe9
  400b58:	mov    rsi,QWORD PTR [rbp-0x8]
  400b5c:	mov    al,0x0
  400b5e:	call   4008b0 <perrf>
  400b63:	mov    QWORD PTR ds:0x4030a8,0x0
  400b6f:	mov    QWORD PTR ds:0x4030b0,0x0
  400b7b:	mov    QWORD PTR ds:0x4030a0,0x0
  400b87:	mov    rdi,QWORD PTR [rbp-0x10]
  400b8b:	call   400dc9 <getword>
  400b90:	cmp    eax,0x0
  400b93:	je     400b9e <counter+0x7e>
  400b99:	jmp    400b87 <counter+0x67>
  400b9e:	mov    rdi,QWORD PTR [rbp-0x10]
  400ba2:	call   400760 <fclose@plt>
  400ba7:	mov    rdi,QWORD PTR [rbp-0x8]
  400bab:	mov    rsi,QWORD PTR ds:0x4030a0
  400bb3:	mov    rdx,QWORD PTR ds:0x4030b0
  400bbb:	mov    rcx,QWORD PTR ds:0x4030a8
  400bc3:	mov    DWORD PTR [rbp-0x14],eax
  400bc6:	call   400ec0 <report>
  400bcb:	mov    rcx,QWORD PTR ds:0x4030a0
  400bd3:	add    rcx,QWORD PTR ds:0x403088
  400bdb:	mov    QWORD PTR ds:0x403088,rcx
  400be3:	mov    rcx,QWORD PTR ds:0x4030b0
  400beb:	add    rcx,QWORD PTR ds:0x403090
  400bf3:	mov    QWORD PTR ds:0x403090,rcx
  400bfb:	mov    rcx,QWORD PTR ds:0x4030a8
  400c03:	add    rcx,QWORD PTR ds:0x403098
  400c0b:	mov    QWORD PTR ds:0x403098,rcx
  400c13:	add    rsp,0x20
  400c17:	pop    rbp
  400c18:	ret    
  400c19:	nop    DWORD PTR [rax+0x0]

0000000000400c20 <errf>:
  400c20:	push   rbp
  400c21:	mov    rbp,rsp
  400c24:	sub    rsp,0x180
  400c2b:	test   al,al
  400c2d:	movaps XMMWORD PTR [rbp-0xe0],xmm7
  400c34:	movaps XMMWORD PTR [rbp-0xf0],xmm6
  400c3b:	movaps XMMWORD PTR [rbp-0x100],xmm5
  400c42:	movaps XMMWORD PTR [rbp-0x110],xmm4
  400c49:	movaps XMMWORD PTR [rbp-0x120],xmm3
  400c50:	movaps XMMWORD PTR [rbp-0x130],xmm2
  400c57:	movaps XMMWORD PTR [rbp-0x140],xmm1
  400c5e:	movaps XMMWORD PTR [rbp-0x150],xmm0
  400c65:	mov    QWORD PTR [rbp-0x158],rdi
  400c6c:	mov    QWORD PTR [rbp-0x160],r9
  400c73:	mov    QWORD PTR [rbp-0x168],r8
  400c7a:	mov    QWORD PTR [rbp-0x170],rcx
  400c81:	mov    QWORD PTR [rbp-0x178],rdx
  400c88:	mov    QWORD PTR [rbp-0x180],rsi
  400c8f:	je     400cf3 <errf+0xd3>
  400c95:	movaps xmm0,XMMWORD PTR [rbp-0x150]
  400c9c:	movaps XMMWORD PTR [rbp-0xa0],xmm0
  400ca3:	movaps xmm1,XMMWORD PTR [rbp-0x140]
  400caa:	movaps XMMWORD PTR [rbp-0x90],xmm1
  400cb1:	movaps xmm2,XMMWORD PTR [rbp-0x130]
  400cb8:	movaps XMMWORD PTR [rbp-0x80],xmm2
  400cbc:	movaps xmm3,XMMWORD PTR [rbp-0x120]
  400cc3:	movaps XMMWORD PTR [rbp-0x70],xmm3
  400cc7:	movaps xmm4,XMMWORD PTR [rbp-0x110]
  400cce:	movaps XMMWORD PTR [rbp-0x60],xmm4
  400cd2:	movaps xmm5,XMMWORD PTR [rbp-0x100]
  400cd9:	movaps XMMWORD PTR [rbp-0x50],xmm5
  400cdd:	movaps xmm6,XMMWORD PTR [rbp-0xf0]
  400ce4:	movaps XMMWORD PTR [rbp-0x40],xmm6
  400ce8:	movaps xmm7,XMMWORD PTR [rbp-0xe0]
  400cef:	movaps XMMWORD PTR [rbp-0x30],xmm7
  400cf3:	mov    rax,QWORD PTR [rbp-0x160]
  400cfa:	mov    QWORD PTR [rbp-0xa8],rax
  400d01:	mov    rcx,QWORD PTR [rbp-0x168]
  400d08:	mov    QWORD PTR [rbp-0xb0],rcx
  400d0f:	mov    rdx,QWORD PTR [rbp-0x170]
  400d16:	mov    QWORD PTR [rbp-0xb8],rdx
  400d1d:	mov    rsi,QWORD PTR [rbp-0x178]
  400d24:	mov    QWORD PTR [rbp-0xc0],rsi
  400d2b:	mov    rdi,QWORD PTR [rbp-0x180]
  400d32:	mov    QWORD PTR [rbp-0xc8],rdi
  400d39:	mov    r8,QWORD PTR [rbp-0x158]
  400d40:	mov    QWORD PTR [rbp-0x8],r8
  400d44:	lea    r8,[rbp-0xd0]
  400d4b:	mov    QWORD PTR [rbp-0x10],r8
  400d4f:	lea    r8,[rbp+0x10]
  400d53:	mov    QWORD PTR [rbp-0x18],r8
  400d57:	mov    DWORD PTR [rbp-0x1c],0x30
  400d5e:	mov    DWORD PTR [rbp-0x20],0x8
  400d65:	mov    rsi,QWORD PTR [rbp-0x8]
  400d69:	xor    edi,edi
  400d6b:	lea    rdx,[rbp-0x20]
  400d6f:	call   400a37 <error_print>
  400d74:	add    rsp,0x180
  400d7b:	pop    rbp
  400d7c:	ret    
  400d7d:	nop    DWORD PTR [rax]
  400d80:	jmp    400d85 <errf+0x165>
  400d85:	mov    rdi,QWORD PTR [rbp-0x10]
  400d89:	call   400730 <_IO_getc@plt>
  400d8e:	mov    DWORD PTR [rbp-0x14],eax
  400d91:	cmp    eax,0xffffffff
  400d94:	je     400e17 <getword+0x4e>
  400d9a:	mov    eax,DWORD PTR [rbp-0x14]
  400d9d:	mov    cl,al
  400d9f:	movzx  edi,cl
  400da2:	call   400f10 <isword>
  400da7:	cmp    eax,0x0
  400daa:	je     400e89 <getword+0xc0>
  400db0:	mov    rax,QWORD PTR ds:0x4030b0
  400db8:	add    rax,0x1
  400dbc:	mov    QWORD PTR ds:0x4030b0,rax
  400dc4:	jmp    400e17 <getword+0x4e>

0000000000400dc9 <getword>:
  400dc9:	push   rbp
  400dca:	mov    rbp,rsp
  400dcd:	sub    rsp,0x20
  400dd1:	mov    QWORD PTR [rbp-0x10],rdi
  400dd5:	mov    DWORD PTR [rbp-0x18],0x0
  400ddc:	mov    rdi,QWORD PTR [rbp-0x10]
  400de0:	call   400720 <feof@plt>
  400de5:	cmp    eax,0x0
  400de8:	je     400d80 <errf+0x160>
  400dee:	mov    DWORD PTR [rbp-0x4],0x0
  400df5:	jmp    400e09 <getword+0x40>
  400dfa:	cmp    DWORD PTR [rbp-0x14],0xffffffff
  400dfe:	setne  al
  400e01:	and    al,0x1
  400e03:	movzx  ecx,al
  400e06:	mov    DWORD PTR [rbp-0x4],ecx
  400e09:	mov    eax,DWORD PTR [rbp-0x4]
  400e0c:	add    rsp,0x20
  400e10:	pop    rbp
  400e11:	ret    
  400e12:	nop    DWORD PTR [rax+rax*1+0x0]
  400e17:	jmp    400e1c <getword+0x53>
  400e1c:	cmp    DWORD PTR [rbp-0x14],0xffffffff
  400e20:	je     400dfa <getword+0x31>
  400e26:	mov    rax,QWORD PTR ds:0x4030a0
  400e2e:	add    rax,0x1
  400e32:	mov    QWORD PTR ds:0x4030a0,rax
  400e3a:	cmp    DWORD PTR [rbp-0x14],0xa
  400e3e:	jne    400e58 <getword+0x8f>
  400e44:	mov    rax,QWORD PTR ds:0x4030a8
  400e4c:	add    rax,0x1
  400e50:	mov    QWORD PTR ds:0x4030a8,rax
  400e58:	mov    eax,DWORD PTR [rbp-0x14]
  400e5b:	mov    cl,al
  400e5d:	movzx  edi,cl
  400e60:	call   400f10 <isword>
  400e65:	cmp    eax,0x0
  400e68:	jne    400e73 <getword+0xaa>
  400e6e:	jmp    400dfa <getword+0x31>
  400e73:	jmp    400e78 <getword+0xaf>
  400e78:	mov    rdi,QWORD PTR [rbp-0x10]
  400e7c:	call   400730 <_IO_getc@plt>
  400e81:	mov    DWORD PTR [rbp-0x14],eax
  400e84:	jmp    400e1c <getword+0x53>
  400e89:	mov    rax,QWORD PTR ds:0x4030a0
  400e91:	add    rax,0x1
  400e95:	mov    QWORD PTR ds:0x4030a0,rax
  400e9d:	cmp    DWORD PTR [rbp-0x14],0xa
  400ea1:	jne    400ebb <getword+0xf2>
  400ea7:	mov    rax,QWORD PTR ds:0x4030a8
  400eaf:	add    rax,0x1
  400eb3:	mov    QWORD PTR ds:0x4030a8,rax
  400ebb:	jmp    400d85 <errf+0x165>

0000000000400ec0 <report>:
  400ec0:	push   rbp
  400ec1:	mov    rbp,rsp
  400ec4:	sub    rsp,0x30
  400ec8:	movabs rax,0x400fd4
  400ed2:	mov    QWORD PTR [rbp-0x8],rdi
  400ed6:	mov    QWORD PTR [rbp-0x10],rsi
  400eda:	mov    QWORD PTR [rbp-0x18],rdx
  400ede:	mov    QWORD PTR [rbp-0x20],rcx
  400ee2:	mov    rsi,QWORD PTR [rbp-0x20]
  400ee6:	mov    rdx,QWORD PTR [rbp-0x18]
  400eea:	mov    rcx,QWORD PTR [rbp-0x10]
  400eee:	mov    r8,QWORD PTR [rbp-0x8]
  400ef2:	mov    rdi,rax
  400ef5:	mov    al,0x0
  400ef7:	call   400710 <printf@plt>
  400efc:	mov    DWORD PTR [rbp-0x24],eax
  400eff:	add    rsp,0x30
  400f03:	pop    rbp
  400f04:	ret    
  400f05:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

0000000000400f10 <isword>:
  400f10:	push   rbp
  400f11:	mov    rbp,rsp
  400f14:	sub    rsp,0x10
  400f18:	mov    al,dil
  400f1b:	mov    BYTE PTR [rbp-0x1],al
  400f1e:	movzx  edi,BYTE PTR [rbp-0x1]
  400f22:	movsxd rcx,edi
  400f25:	mov    QWORD PTR [rbp-0x10],rcx
  400f29:	call   400740 <__ctype_b_loc@plt>
  400f2e:	mov    rax,QWORD PTR [rax]
  400f31:	mov    rcx,QWORD PTR [rbp-0x10]
  400f35:	movzx  edi,WORD PTR [rax+rcx*2]
  400f39:	and    edi,0x400
  400f3f:	mov    eax,edi
  400f41:	add    rsp,0x10
  400f45:	pop    rbp
  400f46:	ret    
  400f47:	nop    WORD PTR [rax+rax*1+0x0]

0000000000400f50 <__libc_csu_init>:
  400f50:	push   r15
  400f52:	push   r14
  400f54:	mov    r15d,edi
  400f57:	push   r13
  400f59:	push   r12
  400f5b:	lea    r12,[rip+0x1ea6]        # 402e08 <__frame_dummy_init_array_entry>
  400f62:	push   rbp
  400f63:	lea    rbp,[rip+0x1ea6]        # 402e10 <__init_array_end>
  400f6a:	push   rbx
  400f6b:	mov    r14,rsi
  400f6e:	mov    r13,rdx
  400f71:	sub    rbp,r12
  400f74:	sub    rsp,0x8
  400f78:	sar    rbp,0x3
  400f7c:	call   4006b8 <_init>
  400f81:	test   rbp,rbp
  400f84:	je     400fa6 <__libc_csu_init+0x56>
  400f86:	xor    ebx,ebx
  400f88:	nop    DWORD PTR [rax+rax*1+0x0]
  400f90:	mov    rdx,r13
  400f93:	mov    rsi,r14
  400f96:	mov    edi,r15d
  400f99:	call   QWORD PTR [r12+rbx*8]
  400f9d:	add    rbx,0x1
  400fa1:	cmp    rbx,rbp
  400fa4:	jne    400f90 <__libc_csu_init+0x40>
  400fa6:	add    rsp,0x8
  400faa:	pop    rbx
  400fab:	pop    rbp
  400fac:	pop    r12
  400fae:	pop    r13
  400fb0:	pop    r14
  400fb2:	pop    r15
  400fb4:	ret    
  400fb5:	nop
  400fb6:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000400fc0 <__libc_csu_fini>:
  400fc0:	repz ret 

Disassembly of section .fini:

0000000000400fc4 <_fini>:
  400fc4:	sub    rsp,0x8
  400fc8:	add    rsp,0x8
  400fcc:	ret    
